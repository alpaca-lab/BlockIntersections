BlockIntersection:=function(bl)
local ll,i,j;
  ll:=List(bl,i->List(degs,j->Minimum(Position(unp,j),Position(unp,-j))){i});
  for i in [1..Length(ll)] do
    Sort(ll[i]); Print("[");
    for j in ll[i] do
      if uc.charParams[j][1][1]="" then Print("phi"); else Print(uc.charParams[j][1][1]); fi;
      Print(uc.charParams[j][1][2],",");
    od;
    Print("] <---->\n");
  od;
end;

BlockIntersectHC:=function(bl,hc,d)
local i,j,ind;
  for i in [1..Length(bl)] do
    Sort(bl[i]); Print("[");
    for j in bl[i] do ind:=hc[d][j];
      if uc.charParams[ind][1][1]="" then Print("phi");
           else Print(uc.charParams[ind][1][1]); fi;
      Print(uc.charParams[ind][1][2],",");
    od;
    Print("] <---->\n");
  od;
end;


##################################################
##################    G_2    #####################
##################################################17.12.24
x:=X(Cyclotomics);; x.name:="x";;
W:= CoxeterGroup("G",2);
uc:=UnipotentCharacters(W); Display(uc);
unp:=uc.degrees;;

## complete HC-parametrisation
hc:=[[1..6],
[1,2,3,4,8,7],
[2,10,6,9,1,8],
[],
[],
[2,5,1,9,7,10]];

###############
###   d=1
H:=Hecke(CoxeterGroup("G",2),[[1,-x],[1,-x]]);
bl2:=[[1,2,3,4],[5],[6]];
bl3:=[[1,2,6],[3],[4],[5]];
bl6:=[[1,2,5],[3],[4],[6]];

sch:=SchurElements(H);;

# the generic degrees are obtained by multiplying with the group order
# divided by Phi_6:
degs:=List(sch,i->(x^2-1)*(x^6-1)/(x-1)^2/i);;

# Now "degs" contains, up to sign, the degrees of the unipotent
# characters corresponding to the 6-HC-series parametrised by the above
# cyclotomic algebra. We adjust signs:
degs:=List(degs,i->i*SignInt(LeadingCoefficient(i)));

List(bl2,i->List(degs,i->Position(unp,i)){i});
List(bl3,i->List(degs,i->Position(unp,i)){i});
List(bl6,i->List(degs,i->Position(unp,i)){i});

[ [ 2, 1, 3, 4 ], [ 5 ], [ 6 ] ]
[ [ 2, 1, 6 ], [ 3 ], [ 4 ], [ 5 ] ]
[ [ 2, 1, 5 ], [ 3 ], [ 4 ], [ 6 ] ]

BlockIntersectHC(bl2,hc,1);
BlockIntersectHC(bl3,hc,1);
BlockIntersectHC(bl6,hc,1);

###############
###   d=2
H:=Hecke(CoxeterGroup("G",2),[[1,x],[1,x]]);
bl1:=[[1,2,3,4],[5],[6]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)/(x+1)^2/i);;

List(bl1,i->List(degs,i->Position(unp,i)){i});

[ [ 2, 1, 3, 4 ], [ 8 ], [ 7 ] ]

BlockIntersectHC(bl1,hc,2);

###############
###   d=3
H:=Hecke(ComplexReflectionGroup(6,1,1),[[1,-E(3)*x,x,-E(3)^2*x,x^2,-x]]);
bl1:=[[1,3,5],[2],[4],[6]];
bl6:=[[1,2],[3],[4,5],[6]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)/(x^2+x+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl6);

BlockIntersectHC(bl1,hc,3);
BlockIntersectHC(bl6,hc,3);


###############
###   d=6
H:=Hecke(ComplexReflectionGroup(6,1,1),[[1,x,x^2,E(3)*x,-x,E(3)^2*x]]);
bl1:=[[1,2,3],[4],[5],[6]];
bl3:=[[1,6],[2],[5],[3,4]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)/(x^2-x+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl3);

BlockIntersectHC(bl1,hc,6);
BlockIntersectHC(bl3,hc,6);



##################################################
##################    ^3D_4    ###################
##################################################17.12.24
x:=X(Cyclotomics);; x.name:="x";;
W:= ReflectionCoset(CoxeterGroup("D",4),(1,2,4));
uc:=UnipotentCharacters(W); Display(uc);
unp:=uc.degrees;;

###############
###   d=1
H:=Hecke(CoxeterGroup("G",2),[[1,-x],[1,-x^3]]);
bl2:=[[1,2,3,4],[5],[6]];
bl3:=[[1,2,6],[3,4,5]];
bl6:=[[1,2,3,4,6],[5]];
bl12:=[[1,2,5],[3],[4],[6]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8+x^4+1)/(x-1)/(x^3-1)/i);;

BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl6);
BlockIntersection(bl12);


###############
###   d=2
H:=Hecke(CoxeterGroup("G",2),[[1,x],[1,x^3]]);
bl1:=[[1,2,3,4],[5],[6]];
bl12:=[[1,2,5],[3],[4],[6]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8+x^4+1)/(x+1)/(x^3+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl12);


###############
###   d=3
H:=Hecke(ComplexReflectionGroup(4),[[1,x,x^2]]);
bl1:=[[1,2,3],[4,5,6],[7]];
bl6:=[[1,2,3,4,6,7],[5]];
bl12:=[[1,3,5],[2],[4],[6],[7]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8+x^4+1)/(x^2+x+1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl6);
BlockIntersection(bl12);

###############
###   d=6
H:=Hecke(ComplexReflectionGroup(4),[[1,-x,x^2]]);
bl1:=[[1,3,4,6,7],[2],[5]];
bl3:=[[1,2,3,4,6,7],[5]];
bl12:=[[1,3,5],[2],[4],[6],[7]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8+x^4+1)/(x^2-x+1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl3);
BlockIntersection(bl12);

###############
###   d=12
H:=Hecke(ComplexReflectionGroup(4,1,1),[[1,x^3,-x^3,x^6]]);
bl1:=[[1,2,4],[3]];
bl2:=[[1,3,4],[2]];
bl3:=[[1,2,4],[3]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8+x^4+1)/(x^4-x^2+1)/i);;
degs:=List(degs,i->i*SignInt(LeadingCoefficient(i)));

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);


##################################################
##################    H_2    #####################
##################################################12.2.25
x:=X(Cyclotomics);; x.name:="x";;
W:= CoxeterGroup("H",2);
uc:=UnipotentCharacters(W); Display(uc);
unp:=uc.degrees;;

###############
###   d=1
H:=Hecke(W,[[1,-x]]);
bl2:=[[1,2]];
bl5a:=[[1,2,3]];
bl5b:=[[1,2,4]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^5-1)/(x-1)^2/i);;

BlockIntersection(bl2);
BlockIntersection(bl5a);
BlockIntersection(bl5b);

gap> BlockIntersection(bl2);
[phi[ 1, 0 ],phi[ 1, 5 ],] <---->
gap> BlockIntersection(bl5a);
[phi[ 1, 0 ],phi[ 1, 5 ],phi[ 2, 1 ],] <---->
gap> BlockIntersection(bl5b);
[phi[ 1, 0 ],phi[ 1, 5 ],phi[ 2, 2 ],] <---->

###############
###   d=2
H:=Hecke(Weyl("A",1),[[1,x^5]]);
bl1:=[[1,2]];;
bl5a:=[[1,2]];;
bl5b:=[[1,2]];;

degs:=List(SchurElements(H),i->(x^2-1)*(x^5-1)/(x^2-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl5a);
BlockIntersection(bl5b);

gap> BlockIntersection(bl1);
[phi[ 1, 0 ],phi[ 1, 5 ],] <---->
gap> BlockIntersection(bl5a);
[phi[ 1, 0 ],phi[ 1, 5 ],] <---->
gap> BlockIntersection(bl5b);
[phi[ 1, 0 ],phi[ 1, 5 ],] <---->

###############
###   d=5a
H:=Hecke(ComplexReflectionGroup(5,1,1),[[1,x,E(5)^2*x,E(5)^3*x,x^2]]);
bl1:=[[1,2,5]]
bl2:=[[1,5]];;
bl5b:=[[1,4],[3,5]];;  # E(5)^2
bl5c:=[[1,3],[4,5]];;  # E(5)^3

degs:=List(SchurElements(H),i->(x^2-1)*(x^5-1)/(x-E(5))/(x-E(5)^4)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl5b);

gap> BlockIntersection(bl1);
[phi[ 1, 0 ],phi[ 1, 5 ],phi[ 2, 1 ],] <---->
gap> BlockIntersection(bl2);
[phi[ 1, 0 ],phi[ 1, 5 ],] <---->
gap> BlockIntersection(bl5b);
[phi[ 1, 5 ],I_2(5)[1,2][ 1 ],] <---->
[phi[ 1, 0 ],I_2(5)[1,2][ 1 ],] <---->

###############
###   d=5b
H:=Hecke(ComplexReflectionGroup(5,1,1),[[1,x,E(5)*x,E(5)^4*x,x^2]]);
bl1:=[[1,2,5]];;
bl2:=[[1,5]];;
bl5a:=[[1,4],[3,5]];;  # E(5)
bl5d:=[[1,3],[4,5]];;  # E(5)^4

degs:=List(SchurElements(H),i->(x^2-1)*(x^5-1)/(x-E(5)^2)/(x-E(5)^3)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl5b);

gap> BlockIntersection(bl1);
[phi[ 1, 0 ],phi[ 1, 5 ],phi[ 2, 2 ],] <---->
gap> BlockIntersection(bl2);
[phi[ 1, 0 ],phi[ 1, 5 ],] <---->
gap> BlockIntersection(bl5b);
[phi[ 1, 5 ],I_2(5)[1,2][ 1 ],] <---->
[phi[ 1, 0 ],I_2(5)[1,2][ 1 ],] <---->


##################################################
##################    H_3    #####################
##################################################19.12.24
x:=X(Cyclotomics);; x.name:="x";;
W:= CoxeterGroup("H",3);
uc:=UnipotentCharacters(W); Display(uc);
unp:=uc.degrees;;

hc:=[[1..10],
  [1,2,3,4,5,6,7,8,15,16],
  [1,3,10,9,4,2],
  [],
  [1,5,12,11,10,9,7,14,13,2],  # 5'
  [1,3,15,16,4,2],
  [1,6,12,11,10,9,8,14,13,2],  ## 5''
  [],[],
  [1,5,11,12,15,16,7,13,14,2]];

###############
###   d=1
H:=Hecke(W,[[1,-x]]);
bl2:=[[1,2,3,4,5,6,7,8]];
bl3:=[[2,4,10],[1,3,9]];
bl5a:=[[2,5,10],[1,7,9]];
bl5b:=[[2,6,10],[1,8,9]];
bl6:=[[1,2,3,4]];
bl10a:=[[1,2,5,7]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^10-1)/(x-1)^3/i);;

BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl5a);
BlockIntersection(bl6);
BlockIntersection(bl10a);

BlockIntersectHC(bl2,hc,1);        
BlockIntersectHC(bl3,hc,1);        
BlockIntersectHC(bl5a,hc,1);        
BlockIntersectHC(bl6,hc,1);        
BlockIntersectHC(bl10a,hc,1);        


###############
###   d=2
H:=Hecke(W,[[x,1]]);
bl1:=[[1,2,3,4,5,6,7,8]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^10-1)/(x+1)^3/i);;

BlockIntersection(bl1);


###############
###   d=3
H:=Hecke(ComplexReflectionGroup(6,1,1),[[1,x^4,x^5,-x^5,-x^6,-x^10]]);
bl1:=[[1,2,3],[4,5,6]];
bl5a:=[[1,3],[4,6]];
bl6:=[[1,5],[2,6]];
bl10a:=[[1,6]];

degs:=List(SchurElements(H),i->(x^4-1)*(x^12-1)*(x^20-1)/(x^6-1)/i);;
unp:=List(unp,i->Value(i,x^2));;

BlockIntersection(bl1);
BlockIntersection(bl5a);
BlockIntersection(bl6);
BlockIntersection(bl10a);

BlockIntersectHC(bl1,hc,3);        
BlockIntersectHC(bl5a,hc,3);        
BlockIntersectHC(bl6,hc,3);        
BlockIntersectHC(bl10a,hc,3);        


###############
###   d=5a
H:=Hecke(ComplexReflectionGroup(10,1,1),
  [[1,-x^2,-E(5)^2*x^2,-E(5)^3*x^2,x^3,-x^3,x^4,E(5)^2*x^4,E(5)^3*x^4,-x^6]]);
bl1:=[[1,5,7],[2,6,10]];
bl3:=[[1,5],[6,10]];
bl5b:=[[1,9],[3,10],[4,6],[5,8]];
bl10a:=[[1,3],[2,8],[4,7],[9,10]];
bl10b:=[[1,8],[3,9],[4,10]];

degs:=List(SchurElements(H),i->(x^4-1)*(x^12-1)*(x^20-1)/(x^2-1)/(x^2-E(5)^2)/(x^2-E(5)^3)/i);;

BlockIntersection(bl1);
BlockIntersection(bl3);
BlockIntersection(bl5b);
BlockIntersection(bl10a);
BlockIntersection(bl10b);

BlockIntersectHC(bl1,hc,5);        
BlockIntersectHC(bl3,hc,5);        
BlockIntersectHC(bl5b,hc,5);        
phi[ 1, 15 ],I_2(5)[1,3][ 2 ],] <---->
I_2(5)[1,2][ 1, 1 ],phi[ 1, 0 ],] <---->
I_2(5)[1,3][ 1, 1 ],phi[ 4, 3 ],] <---->
phi[ 4, 4 ],I_2(5)[1,2][ 2 ],] <---->
BlockIntersectHC(bl10a,hc,5);
phi[ 1, 15 ],I_2(5)[1,2][ 1, 1 ],] <---->
phi[ 3, 6 ],I_2(5)[1,2][ 2 ],] <---->
I_2(5)[1,3][ 1, 1 ],phi[ 3, 1 ],] <---->
I_2(5)[1,3][ 2 ],phi[ 1, 0 ],] <---->
BlockIntersectHC(bl10b,hc,5);
phi[ 1, 15 ],I_2(5)[1,2][ 2 ],] <---->
I_2(5)[1,2][ 1, 1 ],I_2(5)[1,3][ 2 ],] <---->
I_2(5)[1,3][ 1, 1 ],phi[ 1, 0 ],] <---->


###############
###   d=5b
H:=Hecke(ComplexReflectionGroup(10,1,1),
  [[1,-x^2,-E(5)*x^2,-E(5)^4*x^2,x^3,-x^3,x^4,E(5)*x^4,E(5)^4*x^4,-x^6]]);
bl5a:=[[1,9],[3,10],[4,6],[5,8]];

degs:=List(SchurElements(H),i->(x^4-1)*(x^12-1)*(x^20-1)/(x^2-1)/(x^2-E(5))/(x^2-E(5)^4)/i);;

BlockIntersection(bl5a);

BlockIntersectHC(bl5a,hc,7);        
phi[ 1, 15 ],I_2(5)[1,3][ 2 ],] <---->
I_2(5)[1,2][ 1, 1 ],phi[ 1, 0 ],] <---->
I_2(5)[1,3][ 1, 1 ],phi[ 4, 3 ],] <---->
phi[ 4, 4 ],I_2(5)[1,2][ 2 ],] <---->


###############
###   d=6
H:=Hecke(ComplexReflectionGroup(6,1,1),[[1,x^4,E(4)*x^5,-E(4)*x^5,x^6,x^10]]);
bl1:=[[1,2,5,6]];
bl3:=[[1,5],[2,6]];
bl5a:=[[1,6]];

degs:=List(SchurElements(H),i->(x^4-1)*(x^12-1)*(x^20-1)/(x^6+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl3);
BlockIntersection(bl5a);

BlockIntersectHC(bl1,hc,6);        
BlockIntersectHC(bl3,hc,6);        
BlockIntersectHC(bl5a,hc,6);        


###############
###   d=10a
H:=Hecke(ComplexReflectionGroup(10,1,1),[[1,x^2,E(5)^2*x^2,E(5)^3*x^2,E(4)*x^3,-E(4)*x^3,x^4,E(5)^2*x^4,E(5)^3*x^4,x^6]]);
bl1:=[[1,2,7,10],[3,8],[4,9]];
bl3:=[[1,10]];
bl5a:=[[1,9],[3,10],[4,8]];
bl5b:=[[1,4],[2,9],[3,7],[8,10]];

degs:=List(SchurElements(H),i->(x^4-1)*(x^12-1)*(x^20-1)/(x^2+1)/(x^2+E(5)^2)/(x^2+E(5)^3)/i);;

BlockIntersection(bl1);
BlockIntersection(bl3);
BlockIntersection(bl5a);
BlockIntersection(bl5b);

BlockIntersectHC(bl1,hc,10);        
BlockIntersectHC(bl3,hc,10);        
BlockIntersectHC(bl5a,hc,10);        


##################################################
##################    F_4    #####################
##################################################
x:=X(Cyclotomics);; x.name:="x";;
W:= CoxeterGroup("F",4);
uc:=UnipotentCharacters(W); Display(uc);
unp:=uc.degrees;;

hc:=[[1..25],
  [1,11,12,4,5,6,7,8,36,10,2,3,13,14,15,37,30,28,29,26,21,22,23,24,31],
  [1,7,2,5,9,6,3,8,4,20,22,18,24,25,21,19,23,17,34,35,37],
  [1,37,16,4,17,30,27,14,20,26,13,36,9,10,33,32],
  [],
  [1,5,11,7,36,6,12,8,4,26,22,28,24,31,21,29,23,30,34,35,16],
  [],
  [1,10,25,31,33,32,13,4],
  [],[],[],
  [1,17,30,15,27,20,26,4,33,32,34,35]];

###############
###   d=1
H:=Hecke(W,[[1,-x]]);
bl2:=[[1,2,3,4,5,6,7,8,10,11,12,13,14,15,21,22,23,24],[17,18,19,20]];
bl3:=[[1,2,3,4,5,6,7,8,9],[17,18,19,20,21,22,23,24,25]];
bl4:=[[5,18,8],[7,19,6],[1,17,10,9,14,16,13,20,4]];
bl6:=[[1,4,5,6,7,8,11,12,16,21,22,23,24]];
bl8:=[[1,4,10,13,25]];
bl12:=[[1,4,15,17,20]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^12-1)/(x-1)^4/i);;

BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl6);
BlockIntersection(bl8);
BlockIntersection(bl12);

###
H:=Hecke(CoxeterGroup("B",2),[[1,-x^3]]);
bl2:=[[1,3,4,5]]; bl6:=bl2;
bl4:=[[1],[2,3,4],[5]]; bl12:=bl4;

degs:=1/2*x*(x-1)^2*List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^12-1)/(x^2-1)/(x^4-1)/(x-1)^2/i);;

BlockIntersection(bl2);
BlockIntersection(bl4);
BlockIntersection(bl6);
BlockIntersection(bl12);

BlockIntersectHC(bl2,hc,1);
BlockIntersectHC(bl3,hc,1);
BlockIntersectHC(bl4,hc,1);
BlockIntersectHC(bl6,hc,1);
BlockIntersectHC(bl8,hc,1);
BlockIntersectHC(bl12,hc,1);


###############
###   d=2
H:=Hecke(W,[[1,x]]);
bl1:=[[1,2,3,4,5,6,7,8,10,11,12,13,14,15,21,22,23,24],[17,18,19,20]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^12-1)/(x+1)^4/i);;

BlockIntersection(bl1);

###
H:=Hecke(CoxeterGroup("B",2),[[1,x^3]]);
bl1:=[[1,3,4,5]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^12-1)/(x^2-1)/(x^4-1)/(x+1)^2/i);;

BlockIntersection(bl1);
 
BlockIntersectHC(bl1,hc,2);


###############
###   d=3
H:=Hecke(ComplexReflectionGroup(5),[[1,x,x^2]]);
bl1:=[[1..9],[10..18]];
bl4:=[[1,5,9,18,10,21],[2,6,16],[4,8,12]];
bl6:=[[1,6,8,15,17,20],[2,4,9,11,13,19]];
bl8:=[[1,9,14]];
bl12:=[[1,10,19],[9,18,20]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^12-1)/(x^2+x+1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl4);
BlockIntersection(bl6);
BlockIntersection(bl8);
BlockIntersection(bl12);

BlockIntersectHC(bl1,hc,3);
BlockIntersectHC(bl4,hc,3);
BlockIntersectHC(bl6,hc,3);
BlockIntersectHC(bl8,hc,3);
BlockIntersectHC(bl12,hc,3);


###############
###   d=4
H:=Hecke(ComplexReflectionGroup(8),[[1,-x,x,x^2]]);
bl1:=[[1,3,4,5,8,9,11,13,14],[6,7,10]];
bl2:=[[1,2,4,6,8,10,11,12,14],[5,7,9]];
bl3:=[[1,2,4,5,9,13]];
bl8:=[[1,11,15],[4,14,16]];
bl12:=[[1,4,7],[5,10,16],[6,9,15]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^12-1)/(x^2+1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl3);
BlockIntersection(bl8);
BlockIntersection(bl12);

BlockIntersectHC(bl1,hc,4);
BlockIntersectHC(bl3,hc,4);
BlockIntersectHC(bl8,hc,4);
BlockIntersectHC(bl12,hc,4);

###
H:=Hecke(ComplexReflectionGroup(4,1,1),[[1,x^3,-x^3,x^6]]);
bl1:=[[1,2,4],[3]]; bl3:=bl1;

degs:=1/2*x*(x^2+1)*List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^12-1)/(x^2-1)/(x^4-1)/(x^2+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl3);


###############
###   d=6
H:=Hecke(ComplexReflectionGroup(5),[[1,-x,x^2]]);
bl1:=[[1,3,7,9,4,8,2,6,11,17,13,15,21],[10,12,16,18]];
bl3:=[[1,6,8,15,17,19],[2,4,9,11,13,20]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^12-1)/(x^2-x+1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl3);

BlockIntersectHC(bl1,hc,6);
BlockIntersectHC(bl3,hc,6);


###############
###   d=8
H:=Hecke(ComplexReflectionGroup(8,1,1),[[1,x^2,x^3,-x^3,E(4)*x^3,-E(4)*x^3,x^4,x^6]]);
bl1:=[[1,2,3,7,8]];
bl3:=[[1,3,8]];
bl4:=[[1,5,7],[2,6,8]];
bl12:=[[1,6],[5,8]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^12-1)/(x^4+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl12);

BlockIntersectHC(bl1,hc,8);
BlockIntersectHC(bl3,hc,8);
BlockIntersectHC(bl4,hc,8);
BlockIntersectHC(bl12,hc,8);


###############
###   d=12
H:=Hecke(ComplexReflectionGroup(12,1,1),
  [[1,x,-x,x^2,-x^2,x^3,-x^3,x^4,E(4)*x^2,-E(4)*x^2,E(3)*x^2,E(3)^2*x^2]]);
bl1:=[[1,2,4,6,8],[3,5,7]];
bl3:=[[1,6,11],[2,8,12]];
bl4:=[[1,5,8],[2,7,10],[3,6,9]];
bl8:=[[1,10],[8,9]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^12-1)/(x^4-x^2+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl8);

BlockIntersectHC(bl1,hc,12);
BlockIntersectHC(bl3,hc,12);
BlockIntersectHC(bl4,hc,12);
BlockIntersectHC(bl8,hc,12);


##################################################
##################    H_4    #####################
##################################################
x:=X(Cyclotomics);; x.name:="x";;
W:= CoxeterGroup("H",4);
uc:=UnipotentCharacters(W); Display(uc);
unp:=uc.degrees;;

###############
###   d=1
H:=Hecke(W,[[1,-x]]);
bl2:=[[1,2,3,4,5,6,7,8,11,12,13,14,15,22,27,28,29,30,31,32],[18,21],[19,20]];
bl3:=[[1,2,9,15,18,19,27,28,33],[3,4,5,6,10,16,17,20,21]];
bl4:=[[1,2,10,11,12,13,14,23,24,27,28]];
bl5a:=[[1,2,8,9,11,12,18,19,26],[3,4,17,20,21,24,31,32,34],[5,6,10],[13,14,22]];
bl5b:=[[1,2,7,9,13,14,18,19,25],[5,6,16,20,21,23,31,32,34],[3,4,10],[11,12,22]];
bl6:=[[1,2,3,4,5,6,22,25,26,27,28]];
bl10a:=[[1,2,5,6,13,14,26,30,31,32,33],[3,4,11,12,15]];
bl10b:=[[1,2,3,4,11,12,25,29,31,32,33],[5,6,13,14,15]];
bl12:=[[1,2,27,28,34]];
bl15:=[[1,2,18,19,29],[5,6,20,21,24]];
bl20:=[[1,2,11,12,16]];
bl30:=[[1,2,3,4,7]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^12-1)*(x^20-1)*(x^30-1)/(x-1)^4/i);;

BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5a);
BlockIntersection(bl5b);
BlockIntersection(bl6);
BlockIntersection(bl10a);
BlockIntersection(bl10b);
BlockIntersection(bl12);
BlockIntersection(bl15);
BlockIntersection(bl20);
BlockIntersection(bl30);

####
H:=Hecke(ComplexReflectionGroup(10,10,2),[[1,-x],[1,-x^5]]);
bl2:=[[1,2,3,4]];
bl5a:=[[1,4,8],[2,3,5]];  # x=E(5),E(5)^4
bl5b:=[[1,4,6],[2,3,7]];  # x=E(5)^2,E(5)^3
bl10a:=[[1,2,3,4,7]];  # x=E(10),E(10)^9
bl10b:=[[1,2,3,4,5]];  # x=E(10)^3,E(10)^7
bl15a:=[[1,4,6]];  # x=E(15),E(15)^4,E(15)^11,E(15)^14
bl15b:=[[1,4,8]];  # x=E(15)^2,E(15)^7,E(15)^8,E(15)^13
bl20a:=[[2,3,8]];  # x=E(20),E(20)^9,E(20)^11,E(20)^19
bl20b:=[[2,3,6]];  # x=E(20)^3,E(20)^7,E(20)^13,E(20)^17
bl30a:=[[1,4,5]];  # x=E(30),E(30)^11,#x=E(30)^19,E(30)^29
bl30b:=[[1,4,7]];  # x=E(30)^7,E(30)^13,#x=E(30)^17,E(30)^23

degs:=ER(5)/5*x*List(SchurElements(H),i->(x^2-1)*(x^12-1)*(x^20-1)*(x^30-1)/(x^5-1)/(x-1)/i);;

BlockIntersection(bl2);
BlockIntersection(bl5a);
BlockIntersection(bl5b);
BlockIntersection(bl10a);
BlockIntersection(bl10b);
BlockIntersection(bl15a);
BlockIntersection(bl15b);
BlockIntersection(bl20a);
BlockIntersection(bl20b);
BlockIntersection(bl30a);
BlockIntersection(bl30b);


###############
###   d=2
H:=Hecke(W,[[1,x]]);
bl1:=[[1,2,3,4,5,6,7,8,11,12,13,14,15,22,27,28,29,30,31,32]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^12-1)*(x^20-1)*(x^30-1)/(x+1)^4/i);;

BlockIntersection(bl1);
BlockIntersection(bl3);


###############
###   d=3
H:=Hecke(ComplexReflectionGroup(20),[[1,x,x^2]]);
bl1:=[[1,2,3,19,20,21,22,23,24],[4,5,6,7,8,9,16,17,18]];
bl2:=[[1,3,4,5,8,9,14,15,20,22,24],[16,21],[18,19]];
bl4:=[[1,3,17,22,24,26]];
bl5a:=[[1,3,15,19,21,23],[4,6,8,16,18,26],[5,9,17]]; #x=E(5),E(5)^4
bl5b:=[[1,3,14,19,21,23],[5,7,9,16,18,26],[4,8,17]]; #x=E(5)^2,E(5)^3
bl6:=[[1,4,5,10,11,22],[3,8,9,12,13,24]];
bl10a:=[[1,2,3,5,9,15],[4,8,20]]; #x=E(10),E(10)^9
bl10b:=[[1,2,3,4,8,14],[5,9,20]]; #x=E(10)^3,E(10)^7
bl12:=[[1,22,25],[3,24,27]];
bl15a:=[[1,10,19],[9,18,25],[5,16,27],[3,12,21]]; #x=E(15),E(15)^4
bl15b:=[[1,13,19],[8,18,27],[4,16,25],[3,11,21]]; #x=E(15)^2,E(15)^8
bl15c:=[[1,11,19],[8,18,25],[4,16,27],[3,13,21]]; #x=E(15)^7,E(15)^13
bl15d:=[[1,12,19],[9,18,27],[5,16,25],[3,10,21]]; #x=E(15)^11,E(15)^14
bl20a:=[[1,3,7]]; #x=E(20),E(20)^9,E(20)^11,E(20)^19
bl20b:=[[1,3,6]]; #x=E(20)^3,E(20)^7,E(20)^13,E(20)^17
bl30a:=[[1,4,12],[3,8,10]]; #x=E(30),E(30)^19
bl30b:=[[1,5,13],[3,9,11]]; #x=E(30)^7,E(30)^13
bl30c:=[[1,4,10],[3,8,12]]; #x=E(30)^11,E(30)^29
bl30d:=[[1,5,11],[3,9,13]]; #x=E(30)^17,E(30)^23

degs:=List(SchurElements(H),i->(x^2-1)*(x^12-1)*(x^20-1)*(x^30-1)/(x^2+x+1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl4);
BlockIntersection(bl5a);
BlockIntersection(bl5b);
BlockIntersection(bl6);
BlockIntersection(bl10a);
BlockIntersection(bl10b);
BlockIntersection(bl12);
BlockIntersection(bl15a);
BlockIntersection(bl15b);
BlockIntersection(bl20a);
BlockIntersection(bl20b);
BlockIntersection(bl30a);
BlockIntersection(bl30b);


###############
###   d=4
H:=Hecke(ComplexReflectionGroup(22),[[1,x^2]]);
bl1:=[[1,2,3,6,7,8,9,10,15,16,18]];
bl2:=[[1,2,4,5,7,8,9,10,15,16,17]];
bl3:=[[1,2,14,15,16,18]];
bl5a:=[[1,2,3,7,9,14],[8,10,18]]; #x=E(5),E(5)^4
bl5b:=[[1,2,6,8,10,14], [7,9,18]];; #x=E(5)^2, E(5)^3
bl6:=[[1,2,12,15,16,17]];
bl10a:=[[1,2,4,8,10,12],[7,9,17]];  #x=E(10),E(10)^9
bl10b:=[[1,2,5,7,9,12],[8,10,17]];  #x=E(10)^3,E(10)^7
  #bl10:=[[2,9,14],[1,7,12]];  ???
bl12:=[[1,11,15],[2,13,16]];
bl15a:=[[1,2,3]];; #x=E(15), E(15)^4, E(15)^11, E(15)^14
bl15b:=[[1,2,6]];; #x=E(15)^2, E(15)^7, E(15)^8, E(15)^13
bl20a:=[[1,9,11],[2,7,13]]; #x=E(20),E(20)^9,E(20)^11,E(20)^19
bl20b:=[[1,10,11],[2,8,13]]; #x=E(20)^3,E(20)^7,E(20)^13,E(20)^17
bl30a:=[[1,2,4]]; #x=E(30),E(30)^11,#x=E(30)^19,E(30)^29
bl30b:=[[1,2,5]]; #x=E(30)^7,E(30)^13,#x=E(30)^17,E(30)^23

degs:=List(SchurElements(H),i->(x^2-1)*(x^12-1)*(x^20-1)*(x^30-1)/(x^2+1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl5a);
BlockIntersection(bl5b);
BlockIntersection(bl6);
BlockIntersection(bl10a);
BlockIntersection(bl10b);
BlockIntersection(bl12);
BlockIntersection(bl15);
BlockIntersection(bl15b);
BlockIntersection(bl20a);
BlockIntersection(bl20b);
BlockIntersection(bl30a);
BlockIntersection(bl30b);


###############
###   d=5b
H:=Hecke(ComplexReflectionGroup(16),[[1,x,E(5)*x,E(5)^4*x,x^2]]);
bl1:=[[1,2,5,19,22,25,31,32,35],[6,9,12,26,27,30,41,42,45],
  [7,10,14],[8,11,15],[16,20,23],[17,21,24]];
bl2:=[[1,5,6,12,18,19,25,32,40,41,45],[7,14,17,24,38],[8,15,16,23,37],[30,31],[26,35]];
bl3:=[[1,5,22,31,35,40],[6,12,13,26,30,42]];
bl4:=[[1,5,13,19,25,27]];
bl5a:=[[1,4,23,31,34],[3,5,17,33,35],[8,26,29,41,44],[14,28,30,43,45],
[7,9,13,15],[16,18,22,24],[6,11],[10,12],[19,21],[20,25]];  # E(5),E(5)^4
bl6:=[[1,2,5,6,12,18]];
bl10a:=[[1,14,17,20,37,41],[5,8,21,23,38,45],[3,6,15,16,25,36],[4,7,12,19,24,39]];#x=E(10),E(10)^9
bl10b:=[[1,7,24,33,36,41],[2,8,14,17,23,40],[5,15,16,34,39,45],[6,25,38],[12,19,37]];#x=E(10)^3,E(10)^7
bl12:=[[1,5,9]];
bl15a:=[[1,31,38],[5,35,37],[6,14,29],[7,11,30],[8,12,28],[10,15,26]];#x=E(15),E(15)^4,E(15)^11,E(15)^14
bl15b:=[[1,31,36],[5,35,39],[7,26,43],[8,14,27],[15,30,44]];#x=E(15)^2,7,8,13
bl20a:=[[1,24,28],[5,16,29],[17,23,42]];#x=E(20),9,11,19
bl20b:=[[1,10,16],[5,11,24],[17,25,44],[19,23,43]];#x=E(20)^3,7,17
bl30a:=[[1,4,8],[3,5,14],[7,15,32]];#x=E(30),E(30)^11,#x=E(30)^19,29
bl30b:=[[1,15,21],[5,7,20],[6,14,34],[8,12,33]];#x=E(30)^7,13,17,23

degs:=List(SchurElements(H),i->(x^2-1)*(x^12-1)*(x^20-1)*(x^30-1)/(x-E(5)^2)^2/(x-E(5)^3)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5a);
BlockIntersection(bl6);
BlockIntersection(bl10a);
BlockIntersection(bl10b);
BlockIntersection(bl12);
BlockIntersection(bl15a);
BlockIntersection(bl15b);
BlockIntersection(bl20a);
BlockIntersection(bl20b);
BlockIntersection(bl30a);
BlockIntersection(bl30b);


####
H:=Hecke(ComplexReflectionGroup(10,1,1),[[1,-x,x^3,-x^3,E(5)^2*x^3,E(5)^3*x^3,-E(5)^2*x^3,-E(5)^3*x^3,-x^5,x^6]]);
bl1:=[[1,3,10],[2,4,9]];;
bl2:=[[1,2,4,9,10]];;
bl3:=[[1,3,10]];;
bl4:=[[2,3,9]];;
bl5a:=[[1,5],[6,10],[7,9],[2,8]];;
bl6:=[[1,4,10]];;
bl10a:=[[1,9],[2,10]];;  # E(10)
bl10b:=[[1,7,9],[2,8,10]];;  # E(10)^3
bl15b:=[[1,6],[5,10]];;  # E(15)^2,E(15)^7
bl15c:=[[1,5],[6,10]];;  # E(15)^8,E(15)^13
bl20a:=[[2,5],[6,9]];;  # E(20), E(20)^11
bl20c:=[[5,9],[2,6]];;  # E(20)^9,E(20)^19
bl30a:=[[1,7],[8,10]];;  # E(30),E(30)^11
bl30d:=[[1,8],[7,10]];;  # E(30)^19,E(30)^29

degs:=(5-ER(5))/10*x*List(SchurElements(H),i->(x^2-1)*(x^12-1)*(x^20-1)*(x^30-1)/(x^5-1)/(x-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5a);
BlockIntersection(bl6);
BlockIntersection(bl10a);
BlockIntersection(bl10b);
BlockIntersection(bl15);
BlockIntersection(bl15b);
BlockIntersection(bl20);
BlockIntersection(bl20b);
BlockIntersection(bl30);
BlockIntersection(bl30b);


###############
###   d=6
H:=Hecke(ComplexReflectionGroup(20),[[1,-x,x^2]]); # durch Ennola
bl1:=[[1,3,4,5,8,9,14,15,20,22,24],[16,21],[18,19]];
bl2:=[[1,2,3,19,20,21,22,23,24],[4,5,6,7,8,9,16,17,18]];
bl3:=[[1,4,5,10,11,22],[3,8,9,12,13,24]];
bl4:=[[1,3,17,22,24,26]];
bl5a:=[[1,2,3,4,8,14],[5,9,20]]; #x=E(10)^3,E(10)^7
bl5b:=[[1,2,3,5,9,15],[4,8,20]]; #x=E(10),E(10)^9
bl10a:=[[1,3,14,19,21,23],[5,7,9,16,18,26],[4,8,17]]; #x=E(5)^2,E(5)^3
bl10b:=[[1,3,15,19,21,23],[4,6,8,16,18,26],[5,9,17]]; #x=E(5),E(5)^4
bl12:=[[1,22,25],[3,24,27]];
bl15a:=[[1,5,11],[3,9,13]]; #x=E(30)^17,E(30)^23
bl15b:=[[1,4,12],[3,8,10]]; #x=E(30),E(30)^19
bl15c:=[[1,4,10],[3,8,12]]; #x=E(30)^11,E(30)^29
bl15d:=[[1,5,13],[3,9,11]]; #x=E(30)^7,E(30)^13
bl20a:=[[1,3,7]]; #x=E(20),E(20)^9,E(20)^11,E(20)^19
bl20b:=[[1,3,6]]; #x=E(20)^3,E(20)^7,E(20)^13,E(20)^17
bl30a:=[[1,13,19],[8,18,27],[4,16,25],[3,11,21]]; #x=E(15)^2,E(15)^8
bl30b:=[[1,12,19],[9,18,27],[5,16,25],[3,10,21]]; #x=E(15)^11,E(15)^14
bl30c:=[[1,11,19],[8,18,25],[4,16,27],[3,13,21]]; #x=E(15)^7,E(15)^13
bl30d:=[[1,10,19],[9,18,25],[5,16,27],[3,12,21]]; #x=E(15),E(15)^4

degs:=List(SchurElements(H),i->(x^2-1)*(x^12-1)*(x^20-1)*(x^30-1)/(x^2-x+1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5a);
BlockIntersection(bl5b);
BlockIntersection(bl10a);
BlockIntersection(bl10b);
BlockIntersection(bl12);
BlockIntersection(bl15a);
BlockIntersection(bl15b);
BlockIntersection(bl20a);
BlockIntersection(bl20b);
BlockIntersection(bl30);
BlockIntersection(bl30b);


###############
###   d=10a
H:=Hecke(ComplexReflectionGroup(16),[[1,-x,-E(5)*x,-E(5)^4*x,x^2]]);
bl1:=[[1,5,6,12,18,19,25,32,40,41,45],[7,14,17,24,38],[8,15,16,23,37],[31,35],[26,30]];
bl2:=[[1,2,5,19,22,25,26,32,35],[6,9,12,27,30,31,41,42,45],[7,10,14],[8,11,15],[16,20,23],[17,21,24]];
bl3:=[[1,2,5,6,12,18]];
bl4:=[[1,5,13,19,25,27]];
bl5a:=[[1,8,23,34,39,41],[5,14,17,33,36,45],[2,7,15,16,24,40],[6,25,37],[12,19,38]];#x=E(5),E(5)^4
bl5b:=[[1,15,16,21,38,41],[3,8,12,19,23,36],[4,6,14,17,25,39],[5,7,20,24,37,45]];#x=E(5)^2,E(5)^3
bl6:=[[1,5,22,30,31,40],[6,12,13,26,35,42]];
bl10b:=[[1,3,24,31,33],[4,5,16,30,34],[7,26,28,41,43],[15,29,35,44,45],[8,9,13,14],[17,18,22,23],[6,10],[11,12],[19,20],[21,25]];#x=E(10)^3,E(10)^7
bl12:=[[1,5,9]];
bl15a:=[[1,15,21],[5,7,20],[6,14,34],[8,12,33]];#x=E(15),4,11,14
bl15b:=[[1,3,7],[4,5,15],[8,14,32]];#x=E(15)^2,E(15)^7,E(15)^8,E(15)^13
bl20a:=[[1,24,28],[5,16,29],[17,23,42]];#x=E(20),9,11,9
bl20b:=[[1,10,16],[5,11,24],[17,25,44],[19,23,43]];#x=E(20)^3,7,13,17
bl30a:=[[1,31,39],[5,30,36],[7,15,27],[8,26,44],[14,35,43]];#x=E(30),11,19,29
bl30b:=[[1,26,38],[5,35,37],[6,14,29],[7,11,30],[8,12,28],[10,15,31]];#x=E(30)^7,13,17,23

degs:=List(SchurElements(H),i->(x^2-1)*(x^12-1)*(x^20-1)*(x^30-1)/(x+E(5)^2)^2/(x+E(5)^3)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5a);
BlockIntersection(bl5b);
BlockIntersection(bl6);
BlockIntersection(bl10b);
BlockIntersection(bl12);
BlockIntersection(bl15a);
BlockIntersection(bl15b);
BlockIntersection(bl20a);
BlockIntersection(bl20b);
BlockIntersection(bl30a);
BlockIntersection(bl30b);


####
H:=Hecke(ComplexReflectionGroup(10,1,1),[[1,x,x^3,-x^3,E(5)^2*x^3,E(5)^3*x^3,-E(5)^2*x^3,-E(5)^3*x^3,x^5,x^6]]);
bl1:=[[1,2,3,9,10]];;
bl2:=[[1,4,10],[2,3,9]];;
bl3:=[[1,3,10]];;
bl4:=[[2,4,9]];;
bl5a:=[[1,5,9],[2,6,10]];;  # E(5)
bl5b:=[[1,9],[2,10]];;  # E(5)^2,E(5)^3
bl5c:=[[1,6,9],[2,5,10]];;  # E(5)^4
bl6:=[[1,4,10]];;
bl10b:=[[1,8],[2,5],[6,9],[7,10]];;  # E(10)^3
bl10d:=[[1,7],[8,10],[5,9],[2,6]];;  # E(10)^7
bl15b:=[[1,6],[5,10]];;  # 2,7
##bl15b:=[[1,5],[6,10]];;  # 8,13
bl20a:=[[2,7],[8,9]];;  # 1,11
bl20d:=[[7,9],[2,8]];;  # 9,19
bl30a:=[[1,7],[8,10]];;  # E(30), E(30)^11
bl30c:=[[1,8],[7,10]];;  # E(30)^19, E(30)^29

degs:=(5-ER(5))/10*x*List(SchurElements(H),i->(x^2-1)*(x^12-1)*(x^20-1)*(x^30-1)/(x^5+1)/(x+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5a);
BlockIntersection(bl5b);
BlockIntersection(bl5c);
BlockIntersection(bl6);
BlockIntersection(bl10b);
BlockIntersection(bl10d);
BlockIntersection(bl15b);
BlockIntersection(bl20a);
BlockIntersection(bl20d);
BlockIntersection(bl30a);
BlockIntersection(bl30c);


###############
###   d=12
H:=Hecke(ComplexReflectionGroup(12,1,1),[[1,x^4,x^5,-x^5,E(4)*x^5,-E(4)*x^5,E(3)*x^5,E(3)^2*x^5,-E(3)*x^5,-E(3)^2*x^5,x^6,x^10]]);
bl1:=[[1,2,3,11,12]];;
bl2:=[[1,2,4,11,12]];;
bl3:=[[1,7,11],[2,8,12]];;
bl4:=[[1,2,6],[5,11,12]];;
bl5:=[[1,3,12]];;
bl6:=[[1,10,11],[2,9,12]];;
bl10:=[[1,4,12]];;
bl15a:=[[1,8],[7,12]];;  # 1,4,7,13
bl15b:=[[1,7],[8,12]];;  # 2,8,11,14
bl20a:=[[1,6],[5,12]];;  # 1,9,13,17
bl20b:=[[1,5],[6,12]];;  # 3,7,11,19
bl30a:=[[1,9],[10,12]];;  # E(30),E(30)^7,E(30)^13,E(30)^19
bl30c:=[[1,10],[9,12]];;  # E(30)^11,E(30)^17, E(30)^23,E(30)^29

degs:=List(SchurElements(H),i->(x^2-1)*(x^12-1)*(x^20-1)*(x^30-1)/(x^4-x^2+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl10);
BlockIntersection(bl15);
BlockIntersection(bl15b);
BlockIntersection(bl20a);
BlockIntersection(bl20b);
BlockIntersection(bl30a);
BlockIntersection(bl30c);

###############
###   d=15a
H:=Hecke(ComplexReflectionGroup(30,1,1),[[1,-x^2,-E(5)*x^2,-E(5)^4*x^2,x^3,-x^3,x^4,-x^4,E(3)*x^4,E(3)^2*x^4,-E(3)*x^4,-E(3)^2*x^4,E(5)*x^4,E(5)^2*x^4,E(5)^3*x^4,E(5)^4*x^4,-E(5)*x^4,-E(5)^2*x^4,-E(5)^3*x^4,-E(5)^4*x^4,E(15)*x^4,E(15)^4*x^4,E(15)^11*x^4,E(15)^14*x^4,x^5,-x^5,-x^6,-E(5)*x^6,-E(5)^4*x^6,x^8]]);
bl1:=[[1,5,7,25,30],[4,20,29],[2,6,8,26,27],[3,17,28]];;
bl2:=[[1,2,7,27,30],[3,13,28],[5,26],[6,25],[4,16,29]];;
bl3:=[[1,5,9],[10,25,30],[6,11,27],[2,12,26]];;
bl4:=[[1,8,30]];;
bl5a:=[[1,15,25],[17,27],[6,18,28],[4,19,26],[2,20],[5,14,30],[3,8,29]];; #E(5)
bl5b:=[[1,13,25],[3,6,20],[17,26,29],[5,16,30],[4,18,27],[2,19,28]];; #E(5)^2
bl5c:=[[1,16,25],[2,18,29],[3,19,27],[5,13,30],[20,26,28],[4,6,17]];; #E(5)^3
bl5d:=[[1,14,25],[4,8,28],[5,15,30],[2,17],[3,18,26],[6,19,29],[20,27]];; #E(5)^4
bl6:=[[1,10,27],[2,9,30]];;
bl6b:=[[1,9,27],[2,10,30]];;
bl10a:=[[1,16,28],[4,13,30],[2,14,29],[3,15,27]];;  # E(10)
bl10b:=[[1,3,14],[15,29,30],[16,27],[4,7,28],[2,13]];; #3
bl10c:=[[1,4,15],[2,16],[3,7,29],[13,27],[14,28,30]];;  #7
bl10d:=[[1,13,29],[4,14,27],[2,15,28],[3,16,30]];;  #9
bl12:=[[1,11],[12,30]];; # E(12)
bl12b:=[[1,12],[11,30]];;
bl15b:=[[1,23],[11,28],[5,24],[21,25],[4,12],[22,30],[6,29],[3,26]];;#2
bl15c:=[[1,21],[12,28],[3,25],[6,22],[23,26],[5,29],[4,11],[24,30]];; #7
#blE(15)^13:=[[1,22],[4,25],[5,28],[23,30],[3,11],[24,26],[6,21],[12,29]];; #13
#blE(15)^8:=[[1,24],[21,30],[3,12],[5,28],[22,26],[6,23],[4,25],[11,29]];;#8
bl20a:=[[1,18],[19,30]];;  # E(20),E(20)^11
bl20b:=[[1,17],[20,30]];;  # E(20)^3,E(20)^13
#blE(20)^17:=[[1,20],[17,30]];;  # E(20)^7,E(20)^17
#blE(20)^9:=[[1,19],[18,30]];;  # E(20)^9,E(20)^19
bl30a:=[[1,24],[21,30],[4,22],[9,29],[3,10],[23,28]];;  # E(30)
bl30b:=[[1,29],[23,27],[24,28],[4,21],[2,22],[3,30]];;  # E(30)^7
bl30c:=[[1,22],[3,9],[10,29],[23,30],[4,24],[21,28]];;  # E(30)^11
bl30d:=[[1,29],[2,24],[21,27],[3,30],[22,28],[4,23]];;  # E(30)^17
#bl-E(15)^14:=[[1,28],[3,22],[23,29],[4,30],[24,27],[2,21]];;
#bl-E(15)^2:=[[1,23],[24,29],[3,21],[22,30],[9,28],[4,10]];;
#bl-E(15)^4:=[[1,28],[4,30],[2,23],[3,24],[21,29],[22,27]];;
#bl-E(15)^7:=[[1,21],[22,29],[4,9],[10,28],[3,23],[24,30]];;

degs:=List(SchurElements(H),i->(x^4-1)*(x^24-1)*(x^40-1)*(x^60-1)/(x^2-E(15)^11)/(x^2-E(15)^14)/(x^2-E(15))/(x^2-E(15)^4)/i);;
unp:=List(unp,i->Value(i,x^2));;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5a);
BlockIntersection(bl5b);
BlockIntersection(bl5c);
BlockIntersection(bl5d);
BlockIntersection(bl6);
BlockIntersection(bl10a);
BlockIntersection(bl10b);
BlockIntersection(bl10c);
BlockIntersection(bl10d);
BlockIntersection(bl12);
BlockIntersection(bl15b);
BlockIntersection(bl15c);
BlockIntersection(bl20a);
BlockIntersection(bl20b);
BlockIntersection(bl30a);
BlockIntersection(bl30b);
BlockIntersection(bl30c);
BlockIntersection(bl30d);


###############
###   d=20
H:=Hecke(ComplexReflectionGroup(20,1,1),[[1,x^2,E(5)^2*x^2,E(5)^3*x^2,x^3,-x^3,E(4)*x^3,-E(4)*x^3,E(5)*x^3,E(5)^2*x^3,E(5)^3*x^3,E(5)^4*x^3,-E(5)*x^3,-E(5)^2*x^3,-E(5)^3*x^3,-E(5)^4*x^3,x^4,E(5)^2*x^4,E(5)^3*x^4,x^6]]);
bl1:=[[1,2,5,17,20],[3,10,18],[4,11,19]];;
bl2:=[[1,2,6,17,20],[3,14,18],[4,15,19]];;
bl3:=[[1,5,20]];;
bl4:=[[1,7,17],[2,8,20]];;
bl4b:=[[1,8,17],[2,7,20]];;
bl5a:=[[1,4,10],[11,18,20],[2,12,19],[3,9,17]];;#1
bl5b:=[[1,9,19],[2,10],[11,17],[3,12,20],[4,5,18]];;#3
bl5c:=[[1,12,18],[3,5,19],[4,9,20],[10,17],[2,11]];;#2
bl5d:=[[1,3,11],[4,12,17],[2,9,18],[10,19,20]];;#4
bl6:=[[1,6,20]];;
bl10a:=[[1,13,19],[2,14],[15,17],[3,16,20],[4,6,18]];;  # E(10)
bl10b:=[[1,3,15],[4,16,17],[2,13,18],[14,19,20]];;  # E(10)^3
bl10c:=[[1,4,14],[15,18,20],[2,16,19],[3,13,17]];;  # E(10)^7
bl10d:=[[1,16,18],[3,6,19],[4,13,20],[14,17],[2,15]];;  # E(10)^9
bl12:=[[1,8],[7,20]];;  # 1,5
bl12b:=[[1,7],[8,20]];;  # 7,11
bl15a:=[[1,12],[9,20]];;  #1,11
bl15b:=[[1,11],[10,20]];;  #2,7
bl15c:=[[1,9],[12,20]];;  #4,14
bl15d:=[[1,10],[11,20]];;  #8,13
bl30:=[[1,14],[15,20]];;#8,13
bl30b:=[[1,16],[13,20]];;#1,11
bl30c:=[[1,13],[16,20]];;#4,14
bl30d:=[[1,15],[14,20]];;#2,7

degs:=List(SchurElements(H),i->(x^2-1)*(x^12-1)*(x^20-1)*(x^30-1)/(x-E(20))/(x-E(20)^9)/(x-E(20)^11)/(x-E(20)^19)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5a);
BlockIntersection(bl5b);
BlockIntersection(bl5c);
BlockIntersection(bl6);
BlockIntersection(bl10a);
BlockIntersection(bl10b);
BlockIntersection(bl12);
BlockIntersection(bl15a);
BlockIntersection(bl15b);
BlockIntersection(bl15c);
BlockIntersection(bl30);
BlockIntersection(bl30b);


###############
###   d=30a
H:=Hecke(ComplexReflectionGroup(30,1,1),[[1,x^2,E(5)^2*x^2,E(5)^3*x^2,E(4)*x^3,-E(4)*x^3,x^4,-x^4,E(3)*x^4,E(3)^2*x^4,-E(3)*x^4,-E(3)^2*x^4,E(5)*x^4,E(5)^2*x^4,E(5)^3*x^4,E(5)^4*x^4,-E(5)*x^4,-E(5)^2*x^4,-E(5)^3*x^4,-E(5)^4*x^4,E(15)^2*x^4,E(15)^7*x^4,E(15)^8*x^4,E(15)^13*x^4,E(4)*x^5,-E(4)*x^5,x^6,E(5)^2*x^6,E(5)^3*x^6,x^8]]);

bl1:=[[1,2,7,27,30],[5,25],[3,14,28],[4,15,29],[6,26]];;
bl2:=[[1,5,7,26,30],[4,19,29],[2,6,8,25,27],[3,18,28]];;
bl3:=[[1,9,27],[2,10,30]];;
bl4:=[[1,8,30]];;
bl5a:=[[1,15,28],[2,16,29],[3,13,27],[4,14,30]];;  # E(5)
bl5b:=[[1,4,13],[14,27],[2,15],[16,28,30],[3,7,29]];;  # E(5)^2
bl5c:=[[1,3,16],[4,7,28],[13,29,30],[2,14],[15,27]];;  # E(5)^3
bl5d:=[[1,14,29],[3,15,30],[4,16,27],[2,13,28]];;  # E(5)^4
bl6:=[[1,5,9],[10,26,30],[6,11,27],[2,12,25]];;
bl6b:=[[1,5,10],[2,11,25],[6,12,27],[9,26,30]];;
bl10a:=[[1,16,25],[2,18],[19,27],[6,13,30],[3,20,26],[4,8,28],[5,17,29]];;#E(10)
bl10b:=[[1,14,25],[6,15,30],[2,17,28],[18,26,29],[3,5,19],[4,20,27]];; #3
bl10c:=[[1,15,25],[3,17,27],[4,5,18],[19,26,28],[2,20,29],[6,14,30]];; #7
bl10d:=[[1,13,25],[5,20,28],[3,8,29],[4,17,26],[6,16,30],[18,27],[2,19]];;#9
bl12:=[[1,11],[12,30]];;
bl12b:=[[1,12],[11,30]];;
bl15a:=[[1,24],[21,30],[3,9],[22,28],[4,23],[10,29]];;#E(15)
bl15b:=[[1,29],[2,24],[21,27],[3,30],[4,22],[23,28]];;#E(15)^2
bl15c:=[[1,22],[23,30],[10,28],[24,29],[3,21],[4,9]];;#E(15)^4
#blE(15)^7:=[[1,29],[4,21],[22,27],[2,23],[24,28],[3,30]];;
#blE(15)^8:=[[1,28],[4,30],[21,29],[2,22],[23,27],[3,24]];;
#blE(15)^11:=[[1,23],[3,10],[4,24],[21,28],[9,29],[22,30]];;
#blE(15)^13:=[[1,28],[22,29],[3,23],[4,30],[24,27],[2,21]];;
#blE(15)^14:=[[1,21],[9,28],[3,22],[23,29],[4,10],[24,30]];;
bl20a:=[[1,18],[19,30]];;  # E(20),E(20)^11
bl20b:=[[1,17],[20,30]];;  # E(20)^3,E(20)^13
bl20c:=[[1,20],[17,30]];;  # E(20)^7,E(20)^17
bl20d:=[[1,19],[18,30]];;  # E(20)^9,E(20)^19
bl30b:=[[1,23],[5,28],[11,29],[24,25],[6,21],[3,12],[4,26],[22,30]];; #7
bl30d:=[[1,24],[5,28],[4,26],[21,30],[12,29],[6,22],[23,25],[3,11]];; #17
#bl-E(15)^14:=[[1,21],[4,12],[22,25],[6,23],[11,28],[24,30],[3,26],[5,29]];; #13
#bl-E(15)^4:=[[1,22],[23,30],[3,25],[4,11],[5,24],[21,26],[12,28],[6,29]];; #23

degs:=List(SchurElements(H),i->(x^4-1)*(x^24-1)*(x^40-1)*(x^60-1)/(x^2-E(30))/(x^2-E(30)^11)/(x^2-E(30)^19)/(x^2-E(30)^29)/i);;
unp:=List(unp,i->Value(i,x^2));;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5a);
BlockIntersection(bl5b);
BlockIntersection(bl5c);
BlockIntersection(bl5d);
BlockIntersection(bl6);
BlockIntersection(bl10a);
BlockIntersection(bl10b);
BlockIntersection(bl10c);
BlockIntersection(bl10d);
BlockIntersection(bl12);
BlockIntersection(bl15a);
BlockIntersection(bl15b);
BlockIntersection(bl15c);
BlockIntersection(bl20a);
BlockIntersection(bl20b);
BlockIntersection(bl20c);
BlockIntersection(bl20d);
BlockIntersection(bl30b);
BlockIntersection(bl30d);


###############
###   d=30b
H:=Hecke(ComplexReflectionGroup(30,1,1),[[1,x^2,E(5)*x^2,E(5)^4*x^2,E(4)*x^3,-E(4)*x^3,x^4,-x^4,E(3)*x^4,E(3)^2*x^4,-E(3)*x^4,-E(3)^2*x^4,E(5)*x^4,E(5)^2*x^4,E(5)^3*x^4,E(5)^4*x^4,-E(5)*x^4,-E(5)^2*x^4,-E(5)^3*x^4,-E(5)^4*x^4,E(15)*x^4,E(15)^4*x^4,E(15)^11*x^4,E(15)^14*x^4,E(4)*x^5,-E(4)*x^5,x^6,E(5)*x^6,E(5)^4*x^6,x^8]]);
bl1:=[[1,2,7,27,30],[3,13,28],[5,25],[6,26],[4,16,29]];;
bl2:=[[1,5,7,26,30],[4,20,29],[2,6,8,25,27],[3,17,28]];;
bl3:=[[1,9,27],[2,10,30]];;
bl4:=[[1,8,30]];;
bl5a:=[[1,4,15],[2,16],[3,7,29],[13,27],[14,28,30]];;#E(5)
bl5b:=[[1,13,29],[4,14,27],[2,15,28],[3,16,30]];;#E(5)^2
bl5c:=[[1,16,28],[4,13,30],[2,14,29],[3,15,27]];;#E(5)^3
bl5d:=[[1,3,14],[15,29,30],[16,27],[4,7,28],[2,13]];;#E(5)^4
bl6:=[[1,6,10],[2,11,26],[5,12,27],[9,25,30]];;
bl6b:=[[1,6,9],[10,25,30],[5,11,27],[2,12,26]];;
bl10a:=[[1,16,26],[2,18,29],[3,19,27],[5,13,30],[20,25,28],[4,6,17]];;#E(10)
bl10b:=[[1,14,26],[4,8,28],[5,15,30],[2,17],[3,18,25],[6,19,29],[20,27]];;#3
bl10c:=[[1,15,26],[17,27],[6,18,28],[4,19,25],[2,20],[5,14,30],[3,8,29]];;#7
bl10d:=[[1,13,26],[3,6,20],[17,25,29],[5,16,30],[4,18,27],[2,19,28]];;#9
bl12:=[[1,11],[12,30]];;
bl12b:=[[1,12],[11,30]];;
bl15a:=[[1,29],[2,24],[21,27],[3,30],[22,28],[4,23]];;#E(15)
bl15b:=[[1,23],[24,29],[3,21],[22,30],[9,28],[4,10]];;#E(15)^2
bl15c:=[[1,28],[4,30],[2,23],[3,24],[21,29],[22,27]];;#E(15)^4
blE(15)^11:=[[1,21],[22,29],[4,9],[10,28],[3,23],[24,30]];;#E(15)^7
blE(15)^4:=[[1,24],[21,30],[4,22],[9,29],[3,10],[23,28]];;#E(15)^8
blE(15)^13:=[[1,29],[23,27],[24,28],[4,21],[2,22],[3,30]];;#E(15)^11
blE(15)^14:=[[1,22],[3,9],[10,29],[23,30],[4,24],[21,28]];;#E(15)^13
blE(15)^7:=[[1,28],[3,22],[23,29],[4,30],[24,27],[2,21]];;#E(15)^14
bl20a:=[[1,18],[19,30]];;  # E(20),E(20)^11
bl20b:=[[1,17],[20,30]];;  # E(20)^3,E(20)^13
bl20c:=[[1,20],[17,30]];;  # E(20)^7,E(20)^17
bl20d:=[[1,19],[18,30]];;  # E(20)^9,E(20)^19
bl30a:=[[1,24],[21,30],[3,12],[5,28],[22,25],[6,23],[4,26],[11,29]];;#1
blE(30)^11:=[[1,22],[4,25],[6,28],[23,30],[3,11],[24,26],[5,21],[12,29]];;#11
blE(30)^19:=[[1,23],[11,28],[5,24],[21,26],[4,12],[22,30],[6,29],[3,25]];;#19
blE(30)^29:=[[1,21],[12,28],[3,26],[6,22],[23,25],[5,29],[4,11],[24,30]];;#29

degs:=List(SchurElements(H),i->(x^4-1)*(x^24-1)*(x^40-1)*(x^60-1)/(x^2-E(30)^7)/(x^2-E(30)^13)/(x^2-E(30)^17)/(x^2-E(30)^23)/i);;
unp:=List(unp,i->Value(i,x^2));;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5a);
BlockIntersection(bl5b);
BlockIntersection(bl5c);
BlockIntersection(bl5d);
BlockIntersection(bl6);
BlockIntersection(bl10a);
BlockIntersection(bl10b);
BlockIntersection(bl10c);
BlockIntersection(bl10d);
BlockIntersection(bl12);
BlockIntersection(bl15a);
BlockIntersection(bl15b);
BlockIntersection(bl15c);
BlockIntersection(bl20a);
BlockIntersection(bl20b);
BlockIntersection(bl20c);
BlockIntersection(bl20d);
BlockIntersection(bl30a);


ordspez:=15; sizecyc:=10;
for i in [0..ordspez-1] do
 ls:=List(l,j->Value(j,E(ordspez)^i));
 m:=List([0..2*ordspez-1],j->Filtered([1..sizecyc],k->ls[k]=E(2*ordspez)^j));
   Print("bl",E(ordspez)^(i),":= ",Filtered(m,j->j<>[]),";;\n");
od;

sizecyc:=20;
for i in [1,2,3,4,5,6,10,12,15,20,30] do
 ls:=List(l,j->Value(j,E(i)));
 m:=List([0..20*i-1],j->Filtered([1..sizecyc],k->ls[k]=E(20*i)^j));
   Print("bl",i,":= ",Set(Filtered(m,j->j<>[])),";;\n");
od;



##################################################
##################    E_6    #####################
##################################################
x:=X(Cyclotomics);; x.name:="x";;
W:= CoxeterGroup("E",6);
uc:=UnipotentCharacters(W); Display(uc);
unp:=uc.degrees;;

## complete HC-parametrisation
hc:=[[ 2, 1, 3, 5, 4, 6, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 17, 18, 19, 21, 
      20, 23, 22, 25, 24 ],
 [ 2, 9, 10, 1, 16, 15, 5, 4, 17, 8, 24, 25, 7, 3, 19, 6, 12, 20, 21, 11, 
      14, 13, 27, 26, 28 ],
[ 2, 1, 18, 11, 12, 6, 17, 10, 16, 4, 15, 5, 9, 13, 20, 8, 21, 7, 14, 23, 22, 
  3, 30, 29 ],
   [ 2, 8, 7, 1, 5, 27, 19, 3, 26, 4, 9, 24, 25, 10, 18, 28 ],
 [ 5, 23, 25, 13, 1,  2, 14, 24, 22, 4 ],
 [ 2, 16, 9, 5, 17, 4, 10, 15, 1, 11, 13, 21, 26, 28, 27, 20, 14, 12, 30, 
      29, 18 ],
 [],
 [ 2, 16, 27, 25, 24, 26, 15, 1 ],
 [ 2, 12, 23, 19, 29, 30, 22, 11, 1 ],
 [], [],
 [ 2, 5, 8, 27, 6, 28, 7, 26, 4, 1, 29, 30 ]];;

###############
###   d=1
H:=Hecke(W,[[1,-x]]);
bl2:=[[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,24,25]];
bl3:=[[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23]];
bl4:=[[1,2,3,4,5,7,8,9,10,18,19,24,25],[11,12,20,21]];
bl5:=[[1,5,13,23,25],[2,4,14,22,24]];
bl6:=[[1,2,4,5,9,10,11,12,13,14,15,16,17,18,20,21]];
bl8:=[[1,2,15,16,24,25]];
bl9:=[[1,2,11,12,19,22,23]];
bl12:=[[1,2,4,5,6,7,8]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^5-1)*(x^6-1)*(x^8-1)*(x^9-1)*(x^12-1)/(x-1)^6/i);;

BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl12);

####
H:=Hecke(CoxeterGroup("A",2),[[1,-x^4]]);
bl3:=[[1,2,3]];
bl6:=[[1,2,3]];
bl8:=[[1,3]];
bl12:=[[1,2,3]];

degs:=1/2*x^3*(x-1)*(x^3-1)*List(SchurElements(H),i->(x^2-1)*(x^5-1)*(x^6-1)*(x^8-1)*(x^9-1)*(x^12-1)/(x^2-1)/(x^4-1)^2/(x^6-1)/i);;

BlockIntersection(bl3);
BlockIntersection(bl6);
BlockIntersection(bl8);
BlockIntersection(bl12);


###############
###   d=2
H:=Hecke(CoxeterGroup("F",4),[[1,x],[1,x],[1,-x^2],[1,-x^2]]);
bl1:=[[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22];
bl3:=[[1,2,3,4,5,6,7,8,9,10,13,14,16,17,18,19,20,21,22]];
bl4:=[[1,2,3,4,10,11,12,13,25],[7,8,14,15,23,24],[17,18],[19,20]];
bl5:=[[1,21,11,8],[7,12,22,4]];
bl6:=[[1,2,3,4,5,6,7,8,9],[17,18,19,20,21,22,23,24,25]];
bl8:=[[5,11,24,4],[1,23,12,6]];
bl9:=[[1,4,15,17,20]];
bl12:=[[1,4,10,13,25],[7,8,23,24,16]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^5-1)*(x^6-1)*(x^8-1)*(x^9-1)*(x^12-1)/(x^2-1)^2/(x+1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl12);


###############
###   d=3
H:=Hecke(ComplexReflectionGroup(25),[[1,x,x^2]]);
bl1:=[[1..22]];
bl2:=[[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,22],[20,21]];
bl4:=[[1,2,3,8,10,12,13,16,18,22],[4,5,15,17]];
bl5:=[[1,10,19,21],[2,12,14,20]];
bl6:=[[1,2,3,4,5,7],[8,9,10,14,15,24],[11,12,13,17,19,23]];
bl8:=[[1,2,9,11]];
bl9:=[[1,4,20,23],[2,5,21,24]];
bl12:=[[1,2,6],[10,16,23],[12,18,24]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^5-1)*(x^6-1)*(x^8-1)*(x^9-1)*(x^12-1)/(x^2+x+1)^3/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);

BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl12);


BlockIntersectHC(bl6,hc,3);
BlockIntersectHC(bl9,hc,3);
BlockIntersectHC(bl12,hc,3);

####
H:=Hecke(ComplexReflectionGroup(3,1,1),[[1,x^4,x^8]]);
bl1:=[[1,2,3]];
bl2:=[1,2,3]];
bl4:=[[1,2,3]];
bl8:=[[1,3]];

degs:=x^3/2*(x^2+x+1)*List(SchurElements(H),i->(x^2-1)*(x^5-1)*(x^6-1)*(x^8-1)*(x^9-1)*(x^12-1)/(x^2+x+1)^2/(x^4-x^2+1)/(x^3+1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);

BlockIntersection(bl4);
BlockIntersection(bl8);


###############
###   d=4
H:=Hecke(ComplexReflectionGroup(8),[[1,-x,x^2,-x^3]]);
bl1:=[[1,2,3,4,5,7,8,10,11,12,13,14,15]];
bl2:=[[1,2,3,4,11,12,13,14,16],[5,6,7,8,9,10]];
bl3:=[[1,2,3,4,5,8,10,11,14,15],[6,9,16]];
bl5:=[[1,10,12],[4,5,13]];
bl6:=[[5,6,9,10,15],[1,4,11,14,16]];
bl8:=[[1,9,13],[4,6,12]];
bl9:=[[1,4,7]];
bl12:=[[1,3,6],[2,4,9],[5,10,16]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^5-1)*(x^6-1)*(x^8-1)*(x^9-1)*(x^12-1)/(x^2+1)^2/(x-1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);

BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl12);

####
H:=Hecke(ComplexReflectionGroup(4,1,1),[[1,x^3,x^6,x^9]]);
bl1:=[[1,2,3,4]];
bl2:=[[1,3],[2,4]];
bl3:=[[1,2,3,4]];
bl6:=[[1,3],[2,4]];
bl9:=[[1,4]];

degs:=x^2*(x^2+1)*List(SchurElements(H),i->(x^2-1)*(x^5-1)*(x^6-1)*(x^8-1)*(x^9-1)*(x^12-1)/(x^2+1)^2/(x^3+1)/(x^2-1)^2/(x-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);

BlockIntersection(bl6);
BlockIntersection(bl9);


###############
###   d=5
H:=Hecke(ComplexReflectionGroup(5,1,1),[[1,x^3,x^4,x^6,x^12]]);
bl1:=[[1,2,3,4,5]];
bl2:=[[1,3,4,5]];
bl3:=[[1,2,4,5]];
bl4:=[[1,3,5]];
bl6:=[[1,4,5]];
bl8:=[[3,5]];
bl12:=[[1,5]];
bl9:=[[2,5]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^5-1)*(x^6-1)*(x^8-1)*(x^9-1)*(x^12-1)/(x^5-1)/(x^2-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);

BlockIntersection(bl6);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl12);


####
H:=Hecke(ComplexReflectionGroup(5,1,1),[[1,x^6,x^8,x^9,x^12]]);
bl1:=[[1,2,3,4,5]];
bl2:=[[1,2,3,5]];
bl3:=[[1,2,4,5]];
bl4:=[[1,3,5]];
bl6:=[[1,2,5]];
bl8:=[[1,3]];
bl9:=[[1,4]];
bl12:=[[1,5]];


degs:=x*List(SchurElements(H),i->(x^2-1)*(x^5-1)*(x^6-1)*(x^8-1)*(x^9-1)*(x^12-1)/(x^5-1)/(x^2-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);

BlockIntersection(bl6);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl12);


###############
###   d=6
H:=Hecke(ComplexReflectionGroup(5),[[1,-x,x^2],[1,x^2,x^4]]);
bl1:=[[1,2,3,4,5,6,7,8,9,10,11,12,16,17,18,21],[13,14,15]];
bl2:=[[1..9],[10..18]];
bl3:=[[1,5,9,10,18,21],[2,6,7,11,16,20],[3,4,8,12,17,19]];
bl4:=[[1,3,7,9,14],[16,18],[4,6,13,15,21],[12,10]];
bl5:=[[1,6,17],[4,9,11]];
bl8:=[[1,8,15],[9,2,13]];
bl9:=[[1,10,20],[9,18,19]];
bl12:=[[1,9,14],[4,13,19],[6,15,20]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^5-1)*(x^6-1)*(x^8-1)*(x^9-1)*(x^12-1)/(x^4+x^2+1)/(x^2-x+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);

BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl12);

BlockIntersectHC(bl3,hc,6);
BlockIntersectHC(bl9,hc,6);
BlockIntersectHC(bl12,hc,6);


###############
###   d=8
H:=Hecke(ComplexReflectionGroup(8,1,1),[[1,x^3,-x^3,x^4,x^5,-x^6,x^6,x^9]]);
bl1:=[[1,2,4,5,7,8],[3,6]];
bl2:=[[1,3,4,7],[2,5,6,8]];
bl3:=[[1,2,7,8],[3,6]];
bl4:=[[1,4,6],[3,5,8]];
bl5:=[[1,5],[4,8]];
bl6:=[[1,3,7],[2,6,8]];
bl9:=[[1,8]];
bl12:=[[1,6],[3,8]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^5-1)*(x^6-1)*(x^8-1)*(x^9-1)*(x^12-1)/(x^4+1)/(x^2-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);

BlockIntersection(bl9);
BlockIntersection(bl12);

###############
###   d=9
H:=Hecke(ComplexReflectionGroup(9,1,1),[[1,x^2,x^3,x^4,E(3)*x^4,E(3)^2*x^4,x^5,x^6,x^8]]);
bl1:=[[1,2,3,4,7,8,9]];
bl2:=[[1,2,4,8,9],[3,7]];
bl3:=[[1,3,6,8],[2,5,7,9]];
bl4:=[[1,4,9],[2,8]];
bl5:=[[1,7],[3,9]];
bl6:=[[1,5,8],[2,6,9]];
bl8:=[[1,9]];
bl12:=[[1,6],[5,9]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^5-1)*(x^6-1)*(x^8-1)*(x^9-1)*(x^12-1)/(x^6+x^3+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl8);

BlockIntersection(bl12);

BlockIntersectHC(bl3,hc,9);
BlockIntersectHC(bl6,hc,9);
BlockIntersectHC(bl12,hc,9);


###############
###   d=12
H:=Hecke(ComplexReflectionGroup(12,1,1),[[1,x,x^2,-x^2,x^3,-x^3,x^4,-x^4,x^5,x^6,E(3)*x^3,E(3)^2*x^3]]);
bl1:=[[1,2,3,5,7,9,10],[4,6,8]];
bl2:=[[1,3,6,7,10],[2,4,5,8,9]];
bl3:=[[1,5,10],[2,7,11],[3,9,12]];
bl4:=[[1,4,7],[2,6,9],[3,8,10]];
bl5:=[[1,9],[2,10]];
bl6:=[[1,6,10],[2,8,12],[4,9,11]];
bl8:=[[1,8],[4,10]];
bl9:=[[1,12],[10,11]];


degs:=List(SchurElements(H),i->(x^2-1)*(x^5-1)*(x^6-1)*(x^8-1)*(x^9-1)*(x^12-1)/(x^4-x^2+1)/(x^2+x+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl8);
BlockIntersection(bl9);

BlockIntersectHC(bl3,hc,12);
BlockIntersectHC(bl6,hc,12);
BlockIntersectHC(bl9,hc,12);



##################################################
##################    E_7    #####################
##################################################22.1.25
x:=X(Cyclotomics);; x.name:="x";;
W:= CoxeterGroup("E",7);
uc:=UnipotentCharacters(W); Display(uc);
unp:=uc.degrees;;

## complete HC-parametrisation
 hc:=[[ 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 
  21, 24, 23, 26, 25, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 
  42, 41, 44, 43, 46, 45, 48, 47, 50, 49, 52, 51, 54, 53, 56, 55, 58, 57, 59, 
  60 ],  # 59,60
 [ 2, 1, 4, 3, 24, 23, 16, 15, 10, 9, 12, 11, 50, 49, 8, 7, 70, 61, 20, 19, 
  58, 57, 6, 5, 26, 25, 28, 27, 67, 63, 32, 31, 56, 55, 36, 35, 38, 37, 40, 
  39, 42, 41, 65, 66, 46, 45, 64, 68, 14, 13, 69, 62, 54, 53, 34, 33, 22, 21, 
  75, 76 ],  # 75,76
 [ 2, 45, 1, 15, 46, 16, 4, 19, 20, 3, 18, 17, 8, 7, 58, 5, 22, 23, 10, 39, 
  24, 21, 40, 9, 6, 57, 28, 25, 42, 31, 30, 51, 32, 41, 52, 29, 26, 27, 48, 
  13, 47, 14, 60, 59, 74, 73, 72, 71 ], #59,60  72,74  71,73
 [ 9, 49, 13, 1, 67, 30, 39, 19, 18, 70, 25, 55, 33, 35, 52, 69 ],
 [ 3, 12, 32, 53, 60, 59, 54, 31, 11, 4 ], #59,60
 [ 2, 45, 1, 7, 46, 8, 4, 19, 20, 3, 70, 61, 16, 15, 22, 23, 58, 5, 10, 39, 6, 
  57, 40, 9, 24, 21, 28, 25, 42, 31, 67, 62, 32, 41, 69, 63, 26, 27, 49, 64, 
  68, 50, 76, 75, 72, 71, 74, 73 ], #75,76  72,74  71,73
 [ 2, 12, 30, 5, 56, 43, 60, 59, 44, 55, 6, 29, 11, 1 ], #59,60
 [ 9, 35, 48, 64, 44, 65, 25, 1 ],  ## das ist d=8
 [ 2, 3, 16, 17, 48, 49, 73, 71, 59, 60, 50, 47, 74, 72, 18, 15, 4, 1 ], #59,60  72,74  71,73
 [ 3, 12, 32, 53, 75, 76, 54, 31, 11, 4 ],  #75,76
 [],
 [ 9, 30, 67, 45, 71, 73, 52, 69, 39, 18, 70, 1 ], #71,73
 [],
 [ 2, 12, 23, 67, 34, 66, 76, 75, 33, 65, 24, 63, 11, 1 ],  #75,76
 [],[],[],
 [ 2, 3, 8, 61, 13, 64, 71, 73, 75, 76, 14, 68, 72, 74, 7, 70, 4, 1 ]]; #75,76  72,74  71,73


###############
###   d=1
H:=Hecke(W,[[1,-x]]);
bl2:=[[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,45,46,49,50,53,54,55,56,57,58],[17,18,29,30,47,48,43,44,51,52]];;
bl3:=[[1,3,5,7,9,15,13,17,19,21,25,27,23,29,31,39,41,47,45,51,57,60],
      [2,4,6,8,10,14,16,18,20,22,24,28,26,30,32,40,42,48,46,52,58,59],
      [36,54,34],[37,43,11],[38,44,12],[35,53,33]];;
bl4:=[[1,18,25,39,33,55,52,13,19,49,35,30,9],[10,29,36,14,20,50,51,34,56,26,40,17,2],
  [4,6,24,38,47,54,42,28,43,8,16,12],[11,7,15,44,41,27,53,48,37,5,23,3]];;
bl5:=[[1,21,43,35,17],[4,54,60,32,12],[10,38,52,34,8],[2,22,44,36,18],[3,53,59,31,11],[9,37,51,33,7]];;
bl6:=[[1,2,3,4,5,6,7,8,9,10,15,16,19,20,21,22,23,24,25,26,27,28,31,32,39,40,41,42,45,46,49,50,57,58],[11,36,54,37,56],[38,53,35,12,55],[17,18,29,30,51,52]];;
bl7:=[[1,11,29,55,60,43,5],[2,12,30,56,59,44,6]];;
bl8:=[[1,25,44,48,35,9],[2,26,43,47,36,10],[4,29,38,28,17,12],[3,30,37,27,18,11]];;
bl9:=[[1,15,47,59,49,17,3],[2,16,48,60,50,18,4]];;
bl10:=[[1,10,38,57,56,35,16],[2,9,37,58,55,36,15],[4,11,31,54,53,32,12,3]];;
bl12:=[[1,18,39,52,45,30,9],[2,17,40,51,46,29,10]];;
bl14:=[[1,11,24,33,34,23,12,2]];;
bl18:=[[1,4,7,14,13,8,3,2]];;

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x-1)^7/i);;

BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl18);

BlockIntersectHC(bl3,hc,1);
BlockIntersectHC(bl5,hc,1);
BlockIntersectHC(bl7,hc,1);
BlockIntersectHC(bl9,hc,1);

####
H:=Hecke(CoxeterGroup("C",3),[[1,-x],[1,-x^4]]);
bl2:=[[1,2,3,4,5,6,7,8,9,10]];
bl3:=[[1,5,9],[4,8,10]];
bl6:=[[1,3,4,5,7,8,9,10]];
bl8:=[[1,9],[3,6],[2,7],[4,10]];
bl10:=[[2,4,5],[6,8,9]];
bl12:=[[1,5,9],[4,8,10]];
bl14:=[[1,2,6,10]];
bl18:=[[3,4,7,9]];

degs:=1/2*x^3*(x^3-1)*List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x^2-1)/(x^4-1)^2/(x^6-1)/i);;

BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl6);
BlockIntersection(bl8);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl18);

####
H:=Hecke(CoxeterGroup("A",1),[[1,-x^9]]);
bl2:=[[1,2]];;
bl6:=[[1,2]];;
bl18:=[[1,2]];;

degs:=1/3*x^7*(x^2-1)^2*(x^4-1)*(x^8-1)*List(SchurElements(H),i->(x^2-1)*(x^10-1)*(x^14-1)*(x^9+1)/(x^2-1)/i);;

BlockIntersection(bl2);
BlockIntersection(bl6);
BlockIntersection(bl18);


###############
###   d=2
H:=Hecke(W,[[1,x]]);
bl1:=[[1,2,3,4,23,24,15,16,9,10,11,12,49,50,7,8,19,20,57,58,5,6,25,26,27,28,31,32,55,56,35,36,37,38,39,40,41,42,45,46,13,14,53,54,33,34,21,22],[17,18,29,30,47,48,43,44,51,52]];;


degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x+1)^7/i);;

BlockIntersection(bl1);

####
H:=Hecke(CoxeterGroup("C",3),[[1,x],[1,-x^4]]);
bl1:=[[1,2,3,4,5,6,7,8,9,10]];
bl3:=[[1,3,4,5,7,8,9,10]];
bl5:=[[2,4,5],[6,8,9]];
bl6:=[[1,5,9],[4,8,10]];
bl7:=[[1,2,6,10]];
bl8:=[[1,9],[3,6],[2,7],[4,10]];
bl9:=[[3,4,7,9]];
bl12:=[[1,5,9],[4,8,10]];

degs:=1/2*x^3*(x^3+1)*List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x^2-1)/(x^4-1)^2/(x^6-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl3);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl12);


###############
###   d=3
H:=Hecke(ComplexReflectionGroup(26),[[1,-x^3],[1,x,x^2]]);
bl1:=[[1,5,6,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,42,43],
      [2,3,4,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,41,44]];#??27.1.
bl2:=[[1,2,3,4,5,6,7,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,33,34,37,38,40,42],
  [11,12,31,32,35,36,39,41],[45,46],[47,48]];
bl4:=[[1,9,12,19,23,32,36,37,42],[3,8,11,20,24,28,31,35,40],
  [4,10,14,16,18,34,38,39],[6,7,13,21,25,27,29,41]];
bl5:=[[1,11,17],[3,12,22],[7,33,44],[10,30,43],[13,19,35],[14,24,32]];
bl6:=[[1,2,3,4,5,6,7,8,9,10,13,14],[15,16,17,18,19,20,27,28,29,30,47,48],
  [21,22,23,24,25,26,33,34,37,38,45,46],[11,12],[31,32],[35,36]];
bl7:=[[1,25,31,44],[3,16,36,43]];
bl8:=[[1,19,37,41],[3,24,28,39],[7,12,27,36],[10,11,31,38]];
bl9:=[[1,7,39,45],[3,10,41,48],[4,12,43,46],[6,11,44,47]];
bl10:=[[1,4,15,24],[3,6,19,26],[7,10,30,33]];
bl12:=[[1,5,12],[2,3,11],[19,32,45],[20,31,46],[23,36,47],[24,35,48]];
bl14:=[[1,3,18,21]];
bl18:=[[1,7,40,47],[3,10,42,46],[13,14,45,48]];
### vertauschte 39, 40  !!
degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x^2+x+1)^3/(x-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl18);

BlockIntersectHC(bl1,hc,3);
BlockIntersectHC(bl2,hc,3);
BlockIntersectHC(bl5,hc,3);
BlockIntersectHC(bl6,hc,3);
BlockIntersectHC(bl7,hc,3);
BlockIntersectHC(bl9,hc,3);
BlockIntersectHC(bl12,hc,3);
BlockIntersectHC(bl18,hc,3);

####
H:=Hecke(ComplexReflectionGroup(6,1,1),[[1,-x,x^4,-x^5,x^8,-x^9]]);
bl1:=[[1,3,5],[2,4,6]];;
bl2:=[[1,2,3,4,5,6]];;
bl4:=[[1,3,5],[2,4,6]];;
bl6:=[[1,6],[2,3],[4,5]];;
bl8:=[[1,5],[2,6]];;
bl10:=[[1,4],[3,6]];;
bl14:=[[2,5]];;
bl18:=[[1,6]];;

degs:=1/2*x^3*(x^3-1)*List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x^6-1)^2/(x^4-x^2+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl4);
BlockIntersection(bl6);
BlockIntersection(bl8);
BlockIntersection(bl10);
BlockIntersection(bl14);
BlockIntersection(bl18);

####
H:=Hecke(ComplexReflectionGroup(6,1,1),[[1,x,-x,-x^3,-x^5,x^8]]);
bl1:=[[1,2,6],[3,4,5]];;  ## ???
bl2:=[[1,3,4,5,6]];;
bl4:=[[1,6],[2,4],[3,5]];;
bl6:=[[1,4],[5,6]];;
bl7:=[[2,6]];;
bl8:=[[1,6],[2,5]];;
bl10:=[[1,5],[4,6]];;
bl14:=[[3,6]];;

degs:=x^2*(x^4+x^2+1)*List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x^6-1)/(x^5-1)/(x^4-1)/(x^3-1)/(x^2-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl4);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl10);
BlockIntersection(bl14);

####
H:=Hecke(ComplexReflectionGroup(6,1,1),[[1,-x^3,-x^5,x^7,-x^7,x^8]]);
bl1:=[[1,4,6],[2,3,5]];;
bl2:=[[1,2,3,5,6]];;
bl4:=[[1,6],[2,5],[3,4]];;
bl6:=[[1,2],[3,6]];;
bl7:=[[1,4]];;
bl8:=[[1,6],[2,4]];;
bl10:=[[1,3],[2,6]];;
bl14:=[[1,5]];;

degs:=x^7*(x^4+x^2+1)*List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x^6-1)/(x^5-1)/(x^4-1)/(x^3-1)/(x^2-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl4);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl10);
BlockIntersection(bl14);


###############
###   d=4
H:=Hecke(ComplexReflectionGroup(8),[[1,x,-x,-x^4]]);
bl1:=[[ 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15 ]];
bl2:=[[ 1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 16 ]];
bl3:=[[ 1, 3, 4, 6, 7, 8, 9, 11, 15 ],[ 5, 10, 16 ],[ 13, 14 ]];
bl5:=[[ 1, 9, 13 ],[ 4, 14, 15 ]];
bl6:=[[1,2,4,5,7,8,10,11,16],[6,9,15], [12,14]];
bl7:=[[ 4, 6, 12 ]];
bl8:=[[ 1, 4 ],[ 5, 9 ],[ 6, 10 ],[ 11, 14 ]];
bl9:=[[ 2, 4, 9 ]];
bl10:=[[1,10,12],[4,14,16]];
bl12:=[[ 1, 4, 7 ],[ 5, 10, 15 ],[ 6, 9, 16 ]];
bl14:=[[4,5,13]];
bl18:=[[3,4,10]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x^2+1)^2/(x^2-1)^3/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl18);

####
H:=Hecke(ComplexReflectionGroup(4,1,2),[[1,x,-x,-x^4],[-1,-x^6]]);
bl1:=[[ 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14 ]];
bl2:=[[ 1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14 ]];
bl3:=[[1,11],[3,4],[5,6,7,8,10,12,13,14]];
bl5:=[[1,3,13],[4,10,11]];
bl6:=[[1,11],[2,4],[5,6,8,9,10,12,13,14]];
bl7:=[[3,8,11]];
bl8:=[[1,10],[2,7],[3,9],[11,14]];
bl9:=[[7,10,12]];
bl10:=[[1,2,12],[4,10,11]];
bl14:=[[2,5,11]];
bl18:=[[9,10,13]];

degs:=x*List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x^2+1)^2/(x^2-1)^3/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl14);
BlockIntersection(bl18);

####
H:=Hecke(ComplexReflectionGroup(4,1,2),[[1,x^3,-x^3,-x^4],[-1,-x^6]]);
bl1:=[[ 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14 ]];
bl2:=[[ 1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14 ]];
bl3:=[[1,3,5,6,8,11,12,13],[4,7],[10,14]];
bl5:=[[5,7,14],[4,10,11]];
bl6:=[[1,2,5,6,8,11,12,13],[4,9],[10,14]];
bl7:=[[7,10,12]];
bl8:=[[1,10],[2,7],[3,9],[11,14]];
bl9:=[[3,8,11]];
bl10:=[[8,9,14],[4,10,11]];
bl14:=[[9,10,13]];
bl18:=[[2,5,11]];

degs:=x^2*List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x^2+1)^2/(x^2-1)^3/i);;

####
H:=Hecke(ComplexReflectionGroup(8),[[1,x^3,-x^3,-x^4]]);
bl1:=[[ 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15 ]];
bl2:=[[ 1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 16 ]];
bl3:=[[ 1, 2, 4, 6, 7, 8, 9, 14, 15 ], [ 5, 10, 16 ], [ 11, 12 ]];
bl5:=[[ 1, 11, 15 ],[ 4, 6, 12 ]];
bl6:=[[1,3,4,5,7,8,10,14,16],[6,9,15],[11,13]];
bl7:=[[ 1, 9, 13 ]];
bl8:= [[ 1, 4 ], [ 5, 9 ], [ 6, 10 ], [ 11, 14 ]];
bl9:=[[ 1, 3, 6 ]];
bl10:=[[1,11,16],[4,5,13]];
bl12:=[[ 1, 4, 7 ], [ 5, 10, 15 ],[ 6, 9, 16 ]];
bl14:=[[1,10,12]];
bl18:=[[1,2,5]];

degs:=x^3*List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x^2+1)^2/(x^2-1)^3/i);;


###############
###   d=5
H:=Hecke(ComplexReflectionGroup(10,1,1),[[1,-1,-x,x^2,-x^2,x^3,-x^3,x^4,x^6,-x^9]]);
bl1:=[[1,4,6,8,9],[2,3,5,7,10]];;
bl2:=[[1,3,4,7,8,9,10],[2,5,6]];;
bl3:=[[1,6,9],[2,7,10]];;
bl4:=[[1,5,8],[2,4,9],[3,6,10]];;
bl6:=[[1,7,9,10],[2,6],[3,8]];;
bl7:=[[5,10]];;
bl8:=[[2,8],[3,10],[5,9]];;
bl9:=[[2,10]];;
bl10:=[[3,9],[8,10]];;
bl12:=[[2,9],[6,10]];;
bl14:=[[4,10]];;
bl18:=[[1,10]];;

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x^5-1)/(x^2-1)/(x^3-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl18);

####
H:=Hecke(ComplexReflectionGroup(10,1,1),[[1,-x^3,-x^5,x^6,-x^6,x^7,-x^7,x^8,x^9,-x^9]]);
bl1:=[[1,4,6,8,9],[2,3,5,7,10]];;
bl2:=[[1,2,3,4,7,8,10],[5,6,9]];;
bl3:=[[1,4,9],[2,5,10]];;
bl4:=[[1,5,8],[2,7,9],[3,6,10]];;
bl6:=[[1,2,4,10],[3,8],[5,9]];;
bl7:=[[1,6]];;
bl8:=[[1,8],[2,6],[3,9]];;
bl9:=[[1,9]];;
bl10:=[[1,3],[2,8]];;
bl12:=[[1,5],[2,9]];;
bl14:=[[1,7]];;
bl18:=[[1,10]];;

degs:=x^3*List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x^5-1)/(x^2-1)/(x^3-1)/i);;

BlockIntersection(bl1);

####
H:=Hecke(ComplexReflectionGroup(10,1,1),[[1,-x^2,-x^6,x^8,x^9,-x^9,-x^10,x^12,x^16,-x^18]]);
bl1:=[[1,4,5,8,9],[2,3,6,7,10]];;
bl2:=[[1,2,3,4,7,8,9,10]];;
bl3:=[[1,5,8],[3,6,10]];;
bl4:=[[1,4,9],[2,7,10]];;
bl6:=[[1,3,8,10],[2,4],[7,9]];;
bl7:=[[2,6],[5,9]];;
bl8:=[[1,9],[2,10]];;
bl9:=[[1,5],[6,10]];;
bl10:=[[1,7],[2,8],[3,9],[4,10]];;
bl12:=[];
bl14:=[[2,9]];;
bl18:=[[1,10]];;

degs:=List(SchurElements(H),i->x^2*(x^2+1)*(x^4-1)*(x^12-1)*(x^16-1)*(x^20-1)*(x^24-1)*(x^28-1)*(x^36-1)/(x^10-1)/(x^4-1)/(x^6-1)/i);;
unp:=List(unp,i->Value(i,x^2));;

BlockIntersection(bl1);

BlockIntersectHC(bl1,hc,5);
BlockIntersectHC(bl3,hc,5);
BlockIntersectHC(bl7,hc,5);
BlockIntersectHC(bl9,hc,5);


###############
###   d=6
H:=Hecke(ComplexReflectionGroup(26),[[1,x^3],[1,-x,x^2]]);
bl1:=[ [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20,
21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 37, 38, 39, 42 ], [ 11,
12, 31, 32, 35, 36, 40, 41 ], [45,46],[47,48]]; #??
bl2:=[[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44]];;
bl3:=[[ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14], [11,12],
[15,16,17,18,19,20,27,28,29,30,45,46],[21,22,23,24,25,26,33,34,37,38,47,48],
[31,32], [35,36]];
bl4:=[[1,9,12,19,23,32,36,37,42],[3,8,11,20,24,28,31,35,39],[4,10,14,16,18,34,38,40],[6,7,13,21,25,27,29,41]];
bl5:=[[1,4,15,24], [3,6,19,26], [7,10,30,33]];
bl7:=[[ 1, 3, 18, 21 ]];
bl8:=[[1,19,37,41],[3,24,28,40],[7,12,27,36],[10,11,31,38]];
bl9:=[[ 1,7,39,47], [3,10,42,46], [13,14,45,48]];
##bl10:=[[1,11,17],[3,12,22],[7,33,44],[10,30,43],[13,19,35],[14,24,32]];
bl10:=[[1,11,17],[3,12,22],[7,33,43],[10,30,44],[13,19,35],[14,24,32]];
##bl12:=[[1,5,12],[2,3,11],[19,32,45],[20,31,46],[23,36,47],[24,35,48]];
bl12:=[[1,5,12],[2,3,11],[19,32,47],[20,31,48],[23,36,45],[24,35,46]];
bl14:=[[1,25,31,43], [3,16,36,44]];
bl18:=[[1,7,40,45],[3,10,41,48],[4,12,43,46],[6,11,44,47]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x^2-x+1)^3/(x+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl18);

BlockIntersectHC(bl1,hc,6);
BlockIntersectHC(bl3,hc,6);
BlockIntersectHC(bl9,hc,6);
BlockIntersectHC(bl10,hc,6);
BlockIntersectHC(bl12,hc,6);
BlockIntersectHC(bl14,hc,6);
BlockIntersectHC(bl18,hc,6);

####
H:=Hecke(ComplexReflectionGroup(6,1,1),[[1,x,x^4,x^5,x^8,x^9]]);
bl1:=[[1,2,3,4,5,6]];;
bl2:=[[1,3,5],[2,4,6]];;
bl3:=[[1,6],[2,3],[4,5]];;
bl4:=[[1,3,5],[2,4,6]];;
bl5:=[[1,4],[3,6]];;
bl7:=[[2,5]];;
bl8:=[[1,5],[2,6]];;
bl9:=[[1,6]];;

degs:=1/2*x^3*(x^3+1)*List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x^6-1)^2/(x^4-x^2+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);

####
H:=Hecke(ComplexReflectionGroup(6,1,1),[[1,x,-x,x^3,x^5,x^8]]);
bl1:=[[1,2,4,5,6]];;
bl2:=[[1,3,6],[2,4,5]];;
bl3:=[[1,4],[5,6]];;
bl4:=[[1,6],[2,5],[3,4]];;
bl5:=[[1,5],[4,6]];;
bl7:=[[2,6]];;
bl8:=[[1,6],[3,5]];;
bl14:=[[3,6]];;

degs:=x^2*(x^4+x^2+1)*List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x^6-1)/(x^5+1)/(x^4-1)/(x^3+1)/(x^2-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl14);

####
H:=Hecke(ComplexReflectionGroup(6,1,1),[[1,x^3,x^5,x^7,-x^7,x^8]]);
bl1:=[[1,2,3,4,6]];;
bl2:=[[1,5,6],[2,3,4]];;
bl3:=[[1,2],[3,6]];;
bl4:=[[1,6],[2,4],[3,5]];;
bl5:=[[1,3],[2,6]];;
bl7:=[[1,4]];;
bl8:=[[1,6],[2,5]];;
bl14:=[[1,5]];;

degs:=x^7*(x^4+x^2+1)*List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x^6-1)/(x^5+1)/(x^4-1)/(x^3+1)/(x^2-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl14);


###############
###   d=7
H:=Hecke(ComplexReflectionGroup(14,1,1),[[1,x^4,x^6,-x^6,x^8,-x^8,x^9,-x^9,x^10,-x^10,x^12,-x^12,-x^14,-x^18]]);
bl1:=[[1,2,3,5,7,9,11],[4,6,8,10,12,13,14]];;
bl2:=[[1,2,4,5,10,11,13,14],[3,6,9,12]];;
bl3:=[[1,3,8,11],[2,9],[4,7,12,14],[6,13]];;
bl4:=[[1,5,12],[2,6,11],[3,10,14],[4,9,13]];;
bl5:=[[1,9],[2,8],[6,14],[7,13]];;
bl6:=[[1,4,11,14],[2,10],[3,12],[5,13]];;
bl8:=[[1,6],[2,12],[3,13],[9,14]];;
bl9:=[[1,8],[7,14]];;
bl10:=[[1,10],[2,13],[5,14]];;
bl12:=[[1,12],[3,14]];;
bl14:=[[1,13],[2,14]];;
bl18:=[[1,14]];;

degs:=List(SchurElements(H),i->(x^4-1)*(x^12-1)*(x^16-1)*(x^20-1)*(x^24-1)*(x^28-1)*(x^36-1)/(x^14-1)/i);;
unp:=List(unp,i->Value(i,x^2));;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl18);

BlockIntersectHC(bl1,hc,7);
BlockIntersectHC(bl3,hc,7);
BlockIntersectHC(bl5,hc,7);
BlockIntersectHC(bl9,hc,7);


###############
###   d=8
H:=Hecke(ComplexReflectionGroup(8,1,1),[[1,x^2,x^3,-x^3,x^5,-x^5,x^6,x^12]]);
bl1:=[[1,2,3,5,7,8],[4,6]];;
bl2:=[[1,2,4,6,7,8],[3,5]];;
bl3:=[[1,3,7,8],[2,5]];;
bl4:=[[1,8],[4,5],[2,7],[3,6]];;
bl5:=[[1,5],[2,8]];;
bl6:=[[1,4,7,8],[2,6]];;
bl7:=[[5,8]];;
bl9:=[[3,8]];;
bl10:=[[1,6],[2,8]];;
bl12:=[[1,8]];;
bl14:=[[6,8]];;
bl18:=[[4,8]];;

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x^4+1)/(x^4-1)/(x^2-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl18);

####
H:=Hecke(ComplexReflectionGroup(8,1,1),[[1,x,-x,x^4,x^6,x^7,-x^7,x^10]]);
bl1:=[[1,2,4,5,6,8],[3,7]];;
bl2:=[[1,3,4,5,7,8],[2,6]];;
bl3:=[[1,5],[2,4,6,8],[3,7]];;
bl4:=[[1,4],[2,7],[3,6],[5,8]];;
bl5:=[[1,8],[2,5]];;
bl6:=[[1,5],[2,6],[3,4,7,8]];;
bl7:=[[1,6]];;
bl9:=[[2,8]];;
bl10:=[[1,8],[3,5]];;
bl12:=[[2,7],[3,6]];;
bl14:=[[1,7]];;
bl18:=[[3,8]];;

degs:=x*List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x^4+1)/(x^4-1)/(x^2-1)/i);;

BlockIntersection(bl1);

####
H:=Hecke(ComplexReflectionGroup(8,1,1),[[1,x^3,-x^3,x^4,x^6,x^9,-x^9,x^10]]);
bl1:=[[1,2,4,5,6,8],[3,7]];;
bl2:=[[1,3,4,5,7,8],[2,6]];;
bl3:=[[1,2,5,6],[3,7],[4,8]];;
bl4:=[[1,4],[2,7],[3,6],[5,8]];;
bl5:=[[1,8],[4,6]];;
bl6:=[[1,3,5,7],[2,6],[4,8]];;
bl7:=[[2,8]];;
bl9:=[[1,6]];;
bl10:=[[1,8],[4,7]];;
bl12:=[[2,7],[3,6]];;
bl14:=[[3,8]];;
bl18:=[[1,7]];;

degs:=x^2*List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x^4+1)/(x^4-1)/(x^2-1)/i);;

BlockIntersection(bl1);

####
H:=Hecke(ComplexReflectionGroup(8,1,1),[[1,x^6,x^7,-x^7,x^9,-x^9,x^10,x^12]]);
bl1:=[[1,2,3,5,7,8],[4,6]];;
bl2:=[[1,2,4,6,7,8],[3,5]];;
bl3:=[[1,2,5,8],[3,7]];;
bl4:=[[1,8],[2,7],[3,6],[4,5]];;
bl5:=[[1,7],[3,8]];;
bl6:=[[1,2,6,8],[4,7]];;
bl7:=[[1,3]];;
bl9:=[[1,5]];;
bl10:=[[1,7],[4,8]];;
bl12:=[[1,8]];;
bl14:=[[1,4]];;
bl18:=[[1,6]];;

degs:=x^3*List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x^4+1)/(x^4-1)/(x^2-1)/i);;

BlockIntersection(bl1);


###############
###   d=9
H:=Hecke(ComplexReflectionGroup(18,1,1),[[1,-x^2,x^4,-x^4,x^6,-x^6,-E(3)*x^6,-E(3)^2*x^6,x^7,-x^7,x^8,-x^8,E(3)*x^8,E(3)^2*x^8,x^10,-x^10,x^12,-x^14]]);
bl1:=[[1,3,5,9,11,15,17],[2,4,6,10,12,16,18]];;
bl2:=[[1,2,3,6,11,16,17,18],[4,5,12,15],[7,13],[8,14]];;
bl3:=[[1,5,13,17],[2,8,12,18],[3,9,14,15],[4,7,10,16]];;
bl4:=[[1,4,11],[2,5,16],[3,12,17],[6,15,18]];;
bl5:=[[1,15],[2,10],[4,18],[9,17]];;
bl6:=[[1,6,13,17],[2,8,11,18],[3,7,14,16],[4,15]];;
bl7:=[[1,9],[10,18]];;
bl8:=[[1,12],[2,15],[4,17],[5,18]];;
bl10:=[[1,16],[2,17],[3,18]];;
bl12:=[[1,13],[4,14],[8,18],[7,15]];;
bl14:=[[1,18]];;
bl18:=[[1,7],[2,13],[8,17],[14,18]];;

degs:=List(SchurElements(H),i->(x^4-1)*(x^12-1)*(x^16-1)*(x^20-1)*(x^24-1)*(x^28-1)*(x^36-1)/(x^12+x^6+1)/(x^2-1)/i);;
unp:=List(unp,i->Value(i,x^2));;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl18);

BlockIntersectHC(bl1,hc,9);
BlockIntersectHC(bl2,hc,9);
BlockIntersectHC(bl3,hc,9);
BlockIntersectHC(bl5,hc,9);
BlockIntersectHC(bl6,hc,9);
BlockIntersectHC(bl7,hc,9);
BlockIntersectHC(bl12,hc,9);
BlockIntersectHC(bl18,hc,9);


###############
###   d=10
H:=Hecke(ComplexReflectionGroup(10,1,1),[[1,-1,x,x^2,-x^2,x^3,-x^3,x^4,x^6,x^9]]);
bl1:=[[1,3,4,6,8,9,10],[2,5,7]];;
bl2:=[[1,4,7,8,9],[2,3,5,6,10]];;
bl3:=[[1,6,9,10],[2,7],[3,8]];;
bl4:=[[1,5,8],[2,4,9],[3,7,10]];;
bl5:=[[3,9],[8,10]];;
bl6:=[[1,7,9],[2,6,10]];;
bl7:=[[4,10]];;
bl8:=[[3,10],[2,8],[5,9]];;
bl9:=[[1,10]];;
bl12:=[[2,9],[7,10]];;
bl14:=[[5,10]];;
bl18:=[[2,10]];;

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x^5+1)/(x^2-1)/(x^3+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl18);

####
H:=Hecke(ComplexReflectionGroup(10,1,1),[[1,x^3,x^5,x^6,-x^6,x^7,-x^7,x^8,x^9,-x^9]]);
bl1:=[[1,2,3,4,6,8,9],[5,7,10]];;
bl2:=[[1,4,7,8,10],[2,3,5,6,9]];;
bl3:=[[1,2,4,9],[3,8],[5,10]];;
bl4:=[[1,5,8],[2,6,10],[3,7,9]];;
bl5:=[[1,3],[2,8]];;
bl6:=[[1,4,10],[2,5,9]];;
bl7:=[[1,6]];;
bl8:=[[1,8],[2,7],[3,10]];;
bl9:=[[1,9]];;
bl12:=[[1,5],[2,10]];;
bl14:=[[1,7]];;
bl18:=[[1,10]];;

degs:=x^3*List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x^5+1)/(x^2-1)/(x^3+1)/i);;

BlockIntersection(bl1);

####
H:=Hecke(ComplexReflectionGroup(10,1,1),[[1,x^2,x^6,x^8,E(4)*x^9,-E(4)*x^9,x^10,x^12,x^16,x^18]]);
bl1:=[[1,2,3,4,7,8,9,10]];;
bl2:=[[1,4,6,8,9],[2,3,5,7,10]];;
bl3:=[[1,3,8,10],[2,4],[7,9]];;
bl4:=[[1,4,9],[2,7,10]];;
bl5:=[[1,7],[2,8],[3,9],[4,10]];;
bl6:=[[1,5,8],[3,6,10]];;
bl7:=[[2,9]];;
bl8:=[[1,9],[2,10]];;
bl9:=[[1,10]];;
bl12:=[];;
bl14:=[[2,5],[6,9]];;
bl18:=[[1,6],[5,10]];;

degs:=List(SchurElements(H),i->x^2*(x^2-1)*(x^4-1)*(x^12-1)*(x^16-1)*(x^20-1)*(x^24-1)*(x^28-1)*(x^36-1)/(x^10+1)/(x^4-1)/(x^6+1)/i);;
unp:=List(unp,i->Value(i,x^2));;

BlockIntersection(bl1);

BlockIntersectHC(bl1,hc,10);
BlockIntersectHC(bl2,hc,10);
BlockIntersectHC(bl6,hc,10);
BlockIntersectHC(bl14,hc,10);
BlockIntersectHC(bl18,hc,10);


###############
###   d=12
H:=Hecke(ComplexReflectionGroup(12,1,1),[[1,x,-x,x^2,E(3)*x^2,E(3)^2*x^2,x^3,-x^3,x^4,x^5,-x^5,x^8]]);
bl1:=[[1,2,4,7,9,10,12],[3,8,11]];;
bl2:=[[1,3,4,8,9,11,12],[2,7,10]];;
bl3:=[[1,5,7],[2,6,9],[4,10,12]];;
bl4:=[[1,9,12],[2,8,10],[3,7,11]];;
bl5:=[[1,10],[7,12]];;
bl6:=[[1,5,8],[3,6,9],[4,11,12]];;
bl7:=[[2,12]];;
bl8:=[[1,12],[2,11],[3,10]];;
bl9:=[[6,10],[5,12]];;
bl10:=[[1,11],[8,12]];;
bl14:=[[3,12]];;
bl18:=[[5,11],[6,12]];;

degs:=List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x^4-x^2+1)/(x^6-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl14);
BlockIntersection(bl18);

BlockIntersectHC(bl3,hc,12);
BlockIntersectHC(bl5,hc,12);
BlockIntersectHC(bl6,hc,12);
BlockIntersectHC(bl9,hc,12);
BlockIntersectHC(bl18,hc,12);

####
H:=Hecke(ComplexReflectionGroup(12,1,1),[[1,x^3,-x^3,x^4,x^5,-x^5,x^6,E(3)*x^6,E(3)^2*x^6,x^7,-x^7,x^8]]);
bl1:=[[1,2,4,5,7,10,12],[3,6,11]];;
bl2:=[[1,3,4,6,7,11,12],[2,5,10]];;
bl3:=[[1,2,7],[4,8,10],[5,9,12]];;
bl4:=[[1,4,12],[3,5,11],[2,6,10]];;
bl5:=[[1,5],[2,12]];;
bl6:=[[1,3,7],[4,8,11],[6,9,12]];;
bl7:=[[1,10]];;
bl8:=[[1,12],[2,11],[3,10]];;
bl9:=[[1,9],[2,8]];;
bl10:=[[1,6],[3,12]];;
bl14:=[[1,11]];;
bl18:=[[1,8],[3,9]];;

degs:=x^3*List(SchurElements(H),i->(x^2-1)*(x^6-1)*(x^8-1)*(x^10-1)*(x^12-1)*(x^14-1)*(x^18-1)/(x^4-x^2+1)/(x^6-1)/i);;

BlockIntersection(bl1);

###############
###   d=14
H:=Hecke(ComplexReflectionGroup(14,1,1),[[1,x^4,x^6,-x^6,x^8,-x^8,E(4)*x^9,-E(4)*x^9,x^10,-x^10,x^12,-x^12,x^14,x^18]]);
bl1:=[[1,2,3,5,9,11,13,14],[4,6,10,12]];;
bl3:=[[1,3,11,14],[2,9],[4,12],[5,13]];;
bl2:=[[1,2,4,5,8,10,11],[3,6,7,9,12,13,14]];;
bl4:=[[1,5,12],[3,10,13],[2,6,11],[4,9,14]];;
bl5:=[[1,9],[2,13],[5,14]];;
bl6:=[[1,4,7,11],[3,8,12,14],[2,10],[6,13]];;
bl7:=[[1,13],[2,14]];;
bl8:=[[1,6],[2,12],[4,13],[10,14]];;
bl9:=[[1,14]];;
bl10:=[[1,10],[2,8],[7,13],[6,14]];;
bl12:=[[1,12],[4,14]];;
bl18:=[[1,7],[8,14]];;

degs:=List(SchurElements(H),i->(x^4-1)*(x^12-1)*(x^16-1)*(x^20-1)*(x^24-1)*(x^28-1)*(x^36-1)/(x^14+1)/i);;
unp:=List(unp,i->Value(i,x^2));;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl18);

BlockIntersectHC(bl2,hc,14);
BlockIntersectHC(bl6,hc,14);
BlockIntersectHC(bl10,hc,14);
BlockIntersectHC(bl18,hc,14);

###############
###   d=18
H:=Hecke(ComplexReflectionGroup(18,1,1),[[1,x^2,x^4,-x^4,x^6,-x^6,E(3)*x^6,E(3)^2*x^6,E(4)*x^7,-E(4)*x^7,x^8,-x^8,E(3)*x^8,E(3)^2*x^8,x^10,-x^10,x^12,x^14]]);
bl1:=[[1,2,3,5,11,15,17,18],[7,13],[4,6,12,16],[8,14]];;
bl2:=[[1,3,6,9,11,16,17],[2,4,5,10,12,15,18]];;
bl3:=[[1,5,13,17],[3,7,14,15],[2,8,11,18],[4,16]];;
bl4:=[[1,4,11],[2,6,15],[3,12,17],[5,16,18]];;
bl5:=[[1,15],[2,17],[3,18]];;
bl6:=[[1,6,13,17],[2,8,12,18],[3,9,14,16],[4,7,10,15]];;
bl7:=[[1,18]];;
bl8:=[[1,12],[2,16],[4,17],[6,18]];;
bl9:=[[1,8],[2,14],[7,17],[13,18]];;
bl10:=[[1,16],[2,10],[9,17],[4,18]];;
bl12:=[[1,13],[4,14],[7,16],[8,18]];;
bl14:=[[1,10],[9,18]];;

degs:=List(SchurElements(H),i->(x^4-1)*(x^12-1)*(x^16-1)*(x^20-1)*(x^24-1)*(x^28-1)*(x^36-1)/(x^12-x^6+1)/(x^2+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);

BlockIntersectHC(bl1,hc,18);
BlockIntersectHC(bl2,hc,18);
BlockIntersectHC(bl3,hc,18);
BlockIntersectHC(bl5,hc,18);
BlockIntersectHC(bl6,hc,18);
BlockIntersectHC(bl7,hc,18);
BlockIntersectHC(bl9,hc,18);
BlockIntersectHC(bl10,hc,18);
BlockIntersectHC(bl12,hc,18);
BlockIntersectHC(bl14,hc,18);


##################################################
##################    E_8    #####################
##################################################6.2.25
x:=X(Cyclotomics);; x.name:="x";;
W:= CoxeterGroup("E",8);
uc:=UnipotentCharacters(W); Display(uc);
unp:=uc.degrees;;

###############
###   d=1
H:=Hecke(W,[[1,-x]]);
bl2:=[[1,68,5,10,3,15,8,81,29,18,24,93,70,86,79,43,20,45,13,37,100,54,91,35,84,64,32,22,27,48,109,57,66,111,95,107,59,7,56,31,34,50,12,47,26,17,39,112,96,108,58,67,110,65,33,28,49,92,85,55,36,101,44,21,46,14,38,23,94,71,80,87,30,19,25,82,16,9,11,4,6,69,2],
  [72,74,77,40,89,51,102,97,60,76,88,99,83,61,103,98,52,90,41,78,75,73],
  [105,63],[106,62]];;
bl3:=[[1,5,10,3,15,8,29,18,40,43,20,13,37,51,62,64,32,22,27,48,60,53,7,31,34,12,50,42,17,39,61,65,33,49,28,63,52,44,21,14,38,23,41,30,19,16,9,4,11,6,2],
[68,72,74,81,77,93,70,79,84,91,105,102,97,111,95,107,104,76,99,83,112,96,108,103,98,106,85,92,94,71,80,78,82,75,73,69],
  [24,58,55],[90,109,100],[54,57,25],[101,110,89],[86,88,87],[46,47,45]];;
bl4:=[[1,5,72,8,15,77,24,20,13,45,37,89,102,22,97,57,66,53,7,59,42,26,47,17,39,58,67,103,98,90,21,14,46,38,23,78,25,9,16,73,6,2],
  [68,81,40,91,84,109,60,108,52,101,94,87,71],
  [3,74,18,35,32,27,83,33,28,36,19,75,4],
  [70,93,86,100,51,107,61,110,92,85,41,82,69],
  [10,29,54,64,48,76,88,99,65,49,55,30,11]];;
bl5:=[[1,3,10,24,40,35,54,105,56,12,42,26,106,36,55,41,25,4,11,2],
  [68,72,70,79,86,89,62,109,76,104,88,83,110,63,90,71,80,87,73,69],
  [15,51,57,33,6],[16,52,58,32,5],[74,84,103,101,82],[75,85,102,100,81]];;
bl6:=[[1,68,5,10,3,15,8,81,29,18,93,70,79,37,20,43,13,84,91,64,32,22,27,48,111,95,107,53,59,56,34,50,12,17,39,112,96,108,65,33,28,49,92,85,44,21,14,38,23,94,71,80,30,19,82,16,9,11,4,6,69,2],[72,74,77,40,51,102,60,104,83,61,103,52,41,78,75,73],[24,100,109,58,36],[35,57,110,101,25],[86,45,26,46,87]
];;
bl7:=[[1,18,62,66,61,36,9],[2,19,63,67,60,35,8],[68,74,89,95,106,101,78],[69,75,90,96,105,100,77]];;
bl8:=[[1,5,74,24,43,13,45,22,57,66,104,88,99,58,67,44,14,46,23,25,75,6,2],[68,51,109,108,101,41],[72,29,35,28,78,11],[10,77,27,36,30,73],[3,89,48,98,55,19],[18,54,97,49,90,4],[40,100,107,110,52,69]];;
bl9:=[[1,8,27,61,63,46,4],[2,9,28,60,62,45,3],[5,29,51,47,52,30,6],[68,77,91,88,92,78,69],[72,81,105,111,98,87,75],[73,82,106,112,97,86,74]];;
bl10:=[[1,68,3,10,24,93,79,86,35,54,109,53,31,50,47,110,36,55,94,80,87,25,4,11,69,2],[8,91,57,65,101,82,6],[5,81,100,64,58,92,9]];;
bl12:=[[1,5,72,8,15,77,43,37,102,22,97,56,31,42,39,103,98,44,38,23,78,9,16,73,6,2],[3,74,18,32,83,33,19,75,4],[10,29,64,104,65,30,11],[68,81,40,60,108,52,80],[79,51,107,61,41,82,69]];;
bl14:=[[1,29,100,66,112,55,16,69],[2,30,101,67,111,54,15,68]];;
bl15:=[[1,10,40,62,59,63,41,11,2],[68,72,93,105,99,106,94,73,69]];;
bl18:=[[1,15,86,48,96,46,82,11],[2,16,87,49,95,45,81,10],[68,5,18,84,26,85,19,6,69]];;
bl20:=[[1,72,24,89,34,90,25,73,2]];
bl24:=[[1,5,74,20,76,21,75,6,2]];;
bl30:=[[1,68,3,70,7,71,4,69,2]];;

degs:=List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x-1)^8/i);;

BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl15);
BlockIntersection(bl18);
BlockIntersection(bl20);
BlockIntersection(bl24);
BlockIntersection(bl30);

###
H:=Hecke(CoxeterGroup("F",4),[[1,-x],[1,-x],[1,-x^4]]);
bl2:=[[1..22]];;
bl3:=[[1,2,3,4,5,6,7,8,9],[17,18,19,20,21,22,23,24,25]];;
bl4:=[[1,2,3,4,5,6,23,24,10,11,12,13,25]];;
bl6:=[[1,7,3,17,19,5,12,21,16,15,9,22,6,11,18,20,2,8,4],[23,25,24]];;
bl8:=[[7,23,15,14,24,8],[3,4],[12,13],[10,11],[1,2],[19,20],[17,18]];;
bl10:=[[1,17,10,16,14,9,13,20,4],[7,19,6],[5,18,8]];;
bl12:=[[1,3,23,5,12,25,6,11,24,2,4],[8,9,7],[18,21,17],[20,22,19]];;
bl14:=[[3,22,13,8],[7,10,21,2]];;
bl18:=[[1,21,11,8],[7,12,22,4],[3,19,14,18,2]];;
bl20:=[[1,10,25,13,4]];;
bl24:=[[7,23,16,24,8]];;
bl30:=[[1,17,15,20,4]];;

degs:=1/2*x^3*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x-1)/(x^2-1)/(x^3+1)/(x^4-1)^2/i);;

BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl6);
BlockIntersection(bl8);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl18);
BlockIntersection(bl20);
BlockIntersection(bl24);
BlockIntersection(bl30);

###
H:=Hecke(CoxeterGroup("G",2),[[1,-x^9],[1,-x]]);
bl2:=[[1,2,3,4]];;
bl3:=[[1,2,5],[3,4,6]];;
bl6:=[[1,2,3,4,6]];;
bl12:=[[3,4,6]];;
bl15:=[[1,2,5]];;
bl18:=[[1,3],[2,4]];;
bl24:=[[3,4,5]];;
bl30:=[[1,2,6]];;

degs:=1/3*x^7*(x-1)*List(SchurElements(H),i->(x+1)^2*(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^4-x^2+1)/(x^9-1)/(x^6-1)^2/i);;

BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl6);
BlockIntersection(bl12);
BlockIntersection(bl15);
BlockIntersection(bl18);
BlockIntersection(bl24);
BlockIntersection(bl30);


###############
###   d=2


###############
###   d=3
H:=Hecke(ComplexReflectionGroup(32),[[1,x,x^2]]);
bl1:=[[1,2,3,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,47,
  48,49,50,51,52,53,54,55,56,57,58,59,60,67,68,69,70,71,72,80,89,90,91,93,94],
  [4,5,6,7,8,9,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,79,81,82,83,84,85,86,
  87,88,92,95,96,97,98,99],[61,62,63],[64,65,66],[73,74,75],[76,77,78]];;
bl2:=[[1,2,4,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,
  31,32,33,34,36,38,40,41,42,43,46,47,48,51,52,53,54,55,56,57,58,59,60,67,72,79,80,
  81,82,84,86,88,89,94,100],[6,8,35,37,39,44,49,50,68,69,70,71,83,85,87,95,97,98,99],
  [61,62,73,75,102],[64,66,77,78,101],[91,96],[92,93]];;
bl4:=[[1,2,3,6,8,11,12,13,14,19,24,25,26,27,29,39,44,51,54,56,60,67,72,83,85,90,94,
  97,99,100],[4,5,31,34,38,50,69,70,84,86],[7,9,33,36,46,49,68,71,81,82],
  [16,17,20,21,22,23,32,35,37,47,52,53,55,57,58,59,80,87,89,95,98]];;  ????

bl5:=[[1,2,16,17,20,22,28,49,50,90,91,93,100],[4,6,8,9,34,36,40,42,45,87,92,96,98],
  [12,29,52,71],[14,26,59,69],[31,37,81,83],[35,46,85,86]];;
bl6:=[[1,5,10,13,16,19,22,25,26,31,32,34,40,43,52,53,56,66,67,74,77,79,80,82,102],
  [2,7,11,15,17,20,24,27,29,36,41,42,46,47,54,58,59,61,72,75,76,84,88,89,101],
  [3,4,9,12,14,18,21,23,28,30,33,38,51,55,57,60,62,64,73,78,81,86,100],
  [6,35,50,65,68,83],[8,37,49,63,70,85],[39,44,45,69,71,87]];;
bl7:=[[1,11,57,70,93],[2,13,55,68,91],[4,35,44,79,96],[9,37,39,88,92]];;
bl8:=[[1,2,10,12,14,15,35,37,45,54,56,67,72,95],[4,49,71,84],
  [6,16,23,39,47],[22,57,89,97],[8,17,21,32,44],[20,55,80,99],[9,50,69,82]];;
bl9:=[[1,32,78,91],[2,47,73,93],[4,33,39,63],[6,35,41,66],[8,37,43,61],
  [9,38,44,65],[11,20,68,77],[12,21,69,74],[13,22,70,75],[14,23,71,76],
  [31,64,92,97],[46,62,96,99]];;
bl10:=[[1,2,3,4,5,7,9,16,17,20,22,30,40,42,48],[11,12,38,46,53],
  [13,14,31,33,58]];;
bl12:=[[1,8,10,13,25,26,56,73,76,85,97,101],[2,6,11,15,27,29,54,74,78,83,99,102],[4,61,69],[9,66,71],
  [12,14,39,44,48,60,75,77,90],[16,53,65],[22,37,52],[17,58,63],[20,35,59],
  [21,23,45],[55,57,87],[31,40,70],[42,46,68],[49,62,82],[50,64,84]];;
bl14:=[[1,4,23,29,43],[2,9,21,26,41]];;
bl15:=[[1,16,49,91,102],[2,17,50,93,101],[4,9,62,64,95],[5,8,63,66,92],
  [6,7,61,65,96]];;
bl18:=[[1,31,61,75,80],[2,46,66,77,89],[4,12,55,81,101],[9,14,57,86,102],
  [16,26,64,78,79],[17,29,62,73,88]];;
bl20:=[[1,2,6,8,18]];;
bl24:=[[1,19,37,63,77],[2,24,35,65,75],[12,14,73,78,98]];;
bl30:=[[1,22,34,62,76],[2,20,36,64,74],[4,9,61,66,94]];;

degs:=List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^2+x+1)^4/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl15);
BlockIntersection(bl18);
BlockIntersection(bl20);
BlockIntersection(bl24);
BlockIntersection(bl30);

###
H:=Hecke(ComplexReflectionGroup(5),[[1,x,x^2],[1,x^4,x^8]]);
bl1:=[[1,2,3,4,5,6,7,8,9],[10,11,12,13,14,15,16,17,18]];
bl2:=[[1,2,3,4,5,6,7,8,9,10,11,12,16,17,18,21],[13,14,15]];
bl4:=[[1,2,3,7,8,9,13,14,15],[4,5,6],[10,11,12],[16,17,18]];
bl6:=[[1,6,8,10,17,20],[3,5,7,12,16,21],[2,4,9,11,18,19]];
bl8:=[[1,3],[16,18],[10,12],[7,9],[4,6,13,15,21]];
bl10:=[[1,5,9,10,18,21],[2,6,16],[4,8,12]];
bl12:=[[1,8,15],[3,7,14],[2,9,13]];
bl14:=[[3,4,17],[6,7,11]];
bl18:=[[1,6,17],[4,9,11],[3,12,20],[7,16,19]];
bl20:=[[1,9,14]];
bl24:=[[6,15,20],[4,13,19]];
bl30:=[[1,10,19],[9,18,20]];
degs:=1/2*x^3*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^2+x+1)^2/(x^3+1)^2/(x^4-x^2+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl4);
BlockIntersection(bl6);
BlockIntersection(bl8);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl18);
BlockIntersection(bl20);
BlockIntersection(bl24);
BlockIntersection(bl30);

###
H:=Hecke(ComplexReflectionGroup(6,1,1),[[1,-1,x^2,-x^5,-x^7,x^10]]);
bl1:=[[1,3,6],[2,4,5]];;
bl2:=[[1,3,4,5,6]];;
bl4:=[[2,3,6]];;
bl5:=[[1,6],[2,4]];;
bl6:=[[3,4],[5,6]];;
bl7:=[[2,5]];;
bl8:=[[3,6]];;
bl10:=[[1,4,6],[3,5]];;
bl14:=[[1,5]];;
bl20:=[[2,6]];;

degs:=x^6*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^3-1)/(x^8-1)/(x^5-1)/(x^4-1)/(x^2-1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl10);
BlockIntersection(bl14);
BlockIntersection(bl20);

###
H:=Hecke(ComplexReflectionGroup(6,1,1),[[1,-x,x^5,-x^5,-x^9,x^10]]);
bl1:=[[1,3,6],[2,4,5]];;
bl2:=[[1,2,4,5,6]];;
bl4:=[[2,4,5]];;
bl5:=[[1,3,6]];;
bl6:=[[1,5],[2,6]];;
bl8:=[[2,3,5]];;
bl10:=[[1,4,6]];;
bl18:=[[1,5],[2,6]];;

degs:=1/3*x^7*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^9-1)/(x^4-1)^2/(x^2-1)^2/(x-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl8);
BlockIntersection(bl10);
BlockIntersection(bl18);

###
H:=Hecke(ComplexReflectionGroup(6,1,1),[[1,-x^3,-x^5,x^8,x^10,-x^10]]);
bl1:=[[1,4,5],[2,3,6]];;
bl2:=[[1,2,3,4,5]];;
bl4:=[[1,4,6]];;
bl5:=[[1,5],[3,6]];;
bl6:=[[1,2],[3,4]];;
bl7:=[[2,6]];;
bl8:=[[1,4]];;
bl10:=[[1,3,5],[2,4]];;
bl14:=[[2,5]];;
bl20:=[[1,6]];;

degs:=x^10*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^3-1)/(x^8-1)/(x^5-1)/(x^4-1)/(x^2-1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl10);
BlockIntersection(bl14);
BlockIntersection(bl20);


###############
###   d=4
H:=Hecke(ComplexReflectionGroup(31),[[-1,-x^2]]);
bl1:=[[1,2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,28,29,
  33,34,35,37,38,39,40,41,44,45,48,50,53,54,55,56,57],
  [3,6,25,27,30,31,32,42,43,46,47,51,52]];;
bl2:=[[1,2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,28,29,
  33,34,37,38,39,40,41,44,45,50,53,54,55,56,57],
  [3,6,25,27,30,31,32,36,42,43,46,47,49,51,52]];;
bl3:=[[1,2,4,5,7,8,9,10,12,15,16,17,18,19,20,22,24,26,28,29,33,34,35,36,37,
 38,41,48,50,53],[3,6,25,31,32,46,47,51,52], [13,44,55],[14,45,54],[21,23,40]];;
bl5:=[[1,2,4,5,13,14,36,39,44,45,48],[9,20,53,55],[10,19,50,54]];;
bl6:=[[1,2,3,6,7,8,9,10,11,15,16,17,18,19,20,22,24,26,27,30,31,32,35,36,37,
 38,41,49,51,52],[4,5,25,33,34,46,47,50,53],[13,42,55],[14,43,54],[21,23,39]];
bl7:=[[1,17,33,45,57],[2,18,34,44,56]];;
bl8:=[[1,7,9,13,22,23,47,54,56,59],[2,8,10,14,21,24,46,55,57,58],
  [3,29,31,44],[5,27,33,42],[6,28,32,45],[4,30,34,43]];;
bl9:=[[1,5,18,21,28],[2,4,17,23,29],[9,10,33,34,40]];;
bl10:=[[1,2,3,6,13,14,35,40,42,43,49],[9,18,51,55],[10,17,52,54]];;
bl12:=[[1,2,7,8,9,10,15,16,25],[3,4,27,28,31,34,50,51,59],
  [5,6,29,30,32,33,52,53,58],[17,18,19,20,26,46,47,48,49]];;
bl14:=[[1,19,31,43,57],[2,20,32,42,56]];;
bl15:=[[1,2,4,5,11]];;
bl18:=[[1,3,20,21,30],[2,6,19,23,27],[9,10,31,32,39]];;
bl20:=[[1,2,13,14,25],[3,4,42,45,58],[5,6,43,44,59]];;
bl24:=[[1,9,38,47,58],[2,10,37,46,59]];;
bl30:=[[1,2,3,6,12]];;  

degs:=List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^2+1)^4/i);;
degs:=List(newschur,i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^2+1)^4/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl15);
BlockIntersection(bl18);
BlockIntersection(bl20);
BlockIntersection(bl24);
BlockIntersection(bl30);

###
H:=Hecke(ComplexReflectionGroup(8),[[1,-1,-x,x^5]]);
bl1:=[[1,2,3,4,5,6,9,10,11,12,13,14,15]];;
bl2:=[[1,2,3,4,5,7,8,10,11,12,13,14,16]];;
bl3:=[[1,2,3,4,6,9,10,11,12,15],[7,8,16]];;
bl5:=[[1,4,5,9,13],[6,10],[11,14]];;
bl6:=[[1,2,3,4,7,8,10,11,12,16],[6,9,15]];;
bl7:=[[4,14,15]];;
bl8:=[[13,14],[3,4],[6,7],[8,9]];;
bl9:=[[4,6,12],[5,10,15]];;
bl10:=[[2,4,5,7,13],[8,10],[12,14]];;
bl12:=[[3,4,10],[6,9,16],[7,8,15]];;
bl14:=[[4,14,16]];;
bl15:=[[2,4,9]];;
bl18:=[[4,8,11],[5,10,16]];;
bl30:=[[1,4,7]];;

degs:=x*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^4-1)^2/(x^6-1)/(x^2-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl15);
BlockIntersection(bl18);
BlockIntersection(bl30);

###
H:=Hecke(ComplexReflectionGroup(8),[[1,-x,-x^4,x^5]]);
bl1:=[[1,2,3,4,5,6,9,10,11,12,13,14,15]];
bl3:=[[1,2,3,4,5,6,9,10,12,13,15]];
bl5:=[[1,4,11,14,15],[5,9],[6,10]];
bl6:=[[1,2,3,4,6,7,9,12,13,16],[5,10,15]];
bl7:=[[2,10,11],[3,5,14]];
bl8:=[[1,3],[2,4],[12,14],[11,13],[5,7,8,10]];
bl9:=[[1,10,12],[4,5,13]];
bl10:=[[1,4,8,11,14,16]]
bl12:=[[1,3,6],[2,4,9],[5,10,15]]; #???
bl18:=[[2,3,8]];
bl24:=[[5,10,16]];
bl30:=[[1,4,7]];

degs:=1/2*x^3*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^4-1)^2/(x^2-1)/(x^3+1)/(x-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl3);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl18);
BlockIntersection(bl24);
BlockIntersection(bl30);

###
H:=Hecke(ComplexReflectionGroup(8),[[1,x,-x^4,-x^5]]);

degs:=1/2*x^3*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^4-1)^2/(x^2-1)/(x^3-1)/(x+1)/i);;

###
H:=Hecke(ComplexReflectionGroup(8),[[1,-x^4,x^5,-x^5]]);
bl1:=[[1,2,3,4,5,7,8,10,11,12,13,14,15]];
bl3:=[[1,2,3,4,5,7,8,13,14,15],[6,9,16]];
bl5:=[[1,3,7,10,12],[5,8],[11,13]];
bl7:=[[1,11,15]];
bl8:=[[1,2],[6,8],[7,9],[11,12]];
bl9:=[[1,8,14],[5,10,15]];
bl12:=[[1,2,5],[6,9,15],[7,8,16]];
bl15:=[[1,4,7]];

degs:=x^7*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^4-1)^2/(x^6-1)/(x^2-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl3);
BlockIntersection(bl5);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl12);
BlockIntersection(bl15);


###############
###   d=5
H:=Hecke(ComplexReflectionGroup(16),[[1,x,x^2,x^3,x^4]]);
bl1:=[[1,2,3,4,5,16,17,18,19,20,21,22,23,24,25,31,32,33,34,35],
  [6,7,8,9,10,11,12,13,14,15,26,27,28,29,30,41,42,43,44,45]];
bl2:=[[1,2,3,4,5,6,8,10,12,13,15,16,17,18,19,21,22,23,24,25,26,30,33,40,42,44],
  [7,9,14,28,31,35,41,43,45],[27,34],[29,32]];
bl3:=[[1,2,4,5,16,20,22,25,31,32,34,35,40],[6,7,9,10,11,13,14,15,26,27,29,
  30,43],[8,12,28],[17,21],[18,24],[41,44],[42,45]];
bl4:=[[1,5,7,14,17,20,24,33,40,41,45],[2,4,9,18,21,28],[6,12,26,35,42],
  [16,19,23,25,43],[8,15,30,31,44]];
bl6:=[[1,2,3,4,5,6,10,13,15,16,22,25,26,30,40],[7,11,14,31,35,43],[8,12,33],
  [17,23,42],[19,24,44]];
bl7:=[[1,23,34],[5,19,32],[6,27,41],[15,29,45]];
bl8:=[[1,5,11,17,24,28],[2,14,23],[4,7,19],[6,31,42],[15,35,44],[16,21,41],[18,25,45]];
bl9:=[[1,25,32],[5,16,34],[6,15,28],[7,12,29],[8,14,27]];
bl10:=[[1,12,13,18,19,39],[5,8,10,21,23,36],[2,15,16,24,37,42],[4,6,17,25,38,44]];
bl12:=[[1,3,5,7,14,20],[2,4,11],[6,13,35],[10,15,31],[16,25,43]];
bl14:=[[1,15,21],[5,6,18]];
bl15:=[[1,31,36],[2,32,38],[4,34,37],[5,35,39],[6,14,29],[7,15,27]];
bl18:=[[1,4,8],[2,5,12],[6,15,33]];
bl20:=[[1,37,41],[5,38,45],[7,24,36],[14,17,39]];
bl24:=[[1,5,9]];
bl30:=[[1,26,38],[5,30,37],[6,25,36],[15,16,39]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^4+x^3+x^2+x+1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl15);
BlockIntersection(bl18);
BlockIntersection(bl20);
BlockIntersection(bl24);
BlockIntersection(bl30);

###
H:=Hecke(ComplexReflectionGroup(10,1,1),[[1,-1,x^3,-x^3,x^4,x^6,-x^6,-x^7,-x^9,x^12]]);
bl1:=[[1,3,5,6,10],[2,4,7,8,9]];;
bl2:=[[1,4,5,6,8,9,10],[2,3,7]];;
bl3:=[[1,3,6,10],[2,4,7,9]];;
bl4:=[[1,5,7,10],[2,6],[3,9],[4,8]];;
bl6:=[[1,4,6,9,10],[2,3,7],[5,8]];;
bl7:=[[2,8]];;
bl8:=[[2,5,10],[3,8]];;
bl9:=[[2,9],[3,10]];;
bl10:=[[5,9],[8,10]];;
bl12:=[[1,7,10],[2,6],[3,9]];;
bl14:=[[1,8]];;
bl18:=[[1,9],[4,10]];;
bl24:=[[2,10]];;

degs:=x^2*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^5-1)/(x^3-1)/(x^4-1)/(x^2-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl18);
BlockIntersection(bl24);

###
H:=Hecke(ComplexReflectionGroup(10,1,1),[[1,-x^3,-x^5,x^6,-x^6,x^8,x^9,-x^9,x^12,-x^12]]);
bl1:=[[1,4,6,7,9],[2,3,5,8,10]];;
bl2:=[[1,2,3,4,6,8,9],[5,7,10]];;
bl3:=[[1,4,7,9],[2,5,8,10]];;
bl4:=[[1,5,6,9],[2,7],[3,8],[4,10]];;
bl6:=[[1,2,4,8,9],[3,6],[5,7,10]];;
bl7:=[[3,10]];;
bl8:=[[1,6,10],[3,7]];;
bl9:=[[1,7],[2,10]];;
bl10:=[[1,3],[2,6]];;
bl12:=[[1,5,9],[2,7],[4,10]];;
bl14:=[[3,9]];;
bl18:=[[1,8],[2,9]];;
bl24:=[[1,10]];;

degs:=x^4*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^5-1)/(x^3-1)/(x^4-1)/(x^2-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl18);
BlockIntersection(bl24);


###############
###   d=6
H:=Hecke(ComplexReflectionGroup(32),[[1,-x,x^2]]);
bl1:=[[1,2,4,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,
24,25,26,27,28,29,30,31,32,33,34,36,38,40,41,42,43,46,47,
48,51,52,53,54,55,56,57,58,59,60,67,72,79,80,81,82,84,86,
88,89,95,100],[6,8,35,37,39,44,49,50,68,69,70,71,83,
85,87,94,97,98,99],[61,62,73,75,102],[64,66,77,78,101],[91,93],[92,96]];;
bl2:=[[1,2,3,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,
 47,48,49,50,51,52,53,54,55,56,57,58,59,60,67,68,69,70,71,72,80,89,90,91,95,96],
 [4,5,6,7,8,9,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,79,81,82,83,84,85,86,
 87,88,92,93,94,97,98,99],[61,62,63],[64,65,66],[73,74,75],[76,77,78]];;
bl3:=[[1,5,10,13,16,19,22,25,26,31,32,34,40,43,52,53,56,62,67,73,76,79,80,82,
 101],[2,7,11,15,17,20,24,27,29,36,41,42,46,47,54,58,59,64,72,74,78,84,88,89,
 102],[3,4,9,12,14,18,21,23,28,30,33,38,51,55,57,60,61,66,75,77,81,86,100],
 [6,35,50,63,68,83],[8,37,49,65,70,85],[39,44,45,69,71,87]];;
bl4:=[[1,2,3,6,8,11,12,13,14,19,24,25,26,27,29,39,44,51,54,56,60,67,72,83,85,
 90,95,97,99,100],[4,5,31,34,38,50,69,70,84,86],[7,9,33,36,46,49,68,71,81,82],
 [16,17,20,21,22,23,32,35,37,47,52,53,55,57,58,59,80,87,89,94,98]];;
bl5:=[[1,2,3,4,5,7,9,16,17,20,22,30,40,42,48],[11,12,38,46,53],
 [13,14,31,33,58]];;
bl7:=[[1,4,23,29,43],[2,9,21,26,41]];;
bl8:=[[1,2,10,12,14,15,35,37,45,54,56,67,72,94],[4,49,71,84],
 [6,16,22,23,39,47,57,89,97],[8,17,20,21,32,44,55,80,99],[9,50,69,82]];;
bl9:=[[1,31,64,78,80],[2,46,62,73,89],[4,12,55,81,102],[9,14,57,86,101],
 [16,26,61,75,79],[17,29,66,77,88]];;
bl10:=[[1,2,16,17,20,22,28,49,50,90,91,96,100],[4,6,8,9,34,36,40,42,45,87,92,
 93,98],[12,29,52,71],[14,26,59,69],[31,37,81,83],[35,46,85,86]];;
bl12:=[[1,8,10,13,25,26,56,73,76,85,97,101],
 [2,6,11,15,27,29,54,74,78,83,99,102],[4,61,69],[9,66,71],
 [12,14,39,44,48,60,75,77,90],[16,22,37,52,53,65],[17,20,35,58,59,63],
 [21,23,45,55,57,87],[31,40,70],[42,46,68],[49,62,82],[50,64,84]];;
bl14:=[[1,11,57,70,93],[2,13,55,68,92],[4,35,44,79,96],[9,37,39,88,91]];;
bl15:=[[1,22,34,66,74],[2,20,36,61,76],[4,9,62,64,95]];;
bl18:=[[1,32,75,91],[2,47,77,96],[4,33,39,65],[6,35,41,62],[8,37,43,64],
 [9,38,44,63],[11,20,68,73],[12,21,69,76],[13,22,70,78],[14,23,71,74],
 [31,61,92,97],[46,66,93,99]];;
bl20:=[[1,2,6,8,18]];;
bl24:=[[1,19,37,63,77],[2,24,35,65,75],[12,14,73,78,98]];;
bl30:=[[1,16,49,92,101],[2,17,50,93,102],[4,9,61,66,94],[5,8,62,65,91],
 [6,7,63,64,96]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^2-x+1)^4/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl15);
BlockIntersection(bl18);
BlockIntersection(bl20);
BlockIntersection(bl24);
BlockIntersection(bl30);

###


###
H:=Hecke(ComplexReflectionGroup(6,1,1),[[1,-1,x^2,x^5,x^7,x^10]]);
bl1:=[[1,3,4,5,6]];;
bl2:=[[1,3,6],[2,4,5]];;
bl3:=[[3,4],[5,6]];;
bl4:=[[2,3,6]];;
bl5:=[[1,4,6],[3,5]];;
bl7:=[[1,5]];;
bl8:=[[3,6]];;
bl10:=[[1,6],[2,4]];;
bl14:=[[2,5]];;
bl20:=[[2,6]];;

degs:=x^6*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^3+1)/(x^8-1)/(x^5+1)/(x^4-1)/(x^2-1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl10);
BlockIntersection(bl14);
BlockIntersection(bl20);

###
H:=Hecke(ComplexReflectionGroup(6,1,1),[[1,x,x^5,-x^5,x^9,x^10]]);
bl1:=[[1,2,3,5,6]];;
bl2:=[[1,4,6],[2,3,5]];;
bl3:=[[1,5],[2,6]];;
bl4:=[[2,3,5]];;
bl5:=[[1,3,6]];;
bl8:=[[2,4,5]];;
bl9:=[[1,5],[2,6]];;

degs:=1/3*x^7*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^9+1)/(x^4-1)^2/(x^2-1)^2/(x+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl8);
BlockIntersection(bl9);

###
H:=Hecke(ComplexReflectionGroup(6,1,1),[[1,x^3,x^5,x^8,x^10,-x^10]]);
bl1:=[[1,2,3,4,5]];;
bl2:=[[1,4,5],[2,3,6]];;
bl3:=[[1,2],[3,4]];;
bl4:=[[1,4,6]];;
bl5:=[[1,3,5],[2,4]];;
bl7:=[[2,5]];;
bl8:=[[1,4]];;
bl10:=[[1,5],[3,6]];;
bl14:=[[2,6]];;
bl20:=[[1,6]];;

degs:=x^10*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^3+1)/(x^8-1)/(x^5+1)/(x^4-1)/(x^2-1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl10);
BlockIntersection(bl14);
BlockIntersection(bl20);


###############
###   d=7
H:=Hecke(ComplexReflectionGroup(14,1,1),[[1,x^6,-x^6,x^10,-x^10,x^12,-x^12,-x^14,x^15,-x^15,x^16,x^18,-x^18,-x^30]]);
bl1:=[[1,2,4,6,10,11,12],[3,5,7,8,9,13,14]];;
bl2:=[[1,3,5,6,8,11,13,14],[2,4,7,12]];;
bl3:=[[1,2,6,10,12],[3,7,9,13,14],[4,11]];;
bl4:=[[1,7,11],[2,5,13],[3,4,8,12,14]];;
bl5:=[[1,4,10],[2,11],[5,9,14]];;
bl6:=[[1,3,6,13,14],[2,7,12],[5,11]];;
bl8:=[[1,11],[2,8,14],[4,13],[5,12]];;
bl9:=[[1,12],[2,10],[3,9],[7,14]];;
bl10:=[[1,5,14],[3,11]];;
bl12:=[[1,7],[2,13],[3,12,14]];;
bl14:=[[1,8],[11,14]];;
bl15:=[[1,10],[9,14]];;
bl18:=[[1,13],[6,14]];;
bl20:=[[4,14]];;
bl24:=[[2,14]];;
bl30:=[[1,14]];;

degs:=List(SchurElements(H),i->(x^4-1)*(x^16-1)*(x^24-1)*(x^28-1)*(x^36-1)*(x^40-1)*(x^48-1)*(x^60-1)/(x^14-1)/(x^4-1)/i);;
unp:=List(unp,i->Value(i,x^2));;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl15);
BlockIntersection(bl18);
BlockIntersection(bl20);
BlockIntersection(bl24);
BlockIntersection(bl30);

###
H:=Hecke(ComplexReflectionGroup(14,1,1),[[1,x^12,-x^12,-x^14,x^15,-x^15,x^16,x^18,-x^18,x^20,-x^20,x^24,-x^24,-x^30]]);
bl1:=[[1,2,6,7,8,10,12],[3,4,5,9,11,13,14]];;
bl2:=[[1,2,4,7,9,10,12,14],[3,8,11,13]];;
bl3:=[[1,2,6,8,12],[3,5,9,13,14],[4,11]];;
bl4:=[[1,3,7,11,12],[2,10,13],[4,8,14]];;
bl5:=[[1,6,10],[4,13],[5,11,14]];;
bl6:=[[1,2,9,12,14],[3,8,13],[4,10]];;
bl8:=[[1,7,13],[2,11],[3,10],[4,14]];;
bl9:=[[1,8],[3,14],[5,13],[6,12]];;
bl10:=[[1,10,14],[4,12]];;
bl12:=[[1,3,12],[2,13],[8,14]];;
bl14:=[[1,4],[7,14]];;
bl15:=[[1,6],[5,14]];;
bl18:=[[1,9],[2,14]];;
bl20:=[[1,11]];;
bl24:=[[1,13]];;
bl30:=[[1,14]];;

degs:=x^2*List(SchurElements(H),i->(x^4-1)*(x^16-1)*(x^24-1)*(x^28-1)*(x^36-1)*(x^40-1)*(x^48-1)*(x^60-1)/(x^14-1)/(x^4-1)/i);;


###############
###   d=8
H:=Hecke(ComplexReflectionGroup(9),[[1,x^4],[1,x^2,x^4,x^6]]);
bl1:=[[1,2,3,4,5,6,7,8,11,12,13,14,15,20,21,22,23,24,25,26,27,28,32],
 [9,10,16,17,18,19]];
bl2:=[[1,2,3,4,5,6,7,8,9,13,17,18,19,20,21,22,23,24,25,26,27,28,30],
 [10,11,12,14,15,16]];
bl3:=[[1,2,4,5,7,8,11,13,14,15,20,23,26,32],[3,6,12],[9,10,16,17,30],
 [21,24],[25,28]];
bl4:=[[1,3,5,7,16,21,23,25,27,31],[2,4,6,8,10,22,24,26,28,29],[14,15,18,19],
 [9,11,12,17]];
bl5:=[[1,8,12,24,25,32],[7,15,28],[2,14,21]];
bl7:=[[1,14,22],[8,15,27]];
bl9:=[[1,6,15],[2,7,12],[3,8,14]];
bl12:=[[1,7,16,20,23,29],[2,8,10,13,26,31],[14,15,30],[9,17,32]];
bl15:=[[1,8,11]];
bl20:=[[1,25,31],[8,24,29]];
bl24:=[[1,7,10],[2,8,16],[15,17,29],[9,14,31]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^4+1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl7);
BlockIntersection(bl9);
BlockIntersection(bl12);
BlockIntersection(bl15);
BlockIntersection(bl20);
BlockIntersection(bl24);

###
H:=Hecke(ComplexReflectionGroup(8,1,1),[[1,-1,x,x^3,x^5,x^6,-x^6,x^15]]);
bl1:=[[1,3,4,5,6,8],[2,7]];;
bl2:=[[1,6],[2,3,4,5,7,8]];;
bl3:=[[1,4,6,8],[2,7]];;
bl4:=[[1,7],[2,6],[3,5],[4,8]];;
bl5:=[[1,5,8],[3,6]];;
bl6:=[[1,6],[2,4,7,8]];;
bl7:=[[3,8]];;
bl9:=[[6,8]];;
bl10:=[[2,5,8],[3,7]];;
bl12:=[[1,7],[2,6],[4,8]];;
bl14:=[[3,8]];;
bl15:=[[1,8]];;
bl18:=[[7,8]];;
bl30:=[[2,8]];;

degs:=x*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^8-1)/(x^6-1)/(x^2-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl15);
BlockIntersection(bl18);
BlockIntersection(bl30);

###
H:=Hecke(ComplexReflectionGroup(8,1,1),[[1,x^9,-x^9,x^10,x^12,x^14,x^15,-x^15]]);
bl1:=[[1,2,4,5,6,7],[3,8]];;
bl2:=[[1,3,4,5,6,8],[2,7]];;
bl3:=[[1,2,5,7],[3,8]];;
bl4:=[[1,5],[2,8],[3,7],[4,6]];;
bl5:=[[1,4,7],[2,6]];;
bl6:=[[1,3,5,8],[2,7]];;
bl7:=[[1,6]];;
bl9:=[[1,2]];;
bl10:=[[1,4,8],[3,6]];;
bl12:=[[1,5],[2,8],[3,7]];;
bl14:=[[1,6]];;
bl15:=[[1,7]];;
bl18:=[[1,3]];;
bl30:=[[1,8]];;

degs:=x^7*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^8-1)/(x^6-1)/(x^2-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl15);
BlockIntersection(bl18);
BlockIntersection(bl30);

###
H:=Hecke(ComplexReflectionGroup(8,1,1),[[1,x^3,x^5,-x^6,x^9,-x^10,x^12,x^15]]);
bl1:=[[1,2,3,5,7,8],[4,6]];;
bl2:=[[1,7],[2,3,4,5,6,8]];;
bl3:=[[1,2,5,7,8]];;
bl4:=[[1,4,6,7],[2,8],[3,5]];;
bl5:=[[1,3,8]];;
bl6:=[[1,7],[2,4,5,8]];;
bl7:=[[3,7]];;
bl9:=[[1,5],[2,7]];;
bl10:=[[3,6,8]];;
bl12:=[[1,4,7],[2,8]];;
bl14:=[[2,6]];;
bl15:=[[1,8]];;
bl18:=[[4,8]];;
bl20:=[[1,6]];;

degs:=1/2*x^3*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^8-1)/(x^3+1)/(x^2-1)/(x-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl15);
BlockIntersection(bl18);
BlockIntersection(bl20);

###
H:=Hecke(ComplexReflectionGroup(8,1,1),[[1,x^3,-x^5,x^6,-x^9,x^10,x^12,x^15]]);
bl1:=[[1,2,4,6,7,8],[3,5]];;
bl2:=[[1,3,4,5,6,7],[2,8]];;
bl3:=[[1,2,4,7,8]];;
bl4:=[[1,7],[2,3,5,8],[4,6]];;
bl5:=[[1,6,8]];;
bl6:=[[1,4,5,7],[2,8]];;
bl7:=[[2,6]];;
bl9:=[[2,7],[4,8]];;
bl10:=[[1,3,6]];;
bl12:=[[1,7],[2,5,8]];;
bl14:=[[3,7]];;
bl15:=[[1,8]];;
bl18:=[[1,5]];;
bl20:=[[3,8]];;

degs:=1/2*x^3*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^8-1)/(x^3+1)/(x^2-1)/(x-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl15);
BlockIntersection(bl18);
BlockIntersection(bl20);

###
H:=Hecke(ComplexReflectionGroup(8,1,1),[[1,-x^3,x^5,x^6,x^9,x^10,x^12,-x^15]]);
bl1:=[[1,3,4,5,6,7],[2,8]];;
bl2:=[[1,2,4,6,7,8],[3,5]];;
bl3:=[[1,4,5,7],[2,8]];;
bl4:=[[1,7],[2,3,5,8],[4,6]];;
bl5:=[[1,3,6]];;
bl6:=[[1,2,4,7,8]];;
bl7:=[[3,7]];;
bl9:=[[1,5]];;
bl10:=[[1,6,8]];;
bl12:=[[1,7],[2,5,8]];;
bl14:=[[2,6]];;
bl18:=[[2,7],[4,8]];;
bl20:=[[3,8]];;
bl30:=[[1,8]];;

degs:=1/2*x^3*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^8-1)/(x^3-1)/(x^2-1)/(x+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl18);
BlockIntersection(bl20);
BlockIntersection(bl30);

###
H:=Hecke(ComplexReflectionGroup(8,1,1),[[1,-x^3,-x^5,-x^6,-x^9,-x^10,x^12,-x^15]]);
bl1:=[[1,7],[2,3,4,5,6,8]];;
bl2:=[[1,2,3,5,7,8],[4,6]];;
bl3:=[[1,7],[2,4,5,8]];;
bl4:=[[1,4,6,7],[2,8],[3,5]];;
bl5:=[[3,6,8]];;
bl6:=[[1,2,5,7,8]];;
bl7:=[[2,6]];;
bl9:=[[4,8]];;
bl10:=[[1,3,8]];;
bl12:=[[1,4,7],[2,8]];;
bl14:=[[3,7]];;
bl18:=[[1,5],[2,7]];;
bl20:=[[1,6]];;
bl30:=[[1,8]];;

degs:=1/2*x^3*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^8-1)/(x^3-1)/(x^2-1)/(x+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl18);
BlockIntersection(bl20);
BlockIntersection(bl30);


###############
###   d=9
H:=Hecke(ComplexReflectionGroup(18,1,1),[[1,-x,x^3,-x^3,x^4,-x^4,x^5,-x^5,E(3)*x^5,E(3)^2*x^5,-E(3)*x^5,-E(3)^2*x^5,x^6,-x^6,x^7,-x^7,-x^9,x^10]]);
bl1:=[[1,3,5,7,13,15,18],[2,4,6,8,14,16,17]];;
bl2:=[[1,2,4,5,8,13,16,17,18],[3,6,7,14,15]];;
bl3:=[[1,3,9,13],[2,6,12,16],[4,11,14,17],[5,10,15,18]];;
bl4:=[[1,5,14],[2,3,8,15,17],[4,7,16],[6,13,18]];;
bl5:=[[1,7,18],[2,14],[6,17]];;
bl6:=[[1,4,12,13,17],[2,5,11,16,18],[3,10,14],[6,9,15]];;
bl7:=[[1,15],[3,18]];;
bl8:=[[1,6],[2,7,17],[3,16],[4,15],[14,18]];;
bl10:=[[1,8,18],[2,13],[5,17]];;
bl12:=[[1,14],[2,12,15],[3,11,17],[4,9],[6,18],[10,16]];;
bl14:=[[1,16],[4,18]];;
bl15:=[[1,10],[9,18]];;
bl18:=[[1,17],[2,18]];;
bl24:=[[2,9],[10,17]];;
bl30:=[[1,11],[12,18]];;

degs:=x*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^9-1)/(x-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl15);
BlockIntersection(bl18);
BlockIntersection(bl24);
BlockIntersection(bl30);

H:=Hecke(ComplexReflectionGroup(18,1,1),[[1,-1,-x^2,x^4,E(3)*x^4,E(3)^2*x^4,x^5,-x^5,x^6,-x^6,x^8,-x^8,-x^10,-E(3)*x^10,-E(3)^2*x^10,x^12,-x^12,x^20]]);
bl1:=[[1,4,8,9,11,16,18],[2,3,7,10,12,13,17]];;
bl2:=[[1,3,4,10,11,13,16,18],[2,9,12,17],[5,14],[6,15]];;
bl3:=[[1,5,9,16],[2,10,14,17],[3,7,12,15],[6,8,11,18]];;
bl4:=[[1,11,17],[2,4,12,16,18],[3,9,13]];;
bl5:=[[1,8,18],[2,7,13],[3,17]];;
bl6:=[[1,6,10,15,16],[2,9,17],[3,5,11,14,18],[4,13]];;
bl7:=[[7,17],[8,16],[9,18]];;
bl8:=[[1,12],[2,11],[4,17,18]];;
bl10:=[[1,13,18],[3,16]];;
bl12:=[[1,17],[2,5,16],[3,15],[6,12,18],[9,14]];;
bl14:=[[10,18]];;
bl15:=[[2,15],[7,14],[8,18]];;
bl18:=[[3,18],[4,14],[5,15],[6,13]];;
bl20:=[[2,18]];;
bl24:=[[5,18],[6,17]];;
bl30:=[[1,14],[15,18]];;

degs:=List(SchurElements(H),i->(x^4-1)*(x^16-1)*(x^24-1)*(x^28-1)*(x^36-1)*(x^40-1)*(x^48-1)*(x^60-1)/(x^18-1)/(x^4-1)/i);;
unp:=List(unp,i->Value(i,x^2));;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl15);
BlockIntersection(bl18);
BlockIntersection(bl20);
BlockIntersection(bl24);
BlockIntersection(bl30);

H:=Hecke(ComplexReflectionGroup(18,1,1),[[1,x^8,-x^8,-x^10,-E(3)*x^10,-E(3)^2*x^10,x^12,-x^12,x^14,-x^14,x^15,-x^15,x^16,E(3)*x^16,E(3)^2*x^16,-x^18,x^20,-x^20]]);
bl1:=[[1,2,7,9,12,13,17],[3,4,8,10,11,16,18]];;
bl2:=[[1,2,4,7,10,13,16,17],[3,8,9,18],[5,14],[6,15]];;
bl3:=[[1,7,12,14],[2,9,15,17],[3,6,10,18],[5,8,11,16]];;
bl4:=[[1,2,8,13,18],[3,7,17],[4,9,16]];;
bl5:=[[1,12,17],[3,16],[4,11,18]];;
bl6:=[[1,6,7,15,16],[2,5,10,14,17],[3,9,18],[4,13]];;
bl7:=[[1,9],[2,12],[3,11]];;
bl8:=[[1,3,13],[7,18],[8,17]];;
bl10:=[[1,4,17],[2,16]];;
bl12:=[[1,8,14],[2,15,18],[3,17],[5,16],[6,9]];;
bl14:=[[1,10]];;
bl15:=[[1,12],[5,18],[6,11]];;
bl18:=[[1,16],[4,14],[5,15],[6,13]];;
bl20:=[[1,18]];;
bl24:=[[1,15],[3,14]];;
bl30:=[[1,5],[6,17]];;

degs:=x^6*List(SchurElements(H),i->(x^4-1)*(x^16-1)*(x^24-1)*(x^28-1)*(x^36-1)*(x^40-1)*(x^48-1)*(x^60-1)/(x^18-1)/(x^4-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl15);
BlockIntersection(bl18);
BlockIntersection(bl20);
BlockIntersection(bl24);
BlockIntersection(bl30);


###############
###   d=10
H:=Hecke(ComplexReflectionGroup(16),[[1,-x,x^2,-x^3,x^4]]);


###
H:=Hecke(ComplexReflectionGroup(10,1,1),[[1,-1,x^3,-x^3,x^4,x^6,-x^6,x^7,x^9,x^12]]);
bl1:=[[1,3,5,6,8,9,10],[2,4,7]];;
bl2:=[[1,4,5,6,10],[2,3,7,8,9]];;
bl3:=[[1,3,6,9,10],[2,4,7],[5,8]];;
bl4:=[[1,5,7,10],[2,6],[3,8],[4,9]];;
bl5:=[[5,9],[8,10]];;
bl6:=[[1,4,6,10],[2,3,7,9]];;
bl7:=[[1,8]];;
bl8:=[[2,5,10],[4,8]];;
bl9:=[[1,9],[3,10]];;
bl12:=[[1,7,10],[2,6],[4,9]];;
bl14:=[[2,8]];;
bl18:=[[2,9],[4,10]];;
bl24:=[[2,10]];;

degs:=x^2*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^5+1)/(x^3+1)/(x^4-1)/(x^2-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl18);
BlockIntersection(bl24);

###
H:=Hecke(ComplexReflectionGroup(10,1,1),[[1,x^3,x^5,x^6,-x^6,x^8,x^9,-x^9,x^12,-x^12]]);
bl1:=[[1,2,3,4,6,7,9],[5,8,10]];;
bl2:=[[1,4,6,8,9],[2,3,5,7,10]];;
bl3:=[[1,2,4,7,9],[3,6],[5,8,10]];;
bl4:=[[1,5,6,9],[2,8],[3,7],[4,10]];;
bl5:=[[1,3],[2,6]];;
bl6:=[[1,4,8,9],[2,5,7,10]];;
bl7:=[[3,9]];;
bl8:=[[1,6,10],[3,8]];;
bl9:=[[1,7],[2,9]];;
bl12:=[[1,5,9],[2,8],[4,10]];;
bl14:=[[3,10]];;
bl18:=[[1,8],[2,10]];;
bl24:=[[1,10]];;

degs:=x^4*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^5+1)/(x^3+1)/(x^4-1)/(x^2-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl18);
BlockIntersection(bl24);


###############
###   d=12
H:=Hecke(ComplexReflectionGroup(10),[[1,-x^2,x^4],[1,x^3,-x^3,x^6]]);
bl1:=[[1,2,3,4,5,6,8,9,10,11,12,13,15,17,20,22,24,25,27,29,39,40,41,42,46,48],
 [14,16,18,19,21,23,26,28,30,43,45],[31,32,34],[35,36,38]];
bl2:=[[1,2,3,4,5,7,8,9,10,11,12,14,15,18,19,22,23,26,27,30,39,40,41,42,43,45],
 [13,16,17,20,21,24,25,28,29,46,48],[31,33,34],[35,37,38]];
bl3:=[[1,2,3,4,13,15,17,32,33,38,39,46],[9,10,11,12,25,27,29,31,36,37,42,48],
 [5,6,8,20,22,24,34,35,40],[14,16,18],[19,21,23],[26,28,30]];
bl4:=[[1,4,5,8,9,12,15,21,27],[2,3,6,7,10,11,16,22,28],
 [14,17,20,23,26,29,43,47,48],[13,18,19,24,25,30,44,45,46]];
bl5:=[[5,10,13],[2,8,29],[1,6,12,17,25,41]];
bl7:=[[1,11,20],[3,12,24]];
bl8:=[[1,8,16,27,42,44],[5,12,15,28,39,47],[17,20,45],[18,19,48],[23,26,46],[24,25,43]];
bl9:=[[1,31,46],[12,38,48],[8,20,32],[3,17,35],[5,24,36],[11,25,34]];
bl15:=[[1,17,37],[12,25,33]];
bl20:=[[1,12,21],[18,25,44],[17,26,47]];
bl24:=[[1,16,34],[12,28,35],[5,31,44],[8,38,47]];

degs:=List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^4-x^2+1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl15);
BlockIntersection(bl20);
BlockIntersection(bl24);

###
H:=Hecke(ComplexReflectionGroup(12,1,1),[[1,E(3),E(3)^2,x,-x,x^2,x^3,-x^3,x^5,-x^5,x^6,x^10]]);
bl1:=[[1,4,6,7,9,11,12],[5,8,10]];;
bl2:=[[1,5,6,8,10,11,12],[4,7,9]];;
bl3:=[[1,7,11],[2,4,12],[3,6,9]];;
bl4:=[[4,8,9],[5,7,10],[6,11,12]];;
bl5:=[[1,9,12],[4,11]];;
bl6:=[[1,8,11],[2,6,10],[3,5,12]];;
bl7:=[[7,12]];;
bl8:=[[4,10],[5,9],[6,12]];;
bl9:=[[2,7],[3,11],[4,12]];;
bl10:=[[1,10,12],[5,11]];;
bl14:=[[8,12]];;
bl15:=[[2,9],[3,12]];;
bl18:=[[2,11],[3,8],[5,12]];;
bl30:=[[2,12],[3,10]];;

degs:=x*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^4-x^2+1)/(x^6-1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl14);
BlockIntersection(bl15);
BlockIntersection(bl18);
BlockIntersection(bl30);

###
H:=Hecke(ComplexReflectionGroup(12,1,1),[[1,x^4,x^5,-x^5,x^7,-x^7,x^8,x^9,-x^9,x^10,E(3)*x^10,E(3)^2*x^10]]);
bl1:=[[1,2,3,5,7,8,10],[4,6,9]];;
bl2:=[[1,2,4,6,7,9,10],[3,5,8]];;
bl3:=[[1,8,12],[2,5,10],[3,7,11]];;
bl4:=[[1,2,7],[3,6,8],[4,5,9]];;
bl5:=[[1,3,10],[2,8]];;
bl6:=[[1,9,11],[2,6,10],[4,7,12]];;
bl7:=[[1,5]];;
bl8:=[[1,7],[3,9],[4,8]];;
bl9:=[[1,8],[2,11],[5,12]];;
bl10:=[[1,4,10],[2,9]];;
bl14:=[[1,6]];;
bl15:=[[1,11],[3,12]];;
bl18:=[[1,9],[2,12],[6,11]];;
bl30:=[[1,12],[4,11]];;

degs:=x^7*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^4-x^2+1)/(x^6-1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl14);
BlockIntersection(bl15);
BlockIntersection(bl18);
BlockIntersection(bl30);

###
H:=Hecke(ComplexReflectionGroup(12,1,1),[[1,-x,x^2,x^4,x^5,-x^5,E(3)*x^5,E(3)^2*x^5,x^6,x^8,-x^9,x^10]]);
bl1:=[[1,3,4,5,9,10,12],[2,6,11]];;
bl2:=[[1,2,3,4,6,9,10,11,12]];;
bl3:=[[1,7,9],[3,5,10],[4,8,12]];;
bl4:=[[1,4,10],[2,6,11],[3,9,12]];;
bl5:=[[1,5,12]];;
bl6:=[[1,9,11],[2,4,12],[3,6,10]];;
bl8:=[[1,10],[2,5,11],[3,12]];;
bl9:=[[3,8],[7,10]];;
bl10:=[[1,6,12],[2,9],[4,11]];;
bl14:=[[2,10],[3,11]];;
bl15:=[[1,8],[7,12]];;
bl18:=[[1,11],[2,12]];;
bl24:=[[2,7],[8,11]];;

degs:=1/2*x^3*List(SchurElements(H),i->(x+1)^2*(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^4-x^2+1)/(x^6-1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl14);
BlockIntersection(bl15);
BlockIntersection(bl18);
BlockIntersection(bl24);

###
H:=Hecke(ComplexReflectionGroup(12,1,1),[[1,x,x^2,x^4,x^5,-x^5,E(6)*x^5,E(6)^5*x^5,x^6,x^8,x^9,x^10]]);
bl1:=[[1,2,3,4,5,9,10,11,12]];;
bl2:=[[1,3,4,6,9,10,12],[2,5,11]];;
bl3:=[[1,9,11],[2,4,12],[3,5,10]];;
bl4:=[[1,4,10],[2,5,11],[3,9,12]];;
bl5:=[[1,5,12],[2,9],[4,11]];;
bl6:=[[1,7,9],[3,6,10],[4,8,12]];;
bl7:=[[2,10],[3,11]];;
bl8:=[[1,10],[2,6,11],[3,12]];;
bl9:=[[1,11],[2,12]];;
bl10:=[[1,6,12]];;
bl18:=[[3,8],[7,10]];;
bl24:=[[2,8],[7,11]];;
bl30:=[[1,8],[7,12]];;

degs:=1/2*x^3*List(SchurElements(H),i->(x-1)^2*(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^4-x^2+1)/(x^6-1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl18);
BlockIntersection(bl24);
BlockIntersection(bl30);


###############
###   d=14
H:=Hecke(ComplexReflectionGroup(14,1,1),[[1,x^6,-x^6,x^10,-x^10,x^12,-x^12,x^14,E(4)*x^15,-E(4)*x^15,x^16,x^18,-x^18,x^30]]);
bl1:=[[1,2,4,6,8,11,12,14],[3,5,7,13]];;
bl2:=[[1,3,5,6,9,11,13],[2,4,7,8,10,12,14]];;
bl3:=[[1,2,6,12,14],[3,7,13],[4,11]];;
bl4:=[[1,7,11],[2,5,8,13,14],[3,4,12]];;
bl5:=[[1,4,14],[2,11]];;
bl6:=[[1,3,6,10,13],[2,7,9,12,14],[5,11]];;
bl7:=[[1,8],[11,14]];;
bl8:=[[1,11],[3,8,14],[4,13],[5,12]];;
bl9:=[[1,12],[6,14]];;
bl10:=[[1,5,9],[3,11],[4,10,14]];;
bl12:=[[1,7],[2,13,14],[3,12]];;
bl15:=[[1,14]];;
bl18:=[[1,13],[2,10],[3,9],[7,14]];;
bl20:=[[5,14]];;
bl24:=[[3,14]];;
bl30:=[[1,10],[9,14]];;

degs:=List(SchurElements(H),i->(x^4-1)*(x^16-1)*(x^24-1)*(x^28-1)*(x^36-1)*(x^40-1)*(x^48-1)*(x^60-1)/(x^14+1)/(x^4-1)/i);;
unp:=List(unp,i->Value(i,x^2));;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl15);
BlockIntersection(bl18);
BlockIntersection(bl20);
BlockIntersection(bl24);
BlockIntersection(bl30);

###
H:=Hecke(ComplexReflectionGroup(14,1,1),[[1,x^12,-x^12,x^14,E(4)*x^15,-E(4)*x^15,x^16,x^18,-x^18,x^20,-x^20,x^24,-x^24,x^30]]);
bl1:=[[1,2,4,7,8,10,12,14],[3,9,11,13]];;
bl2:=[[1,2,5,7,9,10,12],[3,4,6,8,11,13,14]];;
bl3:=[[1,2,8,12,14],[3,9,13],[4,10]];;
bl4:=[[1,3,7,11,12],[2,10,13],[4,9,14]];;
bl5:=[[1,10,14],[4,12]];;
bl6:=[[1,2,6,9,12],[3,5,8,13,14],[4,11]];;
bl7:=[[1,4],[7,14]];;
bl8:=[[1,7,13],[2,11],[3,10],[4,14]];;
bl9:=[[1,8],[2,14]];;
bl10:=[[1,5,10],[4,13],[6,11,14]];;
bl12:=[[1,3,12],[2,13],[9,14]];;
bl15:=[[1,14]];;
bl18:=[[1,9],[3,14],[5,12],[6,13]];;
bl20:=[[1,11]];;
bl24:=[[1,13]];;
bl30:=[[1,6],[5,14]];;

degs:=x^2*List(SchurElements(H),i->(x^4-1)*(x^16-1)*(x^24-1)*(x^28-1)*(x^36-1)*(x^40-1)*(x^48-1)*(x^60-1)/(x^14+1)/(x^4-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl15);
BlockIntersection(bl18);
BlockIntersection(bl20);
BlockIntersection(bl24);
BlockIntersection(bl30);


###############
###   d=15
H:=Hecke(ComplexReflectionGroup(30,1,1),[[1,-x^2,x^4,-x^4,x^6,-x^6,-E(3)*x^6,-E(3)^2*x^6,x^7,-x^7,x^8,-x^8,E(3)*x^8,E(3)^2*x^8,-E(3)*x^8,-E(3)^2*x^8,E(5)*x^8,E(5)^2*x^8,E(5)^3*x^8,E(5)^4*x^8,x^9,-x^9,x^10,-x^10,-E(3)*x^10,-E(3)^2*x^10,x^12,-x^12,-x^14,x^16]]);
bl1:=[[1,3,5,10,11,22,23,27,30],[2,4,6,9,12,21,24,28,29],[7,15,25],[8,16,26]];;
bl2:=[[1,2,3,6,11,24,27,29,30],[4,5,12,23,28],[7,13,25],[8,14,26],[9,22],[10,21]];;
bl3:=[[1,5,14,22,27],[2,7,12,26,29],[3,10,13,23,30],[4,8,9,15,24],[6,16,21,25,28]];;
bl4:=[[1,4,11,28,30],[2,5,24],[3,12,27],[6,23,29]];;
bl5:=[[1,17,23],[2,9,28],[3,19,22],[4,21,29],[5,20,30],[10,18,27]];;
bl6:=[[1,6,13,26,27],[2,8,11,25,29],[3,7,14,24,30],[4,16,23],[5,15,28]];;
bl7:=[[1,10],[2,21],[9,29],[22,30]];;
bl8:=[[1,12,30],[2,23],[3,28],[4,27],[5,29]];;
bl9:=[[1,22],[2,16],[4,26],[7,28],[8,21],[9,25],[10,30],[15,29]];;
bl10:=[[1,19,24],[2,17,27],[3,20,29],[6,18,30]];;
bl12:=[[1,14,28],[2,26],[3,15],[4,13,30],[5,25],[7,29],[8,23],[16,27]];;
bl14:=[[1,29],[2,30]];;
bl18:=[[1,7],[2,13],[3,25],[8,27],[14,29],[26,30]];;
bl20:=[[1,20],[4,18],[17,30],[19,28]];;
bl24:=[[1,15],[16,30]];;
bl30:=[[1,25],[2,18],[7,20],[8,30],[17,26],[19,29]];;

degs:=List(SchurElements(H),i->(x^4-1)*(x^16-1)*(x^24-1)*(x^28-1)*(x^36-1)*(x^40-1)*(x^48-1)*(x^60-1)/(x^16-x^14+x^10-x^8+x^6-x^2+1)/i);;
unp:=List(unp,i->Value(i,x^2));;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl18);
BlockIntersection(bl20);
BlockIntersection(bl24);
BlockIntersection(bl30);


###############
###   d=18
H:=Hecke(ComplexReflectionGroup(18,1,1),[[1,x,x^3,-x^3,x^4,-x^4,x^5,-x^5,E(3)*x^5,E(3)^2*x^5,-E(3)*x^5,-E(3)^2*x^5,x^6,-x^6,x^7,-x^7,x^9,x^10]]);
bl1:=[[1,2,3,5,7,13,15,17,18],[4,6,8,14,16]];;
bl2:=[[1,4,5,8,13,16,18],[2,3,6,7,14,15,17]];;
bl3:=[[1,3,9,13,17],[2,5,10,15,18],[4,11,14],[6,12,16]];;
bl4:=[[1,5,14],[2,4,7,16,17],[3,8,15],[6,13,18]];;
bl5:=[[1,7,18],[2,13],[5,17]];;
bl6:=[[1,4,12,13],[2,6,9,15],[3,10,14,17],[5,11,16,18]];;
bl7:=[[1,15],[3,18]];;
bl8:=[[1,6],[2,8,17],[3,16],[4,15],[14,18]];;
bl9:=[[1,17],[2,18]];;
bl10:=[[1,8,18],[2,14],[6,17]];;
bl12:=[[1,14],[2,10,16],[3,11],[4,9,17],[6,18],[12,15]];;
bl14:=[[1,16],[4,18]];;
bl15:=[[1,10],[9,18]];;
bl24:=[[2,11],[12,17]];;
bl30:=[[1,11],[12,18]];;

degs:=x*List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^9+1)/(x+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl15);
BlockIntersection(bl24);
BlockIntersection(bl30);

###
H:=Hecke(ComplexReflectionGroup(18,1,1),[[1,-1,x^2,x^4,E(3)*x^4,E(3)^2*x^4,E(4)*x^5,-E(4)*x^5,x^6,-x^6,x^8,-x^8,x^10,E(3)*x^10,E(3)^2*x^10,x^12,-x^12,x^20]]);
bl1:=[[1,3,4,9,11,13,16,18],[2,10,12,17],[5,14],[6,15]];;
bl2:=[[1,4,8,10,11,16,18],[2,3,7,9,12,13,17]];;
bl3:=[[1,5,9,14,16],[2,10,17],[3,6,11,15,18],[4,13]];;
bl4:=[[1,11,17],[2,4,12,16,18],[3,10,13]];;
bl5:=[[1,13,18],[3,16]];;
bl6:=[[1,6,10,16],[2,9,15,17],[3,8,12,14],[5,7,11,18]];;
bl7:=[[9,18]];;
bl8:=[[1,12],[2,11],[4,17,18]];;
bl9:=[[3,18],[4,15],[5,13],[6,14]];;
bl10:=[[1,8,18],[2,7,13],[3,17]];;
bl12:=[[1,17],[2,5,16],[3,15],[6,12,18],[10,14]];;
bl14:=[[7,16],[8,17],[10,18]];;
bl15:=[[1,15],[14,18]];;
bl20:=[[2,18]];;
bl24:=[[5,18],[6,17]];;
bl30:=[[2,14],[7,18],[8,15]];;

degs:=List(SchurElements(H),i->(x^4-1)*(x^16-1)*(x^24-1)*(x^28-1)*(x^36-1)*(x^40-1)*(x^48-1)*(x^60-1)/(x^18+1)/(x^4-1)/i);;
unp:=List(unp,i->Value(i,x^2));;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl15);
BlockIntersection(bl20);
BlockIntersection(bl24);
BlockIntersection(bl30);

###
H:=Hecke(ComplexReflectionGroup(18,1,1),[[1,x^8,-x^8,x^10,E(3)*x^10,E(3)^2*x^10,x^12,-x^12,x^14,-x^14,E(4)*x^15,-E(4)*x^15,x^16,E(3)*x^16,E(3)^2*x^16,x^18,x^20,-x^20]]);
bl1:=[[1,2,4,7,9,13,16,17],[3,8,10,18],[5,14],[6,15]];;
bl2:=[[1,2,7,10,11,13,17],[3,4,8,9,12,16,18]];;
bl3:=[[1,5,7,14,16],[2,6,9,15,17],[3,10,18],[4,13]];;
bl4:=[[1,2,8,13,18],[3,7,17],[4,10,16]];;
bl5:=[[1,4,17],[2,16]];;
bl6:=[[1,7,12,15],[2,10,14,17],[3,5,9,18],[6,8,11,16]];;
bl7:=[[1,9]];;
bl8:=[[1,3,13],[7,18],[8,17]];;
bl9:=[[1,16],[4,15],[5,13],[6,14]];;
bl10:=[[1,11,17],[3,16],[4,12,18]];;
bl12:=[[1,8,14],[2,15,18],[3,17],[5,16],[6,10]];;
bl14:=[[1,10],[2,12],[3,11]];;
bl15:=[[1,6],[5,17]];;
bl20:=[[1,18]];;
bl24:=[[1,15],[3,14]];;
bl30:=[[1,12],[5,11],[6,18]];;

degs:=x^6*List(SchurElements(H),i->(x^4-1)*(x^16-1)*(x^24-1)*(x^28-1)*(x^36-1)*(x^40-1)*(x^48-1)*(x^60-1)/(x^18+1)/(x^4-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl15);
BlockIntersection(bl20);
BlockIntersection(bl24);
BlockIntersection(bl30);


###############
###   d=20
H:=Hecke(ComplexReflectionGroup(20,1,1),[[1,x^3,-x^3,x^4,x^5,-x^5,x^6,-x^6,E(4)*x^6,-E(4)*x^6,E(5)*x^6,E(5)^2*x^6,E(5)^3*x^6,E(5)^4*x^6,x^7,-x^7,x^8,x^9,-x^9,x^12]]);
bl1:=[[1,2,4,5,7,15,17,18,20],[3,6,8,16,19]];;
bl2:=[[1,3,4,6,7,16,17,19,20],[2,5,8,15,18]];;
bl3:=[[1,2,7,18,20],[3,8,19],[4,15],[5,17]];;
bl4:=[[1,4,8,17,20],[2,6,9,15,19],[3,5,10,16,18]];;
bl5:=[[1,5,14],[2,12,17],[4,13,18],[11,15,20]];;
bl6:=[[1,3,7,19,20],[2,8,18],[4,16],[6,17]];;
bl7:=[[1,15],[5,20]];;
bl8:=[[1,9,17],[2,16],[3,15],[4,10,20],[5,19],[6,18]];;
bl9:=[[1,18],[2,20]];;
bl10:=[[1,6,12],[3,11,17],[4,14,19],[13,16,20]];;
bl12:=[[1,8,20],[2,10,19],[3,9,18]];;
bl14:=[[1,16],[6,20]];;
bl15:=[[1,13],[2,14],[11,18],[12,20]];;
bl18:=[[1,19],[3,20]];;
bl24:=[[1,10],[9,20]];;
bl30:=[[1,14],[3,12],[11,20],[13,19]];;

degs:=List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^8-x^6+x^4-x^2+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl15);
BlockIntersection(bl18);
BlockIntersection(bl24);
BlockIntersection(bl30);


###############
###   d=24
H:=Hecke(ComplexReflectionGroup(24,1,1),[[1,x^2,x^3,-x^3,x^4,-x^4,E(3)*x^4,E(3)^2*x^4,x^5,-x^5,E(3)*x^5,E(3)^2*x^5,E(4)*x^5,-E(4)*x^5,-E(3)*x^5,-E(3)^2*x^5,x^6,-x^6,E(3)*x^6,E(3)^2*x^6,x^7,-x^7,x^8,x^10]]);
bl1:=[[1,2,3,5,9,17,21,23,24],[4,6,10,18,22],[7,11,19],[8,12,20]];;
bl2:=[[1,2,4,5,10,17,22,23,24],[3,6,9,18,21],[7,15,19],[8,16,20]];;
bl3:=[[1,3,8,11,17],[2,7,9,20,23],[4,15,18],[5,12,19,21,24],[6,16,22]];;
bl4:=[[1,5,14,18,23],[2,6,13,17,24],[3,10,21],[4,9,22]];;
bl5:=[[1,9,24],[2,21],[3,23]];;
bl6:=[[1,4,7,16,17],[2,8,10,19,23],[3,12,18],[5,15,20,22,24],[6,11,21]];;
bl7:=[[1,21],[3,24]];;
bl8:=[[1,6,23],[2,18,24],[3,14,22],[4,13,21]];;
bl9:=[[1,19],[2,12],[3,20],[7,21],[8,24],[11,23]];;
bl10:=[[1,10,24],[2,22],[4,23]];;
bl12:=[[1,8,18],[2,14,20],[3,15],[4,11],[6,19,24],[7,13,23],[12,22],[16,21]];;
bl14:=[[1,22],[4,24]];;
bl15:=[[1,12],[11,24]];;
bl18:=[[1,20],[2,15],[4,19],[7,24],[8,22],[16,23]];;
bl20:=[[1,14],[13,24]];;
bl30:=[[1,15],[16,24]];;

degs:=List(SchurElements(H),i->(x^2-1)*(x^8-1)*(x^12-1)*(x^14-1)*(x^18-1)*(x^20-1)*(x^24-1)*(x^30-1)/(x^8-x^4+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl15);
BlockIntersection(bl18);
BlockIntersection(bl20);
BlockIntersection(bl30);


###############
###   d=30
H:=Hecke(ComplexReflectionGroup(30,1,1),[[1,x^2,x^4,-x^4,x^6,-x^6,E(3)*x^6,E(3)^2*x^6,E(4)*x^7,-E(4)*x^7,x^8,-x^8,E(3)*x^8,E(3)^2*x^8,-E(3)*x^8,-E(3)^2*x^8,E(5)*x^8,E(5)^2*x^8,E(5)^3*x^8,E(5)^4*x^8,E(4)*x^9,-E(4)*x^9,x^10,-x^10,E(3)*x^10,E(3)^2*x^10,x^12,-x^12,x^14,x^16]]);
bl1:=[[1,2,3,5,11,23,27,29,30],[4,6,12,24,28],[7,13,25],[8,14,26],[9,21],[10,22]];;
bl2:=[[1,3,6,9,11,22,24,27,30],[2,4,5,10,12,21,23,28,29],[7,15,25],[8,16,26]];;
bl3:=[[1,5,14,25,27],[2,7,11,26,29],[3,8,13,23,30],[4,15,24],[6,16,28]];;
bl4:=[[1,4,11,28,30],[2,6,23],[3,12,27],[5,24,29]];;
bl5:=[[1,17,23],[2,18,27],[3,19,29],[5,20,30]];;
bl6:=[[1,6,13,21,27],[2,8,12,25,29],[3,10,14,24,30],[4,7,9,16,23],[5,15,22,26,28]];;
bl7:=[[1,29],[2,30]];;
bl8:=[[1,12,30],[2,24],[3,28],[4,27],[6,29]];;
bl9:=[[1,8],[2,14],[3,26],[7,27],[13,29],[25,30]];;
bl10:=[[1,19,24],[2,10,28],[3,20,22],[4,21,29],[6,18,30],[9,17,27]];;
bl12:=[[1,14,28],[2,26],[3,15],[4,13,30],[6,25],[7,29],[8,24],[16,27]];;
bl14:=[[1,10],[2,22],[9,29],[21,30]];;
bl15:=[[1,26],[2,20],[7,30],[8,19],[17,29],[18,25]];;
bl18:=[[1,22],[2,15],[4,25],[7,21],[8,28],[9,30],[10,26],[16,29]];;
bl20:=[[1,20],[4,18],[17,30],[19,28]];;
bl24:=[[1,15],[16,30]];;

degs:=List(SchurElements(H),i->(x^4-1)*(x^16-1)*(x^24-1)*(x^28-1)*(x^36-1)*(x^40-1)*(x^48-1)*(x^60-1)/(x^16+x^14-x^10-x^8-x^6+x^2+1)/i);;
unp:=List(unp,i->Value(i,x^2));;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl8);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl14);
BlockIntersection(bl15);
BlockIntersection(bl18);
BlockIntersection(bl20);
BlockIntersection(bl24);


------------  programs  -------

sizecyc:=30;
for i in 2*[1,2,3,4,5,6,7,8,9,10,12,14,15,18,20,24,30] do
 ls:=List(l,j->Value(j,E(i)));
 m:=List([0..sizecyc*i-1],j->Filtered([1..sizecyc],k->ls[k]=E(sizecyc*i)^j));
   Print("bl",i/2,":= ",Set(Filtered(m,j->Length(j)>1)),";;\n");
od;


List(degs,i->Minimum(Position(unp,i),Position(unp,-i)));


sizecyc:=2;
for i in [1,2,3,4,5,6,7,8,9,10,12,14,16,18,20,24,28,36] do
 ls:=List(l,j->Value(j,E(i)));
 m:=List([0..6*i-1],j->Filtered([1..sizecyc],k->ls[k]=E(6*i)^j));
   Print(E(i),":= ",Set(Filtered(m,j->j<>[])),"\n");
od;

ordspez:=30; sizecyc:=24;
for i in [0..ordspez-1] do
 ls:=List(l,j->Value(j,E(ordspez)^i));
 m:=List([0..4*ordspez-1],j->Filtered([1..sizecyc],k->ls[k]=E(4*ordspez)^j));
   Print("bl",E(ordspez)^(i),":= ",Filtered(m,j->Length(j)>1),"\n");
od;


##################################################
##################    G_4    #####################
##################################################13.1.25
x:=X(Cyclotomics);; x.name:="x";;
W:= ComplexReflectionGroup(4);
uc:=UnipotentCharacters(W); Display(uc);
unp:=uc.degrees;;

## complete HC-parametrisation

###############
###   d=1
H:=Hecke(W,[[x,E(3),E(3)^2]]);
bl2:=[[1,2,3,5,6,7]];
bl3b:=[[1,2],[4,5]];
bl3:=[[1,3],[4,6]];
bl4:=[[1,4,7]];
bl6:=[[1,2,6]];
bl6b:=[[1,3,5]];

degs:=List(SchurElements(H),i->(x^4-1)*(x^6-1)/(x-1)^2/i);;

BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl3b);
BlockIntersection(bl4);
BlockIntersection(bl6);
BlockIntersection(bl6b);


H:=Hecke(CoxeterGroup("A",1),[[x^3,-1]]);
bl2:=[[1,2]];
bl6:=[[1,2]];

degs:=(E(3)-E(3)^2)/3*x*List(SchurElements(H),i->(x^4-1)*(x^6-1)/(x^3-1)/i);;

BlockIntersection(bl2);
BlockIntersection(bl6);


###############
###   d=2
H:=Hecke(W,[[-x,E(3),E(3)^2]]);
bl1:=[[1,2,3,5,6,7]];
bl3b:=[[1,3,5]];
bl3:=[[1,2,6]];
bl4:=[[1,4,7]];
bl6:=[[1,3],[4,6]];
bl6b:=[[1,2],[4,5]];

degs:=List(SchurElements(H),i->(x^4-1)*(x^6-1)/(x+1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl3);
BlockIntersection(bl3b);
BlockIntersection(bl4);
BlockIntersection(bl6);
BlockIntersection(bl6b);


###############
###   d=3
H:=Hecke(ComplexReflectionGroup(6,1,1),[[E(3)^2*x^2,-E(3)^2,E(3),-E(3)*x,E(3)^2,-E(3)^2*x]]);
bl1:=[ [ 2, 6 ], [ 1, 5 ] ];
bl2:=[ [ 1, 5, 6 ], [ 3, 4 ] ];
bl3b:=[ [ 2, 4 ], [ 1, 3 ] ];
bl4:=[ [ 1, 2 ] ];
bl6:=[ [ 3, 6 ], [ 1, 4 ] ];
bl6b:=[ [ 4, 5 ], [ 1, 3 ] ];

degs:=E(3)^2*List(SchurElements(H),i->(x^4-1)*(x^6-1)/(x-E(3)^2)/(x-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);

BlockIntersection(bl3b);
BlockIntersection(bl4);
BlockIntersection(bl6);
BlockIntersection(bl6b);


###############
###   d=3b
H:=Hecke(ComplexReflectionGroup(6,1,1),[[E(3)*x^2,-E(3)*x,E(3),-E(3)^2*x,E(3)^2,-E(3)]]);
bl1:=[ [ 2, 6 ], [ 1, 3 ] ];
bl2:=[ [ 1, 2, 3 ], [ 4, 5 ]];
bl3:=[ [ 1, 5 ], [ 4, 6 ]];
bl4:=[ [ 1, 6 ] ];
bl6:=[ [ 1, 5 ], [ 3,  4 ] ];
bl6b:=[ [ 1, 4 ], [ 2,  5 ] ];

degs:=E(3)*List(SchurElements(H),i->(x^4-1)*(x^6-1)/(x-E(3))/(x-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);

BlockIntersection(bl4);
BlockIntersection(bl6);
BlockIntersection(bl6b);


###############
###   d=4
H:=Hecke(ComplexReflectionGroup(4,1,1),[[E(4)*x^3,E(4),E(4)*x,-E(4)]]);
bl1:=[ [ 1, 2, 3 ] ];
bl2:=[ [ 1, 3, 4 ] ];
bl3:=[ [ 1, 2 ] ];
bl6:=[ [ 1, 4 ] ];

degs:=List(SchurElements(H),i->(x^4-1)*(x^6-1)/(x^2+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);

BlockIntersection(bl6);


###############
###   d=6
H:=Hecke(ComplexReflectionGroup(6,1,1),[[E(3)*x^2,E(3)*x,E(3),E(3)^2*x,E(3)^2,-E(3)]]);
bl1:= [ [ 4, 5 ], [ 1, 2, 3 ] ];
bl2:=[ [ 2, 6 ], [ 1, 3 ] ];
bl3:=[ [ 1, 5 ], [ 3, 4 ] ];
bl3b:=[ [ 2, 5 ], [ 1, 4 ] ];
bl4:= [ [ 1, 6 ] ];
bl6:= [ [ 4, 6 ], [ 1, 5 ] ];


degs:=E(3)*List(SchurElements(H),i->(x^4-1)*(x^6-1)/(x+E(3))/(x+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl3b);
BlockIntersection(bl4);
BlockIntersection(bl6);


##################################################
##################    G_6    #####################
##################################################13.1.25
x:=X(Cyclotomics);; x.name:="x";;
W:= ComplexReflectionGroup(6);
uc:=UnipotentCharacters(W); Display(uc);
unp:=uc.degrees;;

## complete HC-parametrisation

###############
###   d=1
H:=Hecke(W,[[1,-x],[x,E(3),E(3)^2]]);
bl2:=[[1,4,7,13,14],[2,5,3,6,10]];
bl3:=[[1,2],[4,5],[7,12],[8,10]];
bl3b:=[[1,3],[4,6],[7,11],[9,10]];
bl4b:=[[2,3,4,11,12,13]];
bl4:=[[2,3,4,8,9,13]];
bl6:=[[3,5,10],[4,7,14]];
bl6b:=[[2,6,10],[4,7,14]];
bl12:=[[2,4,9]];
bl12b:=[[2,4,11]];
bl12c:=[[3,4,8]];
bl12d:=[[3,4,12]];

degs:=List(SchurElements(H),i->(x^4-1)*(x^12-1)/(x-1)^2/i);;

BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl3b);
BlockIntersection(bl4);
BlockIntersection(bl4b);
BlockIntersection(bl6);
BlockIntersection(bl6b);
BlockIntersection(bl12);
BlockIntersection(bl12b);
BlockIntersection(bl12c);
BlockIntersection(bl12d);


H:=Hecke(ComplexReflectionGroup(4,1,1),[[x^3,E(4)*x^3,-1,-E(4)*x^3]]);
bl2:=[ [ 1, 3 ] ];
bl4:=[ [ 3, 4 ] ];
bl4b:=[ [ 2, 3 ] ];
bl6:=[ [ 1, 3 ] ];
bl12:=[ [ 2, 3 ] ];
bl12b:=[ [ 3, 4 ] ];

degs:=(E(3)-E(3)^2)/3*x*(x-1)*List(SchurElements(H),i->(x^4-1)*(x^12-1)/(x-1)/(x^3-1)/i);;

BlockIntersection(bl2);
BlockIntersection(bl4);
BlockIntersection(bl4b);
BlockIntersection(bl6);
BlockIntersection(bl12);
BlockIntersection(bl12b);


###############
###   d=2
H:=Hecke(W,[[1,x],[-x,E(3),E(3)^2]]);
bl1:=[[1,4,7,13,14],[2,5,3,6,10]];
bl3:=[[2,6,10],[4,7,14]];
bl3b:=[[3,5,10],[4,7,14]];
bl4:=[[2,3,4,8,9,13]];
bl4b:=[[2,3,4,11,12,13]];
bl6:=[[1,3],[4,6],[7,11],[9,10]];
bl6b:=[[1,2],[4,5],[7,12],[8,10]];
bl12:=[[2,4,9]];
bl12b:=[[2,4,11]];
bl12c:=[[3,4,12]];
bl12d:=[[3,4,8]];

degs:=List(SchurElements(H),i->(x^4-1)*(x^12-1)/(x+1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl3);
BlockIntersection(bl3b);
BlockIntersection(bl4);
BlockIntersection(bl4b);
BlockIntersection(bl6);
BlockIntersection(bl6b);
BlockIntersection(bl12);
BlockIntersection(bl12b);
BlockIntersection(bl12c);
BlockIntersection(bl12d);

H:=Hecke(ComplexReflectionGroup(4,1,1),[[-x^3,-E(4)*x^3,-1,E(4)*x^3]]);
bl1:=[ [ 1, 3 ], [ 2 ], [ 4 ] ];
bl3:=[ [ 1, 3 ], [ 2 ], [ 4 ] ];
bl4:=[ [ 2, 3 ], [ 4 ], [ 1 ] ];
bl4b:=[ [ 3, 4 ], [ 2 ], [ 1 ] ];
bl12:= [ [ 2, 3 ], [ 4 ], [ 1 ] ];
bl12b:=[ [ 3, 4 ], [ 2 ], [ 1 ] ];

degs:=(E(3)-E(3)^2)/3*x*(x+1)*List(SchurElements(H),i->(x^4-1)*(x^12-1)/(x+1)/(x^3+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl4b);
BlockIntersection(bl12);
BlockIntersection(bl12b);


###############
###   d=3
H:=Hecke(ComplexReflectionGroup(12,1,1),[[E(3)*x^4,-E(4)*x^2,
-E(3)*x^2,E(12)^7*x,x^2,E(12)*x^2,-1,E(4)*x^2,E(3)*x^2,E(12)*x,-E(3),E(12)^7*x^2]]);
bl1:=[[3,11],[1,9],[6,10],[4,12]];
bl2:=[[5,7],[4,9,11],[1,3,10]];
bl3b:=[[3,7],[1,5],[2,10],[4,8]];
bl4:=[[2,7],[1,6,11]];
bl4b:=[[7,8],[1,11,12]];
bl6:=[[7,9],[5,10],[1,4]];
bl6b:=[[4,7],[5,11],[1,10]];
bl12:=[[1,7],[2,11]];
bl12b:=[[1,7],[8,11]];  # E(12)^7
bl12c:=[[1,2],[6,7]];  # -E(12)^11
bl12d:=[[1,8],[7,12]];  # E(12)^11

degs:=E(3)*List(SchurElements(H),i->(x^8-1)*(x^24-1)/(x^2-E(3))/(x^2-1)/i);;
unp:=List(uc.degrees,i->Value(i,x^2));;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3b);
BlockIntersection(bl4);
BlockIntersection(bl4b);
BlockIntersection(bl6);
BlockIntersection(bl6b);
BlockIntersection(bl12);
BlockIntersection(bl12b);
BlockIntersection(bl12c);
BlockIntersection(bl12d);



###############
###   d=3b
H:=Hecke(ComplexReflectionGroup(12,1,1),[[E(3)^2*x^4,E(12)^5*x^2,
-E(3)^2,E(12)^11*x,E(3)^2*x^2,-E(4)*x^2,-1,E(12)^11*x^2,x^2,E(12)^5*x,-E(3)^2*x^2,E(4)*x^2]]);
bl1:=[[3,11],[1,5],[2,10],[4,8]];
bl2:=[[7,9],[3,4,5],[1,10,11]];
bl3:=[[7,11],[1,9],[6,10],[4,12]];
bl4:=[[1,2,3],[6,7]];
bl4b:=[[7,12],[1,3,8]];
bl6:=[[7,10],[3,9],[1,4]];
bl6b:=[[5,7],[4,9],[1,10]];
bl12:=[[2,7],[1,6]];
bl12b:=[[7,8],[1,12]];  # E(12)^7
bl12c:=[[3,6],[1,7]];  # -E(12)^11
bl12d:=[[3,12],[1,7]];  # E(12)^11

degs:=E(3)^2*List(SchurElements(H),i->(x^8-1)*(x^24-1)/(x^2-E(3)^2)/(x^2-1)/i);;
unp:=List(uc.degrees,i->Value(i,x^2));;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl4b);
BlockIntersection(bl6);
BlockIntersection(bl6b);
BlockIntersection(bl12);
BlockIntersection(bl12b);
BlockIntersection(bl12c);
BlockIntersection(bl12d);


###############
###   d=4
H:=Hecke(W,[[1,-E(4)*x],[E(4)*x,E(3),E(3)^2]]);
bl1:=[[2,3,4,8,9,13]];
bl2:=[[2,3,4,11,12,13]];
bl3:=[[2,4,9]];
bl3b:=[[3,4,8]];
bl4b:=[[1,4,7,13,14],[2,5,3,6,10]];
bl6:=[[2,4,11]];
bl6b:=[[3,4,12]];
bl12:=[[1,2],[4,5],[7,12],[8,10]];
bl12b:=[[1,3],[4,6],[7,11],[9,10]];
bl12d:=[[2,6,10],[4,7,14]];
bl12c:=[[3,5,10],[4,7,14]];

degs:=-List(SchurElements(H),i->(x^4-1)*(x^12-1)/(x+E(4))^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl3b);
BlockIntersection(bl4b);
BlockIntersection(bl6);
BlockIntersection(bl6b);
BlockIntersection(bl12);
BlockIntersection(bl12b);


###############
###   d= 6b    -E(3)
H:=Hecke(ComplexReflectionGroup(12,1,1),[[E(3)*x^4,E(4)*x^2,E(3)*x^2,-E(3)*x,-x^2,E(12)^7*x^2,-1,-E(4)*x^2,-E(3)*x^2,E(3)*x,-E(3),-E(12)^7*x^2]]);
bl1:=[[1,3,10],[5,7],[4,9,11]];
bl2:=[[4,6],[1,9],[10,12],[3,11]];
bl3:=[[1,4],[7,10],[5,11]];
bl3b:=[[5,10],[7,9],[1,4]];
bl4:=[[7,8],[1,11,12]];
bl4b:=[[2,7],[1,6,11]];
bl6:=[[2,4],[3,7],[1,5],[8,10]];
bl12:=[[1,7],[8,11]];
bl12b:=[[1,7],[2,11]];  # E(12)^7
bl12c:=[[1,8],[7,12]];  # -E(12)^11
bl12d:=[[1,2],[6,7]];  # E(12)^11
 
degs:=E(3)*List(SchurElements(H),i->(x^8-1)*(x^24-1)/(x^2+E(3))/(x^2+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl3b);
BlockIntersection(bl4);
BlockIntersection(bl4b);
BlockIntersection(bl6);
BlockIntersection(bl12);
BlockIntersection(bl12b);
BlockIntersection(bl12c);
BlockIntersection(bl12d);



###############
###   d=12
H:=Hecke(ComplexReflectionGroup(12,1,1),[[-E(3)*x^4,x^2,-E(12)^7*x^2,E(24)^17*x,E(4)*x^2,E(3)*x^2,-1,-x^2,E(12)^7*x^2,-E(24)^17*x,-E(3),-E(3)*x^2]]);
bl1:=[ [ 7, 8 ], [ 1, 11, 12 ] ];
bl2:= [ [ 2, 7 ], [ 1, 6, 11 ] ];
bl3:= [ [ 1, 7 ],[ 8, 11 ] ];
bl3b:= [ [ 1, 8 ], [ 7, 12 ] ];
bl4b:= [ [ 1, 3, 10 ], [ 5, 7 ], [ 4, 9, 11 ] ];
bl4:= [ [ 4, 6 ], [ 1, 9 ], [ 10, 12 ], [ 3, 11 ] ];
#bl4:= [ [ 1, 3, 4 ], [ 5, 7 ], [ 9, 10, 11 ] ];
#bl4b:= [ [ 6, 10 ], [ 1, 9 ], [ 4, 12 ], [ 3, 11 ] ]
bl6:= [ [ 1, 2 ], [ 6, 7 ] ];
bl6b:= [ [ 1, 7 ], [ 2, 11 ] ];
bl12:= [ [ 1, 7 ], [ 8, 11 ] ];
bl12b:= [ [ 2, 10 ], [ 3, 7 ], [ 1, 5 ], [ 4, 8 ] ];


bl12:= [ [ 1, 4 ], [ 7, 10 ], [ 5, 11 ] ];
bl12:= [[ 4, 5 ], [ 7, 9 ], [ 1, 10 ] ];
bl12:= [ [ 2, 4 ], [ 3, 7 ], [ 1, 5 ], [ 8, 10 ] ];
bl12:= [ [ 1, 10 ], [ 4, 7 ], [ 5, 11 ] ];
bl12:= [[ 5, 10 ], [ 7, 9 ], [ 1, 4 ] ];

degs:=-E(3)*List(SchurElements(H),i->(x^8-1)*(x^24-1)/(x^2-E(12))/(x^2+E(4))/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl3b);
BlockIntersection(bl4);
BlockIntersection(bl4b);
BlockIntersection(bl6);
BlockIntersection(bl6b);
BlockIntersection(bl12);
BlockIntersection(bl12b);


###   d=E(12)^7
H:=Hecke(ComplexReflectionGroup(12,1,1),[[-E(3)*x^4,-x^2,E(12)^7*x^2,-E(24)^11*x,-E(4)*x^2,-E(3)*x^2,-1,x^2,-E(12)^7*x^2,E(24)^11*x,-E(3),E(3)*x^2]]);
bl1:= [ [ 2, 7 ], [ 1, 6, 11 ] ];
bl2:= [ [ 7, 8 ], [ 1, 11, 12 ] ];
bl3:= [ [ 1, 7 ], [ 2, 11 ] ];
bl3b:= [ [ 1, 2 ], [ 6, 7 ] ];
bl4:= [ [ 6, 10 ], [ 1, 9 ], [ 4, 12 ], [ 3, 11 ] ];
#bl4:= [ [ 4, 6 ], [ 1, 9 ], [ 10, 12 ], [ 3, 11 ] ];
bl4b:= [ [ 1, 3, 10 ], [ 5, 7 ], [ 4, 9, 11 ] ];
#bl4b:= [ [ 1, 3, 4 ], [ 5, 7 ], [ 9, 10, 11 ] ];
bl6:= [ [ 1, 8 ], [ 7, 12 ] ];
bl6b:= [ [ 1, 7 ], [ 8, 11 ] ];

-E(12)^7:= [ [ 1, 4 ], [ 7, 10 ], [ 5, 11 ] ]
-E(12)^7:= [ [ 1, 10 ], [ 4, 7 ], [ 5, 11 ] ]
-E(12)^11:= [ [ 4, 5 ], [ 7, 9 ], [ 1, 10 ] ]
-E(12)^11:= [ [ 5, 10 ], [ 7, 9 ], [ 1, 4 ] ]
E(12)^11:= [ [ 2, 4 ], [ 3, 7 ], [ 1, 5 ], [ 8, 10 ] ]
E(12)^11:= [[ 2, 10 ], [ 3, 7 ], [ 1, 5 ], [ 4, 8 ] ]

degs:=-E(3)*List(SchurElements(H),i->(x^8-1)*(x^24-1)/(x^2-E(12)^7)/(x^2-E(4))/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl3b);
BlockIntersection(bl4);
BlockIntersection(bl4b);
BlockIntersection(bl6);
BlockIntersection(bl6b);
BlockIntersection(bl12);
BlockIntersection(bl12b);


##################################################
##################    G_24   #####################
##################################################7.3.25
x:=X(Cyclotomics);; x.name:="x";;
W:= ComplexReflectionGroup(24);
uc:=UnipotentCharacters(W); Display(uc);
unp:=uc.degrees;;

## complete HC-parametrisation

###############
###   d=1
H:=Hecke(W,[[x,-1]]);
bl2:=[[1,2,3,4,5,6,9,10],[7,8]];;
bl3:=[[1,9,11],[2,10,12]];;
bl4:=[[1,8,9],[2,7,10]];;
bl6:=[[1,2,9,10]];;
bl7a:=[[1,3,7,11],[2,6,8,12]];;#x=E(7),E(7)^2,E(7)^4
bl7b:=[[1,5,7,11],[2,4,8,12]];;#x=E(7)^3,E(7)^5,E(7)^6
bl14a:=[[1,2,4,5]];;#x=E(14),E(14)^9,E(14)^11
bl14b:=[[1,2,3,6]];;#x=E(14)^3,E(14)^5,E(14)^13

degs:=List(SchurElements(H),i->(x^4-1)*(x^6-1)*(x^14-1)/(x-1)^3/i);;

BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl6);
BlockIntersection(bl7a);
BlockIntersection(bl7b);
BlockIntersection(bl14a);
BlockIntersection(bl14b);

###
H:=Hecke(ComplexReflectionGroup(2,1,1),[[1,-x^7]]);
bl2:=[[1,2]];;
bl14:=[[1,2]];;

degs:=1/2*x*List(SchurElements(H),i->(x^4-1)*(x^6-1)*(x^14-1)/(x^4-1)/(x+1)/i);;
BlockIntersection(bl2);
BlockIntersection(bl14);


###############
###   d=2
H:=Hecke(W,[[x,1]]);
bl1:=[[1,2,3,4,5,6,9,10],[7,8]];;
bl3:=[[1,2,9,10]];;
bl4:=[[1,8,9],[2,7,10]];;
bl6:=[[1,9,12],[2,10,11]];;
bl7a:=[[1,2,4,5]];;#x=E(7),E(7)^2,E(7)^4
bl7b:=[[1,2,3,6]];;#x=E(7)^3,E(7)^5,E(7)^6
bl14a:=[[1,3,7,12],[2,6,8,11]];;#x=E(14),E(14)^9,E(14)^11
bl14b:=[[1,5,7,12],[2,4,8,11]];;#x=E(14)^3,E(14)^5,E(14)^13

degs:=List(SchurElements(H),i->(x^4-1)*(x^6-1)*(x^14-1)/(x+1)^3/i);;

BlockIntersection(bl1);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl6);
BlockIntersection(bl7a);
BlockIntersection(bl7b);
BlockIntersection(bl14a);
BlockIntersection(bl14b);

###
H:=Hecke(ComplexReflectionGroup(2,1,1),[[1,x^7]]);
bl1:=[[1,2]];;
bl7:=[[1,2]];;

degs:=1/2*x*List(SchurElements(H),i->(x^4-1)*(x^6-1)*(x^14-1)/(x^4-1)/(x-1)/i);;
BlockIntersection(bl1);
BlockIntersection(bl7);


###############
###   d=3
H:=Hecke(ComplexReflectionGroup(6,1,1),[[1,-x^6,x^7,-x^7,x^8,-x^14]]);
bl1:=[[1,3,5],[2,4,6]];;
bl2:=[[1,2,5,6]];;
bl4:=[[1,5],[2,6]];;
bl6:=[[1,2],[5,6]];;
bl7:=[[1,4],[3,6]];;
bl14:=[[1,6]];;

degs:=List(SchurElements(H),i->(x^8-1)*(x^12-1)*(x^28-1)/(x^2-1)/(x^4+x^2+1)/i);;
unp:=List(uc.degrees,i->Value(i,x^2));;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl4);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl14);


###############
###   d=4
H:=Hecke(ComplexReflectionGroup(4,1,1),[[1,-1,x,x^7]]);
bl1:=[[1,3,4]];;
bl2:=[[2,3,4]];;
bl3:=[[3,4]];;
bl6:=[[3,4]];;
bl7:=[[1,4]];;
bl14:=[[2,4]];;

degs:=List(SchurElements(H),i->(x^4-1)*(x^6-1)*(x^14-1)/(x^4-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl14);

###
H:=Hecke(ComplexReflectionGroup(4,1,1),[[1,x^6,x^7,-x^7]]);
bl1:=[[1,2,3]];;
bl2:=[[1,2,4]];;
bl3:=[[1,2]];;
bl6:=[[1,2]];;
bl7:=[[1,3]];;
bl14:=[[1,4]];;

degs:=x*List(SchurElements(H),i->(x^4-1)*(x^6-1)*(x^14-1)/(x^4-1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl6);
BlockIntersection(bl7);
BlockIntersection(bl14);


###############
###   d=6
H:=Hecke(ComplexReflectionGroup(6,1,1),[[1,x^6,E(4)*x^7,-E(4)*x^7,x^8,x^14]]);
bl1:=[[1,2,5,6]];;
bl2:=[[1,3,5],[2,4,6]];;
bl3:=[[1,2],[5,6]];;
bl4:=[[1,5],[2,6]];;
bl7:=[[1,6]];;
bl14:=[[1,4],[3,6]];;

degs:=List(SchurElements(H),i->(x^8-1)*(x^12-1)*(x^28-1)/(x^2+1)/(x^4-x^2+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl7);
BlockIntersection(bl14);


###############
###   d=7a
H:=Hecke(ComplexReflectionGroup(14,1,1),[[1,x^2,-x^2,-E(7)^3*x^2,-E(7)^5*x^2,-E(7)^6*x^2,x^3,-x^3,x^4,-x^4,E(7)*x^4,E(7)^2*x^4,E(7)^4*x^4,-x^6]]);
bl1:=[[1,2,7,9],[3,8,10,14]];;
bl2:=[[1,3,9,14],[2,10]];;
bl3:=[[1,7],[8,14]];;
bl4:=[[1,10],[2,14]];;
bl6:=[[1,14]];;
bl7b:=[[1,11],[8,12],[4,10],[2,13],[5,7],[6,14]];;
bl14a:=[[1,6],[11,14],[4,12],[5,13]];;
bl14b:=[[1,13],[4,14],[5,9],[6,11],[3,12]];;

degs:=List(SchurElements(H),i->(x^8-1)*(x^12-1)*(x^28-1)/(x^2-E(7))/(x^2-E(7)^2)/(x^2-E(7)^4)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl6);
BlockIntersection(bl7b);
BlockIntersection(bl14a);
BlockIntersection(bl14b);


###############
###   d=14
H:=Hecke(ComplexReflectionGroup(14,1,1),[[1,-x^2,x^2,E(7)^3*x^2,E(7)^5*x^2,E(7)^6*x^2,E(4)*x^3,-E(4)*x^3,x^4,-x^4,E(7)*x^4,E(7)^2*x^4,E(7)^4*x^4,x^6]]);
bl1:=[[1,3,9,14],[2,10]];;
bl2:=[[1,2,7,9],[3,8,10,14]];;
bl3:=[[1,14]];;
bl4:=[[1,10],[2,14]];;
bl6:=[[1,7],[8,14]];;

degs:=List(SchurElements(H),i->(x^8-1)*(x^12-1)*(x^28-1)/(x^2+E(7))/(x^2+E(7)^2)/(x^2+E(7)^4)/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl6);


##################################################
##################    G_33   #####################
##################################################13.3.25
x:=X(Cyclotomics);; x.name:="x";; z:=E(3);
W:= ComplexReflectionGroup(33);
uc:=UnipotentCharacters(W); Display(uc);
unp:=uc.degrees;;

###############
###   d=1
H:=Hecke(W,[[1,-x]]);
bl2:=[[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,
  31,32,33,34,35,36,39,40],[19,20],[27,28],[29,30]];;
bl3:=[[1,3,5,7,9,11,13,15,17,19,21,25,27,29,33,35,37],
  [2,4,6,8,10,12,14,16,18,20,22,24,28,30,32,36,38]];;
bl4:=[[1,3,5,13,15,20,28,30,31,33,39],[2,4,6,14,16,19,27,29,32,34,40]];;
bl5:=[[1,7,19,37,39],[2,8,20,38,40]];;
bl6a:=[[1,2,3,4,5,6,7,8,9,12,13,14,15,16,17,18,21,22,23,24,25,26,31,34,35,36],[19,20,27,30]];;
bl6b:=[[1,2,3,4,5,6,7,8,10,11,13,14,15,16,17,18,21,22,23,24,25,26,32,33,35,36],[19,20,28,29]];;
bl9a:=[[1,5,23,27,37],[2,4,26,30,38]];;  #x=E(9),E(9)^4,E(9)^7
bl9b:=[[1,3,25,29,37],[2,6,24,28,38]];;  #x=E(9)^2,E(9)^5,E(9)^8
bl10:=[[1,2,21,22,39,40]];
bl12a:=[[1,5,15,20,28,33],[2,4,16,19,29,32]];;  #x=E(12),E(12)^7
bl12b:=[[1,3,15,20,30,31],[2,6,16,19,27,34]];;  #x=E(12)^5,E(12)^11
bl18a:=[[1,2,3,6,10,11]];;  #x=E(18),E(18)^7,E(18)^13
bl18b:=[[1,2,4,5,9,12]];;  #x=E(18)^5,E(18)^11,E(18)^17

degs:=List(SchurElements(H),i->(x^4-1)*(x^6-1)*(x^10-1)*(x^12-1)*(x^18-1)/(x-1)^5/i);;

BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6a);
BlockIntersection(bl6b);
BlockIntersection(bl9a);
BlockIntersection(bl9b);
BlockIntersection(bl10);
BlockIntersection(bl12a);
BlockIntersection(bl12b);
BlockIntersection(bl18a);
BlockIntersection(bl18b);

###
H:=Hecke(ComplexReflectionGroup(4),[[z,z^2,x^3]]);
bl2:=[[1,2,3,4,5,7]];;
bl4:=[[3,6,7]];;
bl6:=[[1,2,3,4,5,7]];;
bl9a:=[[1,3],[4,6]];;
bl9b:=[[2,3],[5,6]];;
bl12:=[[3,6,7]];;
bl18a:=[[1,3,5]];;
bl18b:=[[2,3,4]];;

degs:=(z-z^2)/3*x*(x-1)*List(SchurElements(H),i->(x^4-1)*(x^6-1)*(x^10-1)*(x^12-1)*(x^18-1)/(x^3-1)^3/(x^2-x+1)/i);;
BlockIntersection(bl2);
BlockIntersection(bl4);
BlockIntersection(bl6);
BlockIntersection(bl9a);
BlockIntersection(bl9b);
BlockIntersection(bl12);
BlockIntersection(bl18a);
BlockIntersection(bl18b);

###
H:=Hecke(ComplexReflectionGroup(4),[[1,z*x^3,z^2*x^3]]);
bl2:=[[1,2,3,5,6,7]];;
bl4:=[[1,4,7]];;
bl6:=[[1,2,3,5,6,7]];;
bl9a:=[[1,3],[4,6]];;
bl9b:=[[1,2],[4,5]];;
bl12:=[[1,4,7]];;
bl18a:=[[1,3,5]];;
bl18b:=[[1,2,6]];;

degs:=(z-z^2)/3*x^4*(x-1)*List(SchurElements(H),i->(x^4-1)*(x^6-1)*(x^10-1)*(x^12-1)*(x^18-1)/(x^3-1)^3/(x^2-x+1)/i);;
BlockIntersection(bl2);
BlockIntersection(bl4);
BlockIntersection(bl6);
BlockIntersection(bl9a);
BlockIntersection(bl9b);
BlockIntersection(bl12);
BlockIntersection(bl18a);
BlockIntersection(bl18b);

###
H:=Hecke(ComplexReflectionGroup(6,1,1),[[1,-z*x,-z^2*x,z*x^4,z^2*x^4,-x^5]]);
bl2:=[[1,6],[2,4],[3,5]];;
bl3a:=[[1,5],[2,6]];;
bl3b:=[[1,4],[3,6]];;
bl6a:=[[1,2,4],[3,5,6]];;
bl6b:=[[1,3,5],[2,4,6]];;
bl10:=[[1,6]];;
bl12a:=[[1,5],[2,6]];;#E(12)
bl12b:=[[1,4],[3,6]];;
bl18a:=[[2,5]];;#E(18)
bl18b:=[[3,4]];;

degs:=1/2*x^3*List(SchurElements(H),i->(x^4-1)*(x^6-1)*(x^10-1)*(x^12-1)*(x^18-1)/(x+1)^2/(x^4-1)/(x^3+1)/(x^2+1)/i);;

BlockIntersection(bl2);
BlockIntersection(bl3a);
BlockIntersection(bl3b);
BlockIntersection(bl6a);
BlockIntersection(bl6b);
BlockIntersection(bl10);
BlockIntersection(bl12a);
BlockIntersection(bl12b);
BlockIntersection(bl18a);
BlockIntersection(bl18b);


###############
###   d=2
H:=Hecke(W,[[x,1]]);

degs:=List(SchurElements(H),i->(x^4-1)*(x^6-1)*(x^10-1)*(x^12-1)*(x^18-1)/(x+1)^5/i);;


###############
###   d=3a
H:=Hecke(ComplexReflectionGroup(26),[[1,-z^2*x],[1,z*x,z^2*x^2]]);
bl1:=[[1,5,6,7,9,11,13,21,23,25,27,29,31,39,42,43,47],
  [2,3,4,8,10,12,14,16,18,20,34,36,38,40,41,44,46]];
bl2:=[[1,2,3,4,5,6,7,8,9,10,13,14,16,18,20,21,23,25,27,29,34,38,39,41,46,47],
  [11,31,40],[12,36,42],[15,17,19,28,30,45],[22,24,26,33,37,48]];
bl3b:=[[1,5,6,7,9,11,39,42,43,45],[2,3,4,8,10,12,40,41,44,48],[15,17,19,21,23,25],
  [16,18,20,22,24,26],[27,29,31,33,35,37],[28,30,32,34,36,38]];
bl4:=[[1,5,7,12,23,27,36,40,47],[2,3,10,11,20,31,38,42,46],[19,32,45],[24,35,48]];
bl5:=[[1,25,31,43],[3,16,36,44]];
bl6a:=[[1,2,3,5,7,8,9,10,13,14,39,41,45,48],[15,17,19,21,23,25,28,30,34,38],
  [16,18,20,22,24,26,27,29,33,37],[31,35],[32,36],[40,42]];
bl6b:=[[1,2,3,4,5,6,7,8,9,10,13,14],[11,12],[15,16,17,18,19,20,27,28,29,30,47,48],
  [21,22,23,24,25,26,33,34,37,38,45,46],[31,32],[35,36]];
bl9a:=[[1,19,37,42],[2,26,32,44],[3,24,28,40],[5,15,35,43]];
bl9b:=[[1,11,17],[3,12,22],[7,33,43],[10,30,44],[13,19,35],[14,24,32]];
bl10:=[[1,3,18,21]];
bl12a:=[[1,5,12],[2,3,11],[19,32,47],[20,31,48],[23,36,45],[24,35,46]];
bl12b:=[[1,7,40,45],[3,10,42,48],[19,23,32,36],[20,24,31,35]];
bl18a:=[[1,4,15,24],[3,6,19,26],[7,10,30,33]];
bl18b:=[[1,19,37,41],[2,5,17,22],[3,24,28,39]];

degs:=List(SchurElements(H),i->(x^4-1)*(x^6-1)*(x^10-1)*(x^12-1)*(x^18-1)/(x-z)^3/(x-1)^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3b);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6a);
BlockIntersection(bl6b);
BlockIntersection(bl9a);
BlockIntersection(bl9b);
BlockIntersection(bl10);
BlockIntersection(bl12a);
BlockIntersection(bl12b);
BlockIntersection(bl18a);
BlockIntersection(bl18b);


###
H:=Hecke(ComplexReflectionGroup(6,1,1),[[1,-x,-z^2*x,x^4,z*x^4,-x^5]]);
bl1:=[[1,4],[2,6]];;
bl2:=[[1,2,4,6]];;
bl3b:=[[1,5],[3,6]];;
bl4:=[[1,4],[2,6]];;
bl6a:=[[1,5],[3,6],[2,4]];;
bl6b:=[[1,3],[2,4],[5,6]];;
bl10:=[[1,6]];;
bl12b:=[[1,5],[3,6]];;
bl18a:=[[2,5],[3,4]];;  # E(18)
bl18b:=[[3,5]];;

degs:=1/2*x^3*List(SchurElements(H),i->(x^4-1)*(x^6-1)*(x^10-1)*(x^12-1)*(x^18-1)/(x^3+1)^2/(x^2+1)/(x^2+z^2)/(x-z)/i);;
BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3b);
BlockIntersection(bl4);
BlockIntersection(bl6a);
BlockIntersection(bl6b);
BlockIntersection(bl10);
BlockIntersection(bl12b);
BlockIntersection(bl18a);
BlockIntersection(bl18b);


###############
###   d=4
H:=Hecke(ComplexReflectionGroup(6),[[1,x^2],[z,z^2,x^4]]);
bl1:=[[1,2,3,4,5,6,8,9,10,13,14]];;
bl2:=[[1,2,3,4,5,6,7,11,12,13,14]];;
bl3a:=[[1,2,3,4,6,8,9,10,13],[7,11]];;
bl3b:=[[1,2,3,5,6,8,9,10,13],[11,12]];;
bl5:=[[6,9,14]];;
bl6a:=[[1,2,3,5,6,7,11,12,13],[8,9]];;
bl6b:=[[1,2,3,4,6,7,11,12,13],[9,10]];;
bl9a:=[[1,6,8]];;
bl9b:=[[2,6,10]];;
bl10:=[[6,11,14]];;
bl12a:=[[1,3],[4,6],[7,9],[10,11]];;
bl12b:=[[2,3],[5,6],[8,11],[9,12]];;
bl18a:=[[2,6,7]];;
bl18b:=[[1,6,12]];;

degs:=List(SchurElements(H),i->(x^4-1)*(x^6-1)*(x^10-1)*(x^12-1)*(x^18-1)/(x^4-1)/(x^2+1)/i);;
BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3a);
BlockIntersection(bl3b);
BlockIntersection(bl5);
BlockIntersection(bl6a);
BlockIntersection(bl6b);
BlockIntersection(bl9a);
BlockIntersection(bl9b);
BlockIntersection(bl10);
BlockIntersection(bl12a);
BlockIntersection(bl12b);
BlockIntersection(bl18a);
BlockIntersection(bl18b);

###
H:=Hecke(ComplexReflectionGroup(6),[[1,x^2],[1,z*x^4,z^2*x^4]]);
bl1:=[[1,2,3,4,5,6,8,9,10,13,14]];;
bl2:=[[1,2,3,4,5,6,7,11,12,13,14]];;
bl3a:=[[1,3,4,5,6,8,9,10,14],[7,11]];;
bl3b:=[[1,2,4,5,6,8,9,10,14],[7,12]];;
bl5:=[[1,10,13]];;
bl6a:=[[1,2,4,5,6,7,11,12,14],[8,10]];;
bl6b:=[[1,3,4,5,6,7,11,12,14],[9,10]];;
bl9a:=[[1,6,8]];;
bl9b:=[[1,5,9]];;
bl10:=[[1,7,13]];;
bl12a:=[[1,3],[4,6],[7,9],[10,11]];;
bl12b:=[[1,2],[4,5],[7,8],[10,12]];;
bl18a:=[[1,5,11]];;
bl18b:=[[1,6,12]];;

degs:=x*List(SchurElements(H),i->(x^4-1)*(x^6-1)*(x^10-1)*(x^12-1)*(x^18-1)/(x^4-1)/(x^2+1)/i);;
BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3a);
BlockIntersection(bl3b);
BlockIntersection(bl5);
BlockIntersection(bl6a);
BlockIntersection(bl6b);
BlockIntersection(bl9a);
BlockIntersection(bl9b);
BlockIntersection(bl10);
BlockIntersection(bl12a);
BlockIntersection(bl12b);
BlockIntersection(bl18a);
BlockIntersection(bl18b);

###
H:=Hecke(ComplexReflectionGroup(4,1,1),[[1,-1,x^3,x^9]]);
bl1:=[[1,3,4]];;
bl2:=[[2,3,4]];;
bl3:=[[1,3,4]];;
bl6:=[[2,3,4]];;
bl9:=[[1,4]];;
bl18:=[[2,4]];;

degs:=(z-z^2)/3*x*(x^2-1)*List(SchurElements(H),i->(x^4-1)*(x^6-1)*(x^10-1)*(x^12-1)*(x^18-1)/(x^6-1)/(x^6+1)/i);;
BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl6);
BlockIntersection(bl9);
BlockIntersection(bl18);

###
H:=Hecke(ComplexReflectionGroup(4,1,1),[[1,x^6,x^9,-x^9]]);
bl1:=[[1,2,3]];;
bl2:=[[1,2,4]];;
bl3:=[[1,2,3]];;
bl6:=[[1,2,4]];;
bl9:=[[1,3]];;
bl18:=[[1,4]];;

degs:=(z-z^2)/3*x^4*(x^2-1)*List(SchurElements(H),i->(x^4-1)*(x^6-1)*(x^10-1)*(x^12-1)*(x^18-1)/(x^6-1)/(x^6+1)/i);;
BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl6);
BlockIntersection(bl9);
BlockIntersection(bl18);


###############
###   d=5
H:=Hecke(ComplexReflectionGroup(10,1,1),[[1,x^6,-x^6,x^8,x^9,-x^9,-x^10,x^12,-x^12,-x^18]]);
bl1:=[[1,2,4,5,8],[3,6,7,9,10]];;
bl2:=[[1,3,4,7,8,10],[2,9]];;
bl3:=[[1,2,5,8],[3,6,9,10]];;
bl4:=[[1,4,9],[2,7,10]];;
bl6:=[[1,3,8,10],[2,9]];;
bl9:=[[1,5],[6,10]];;
bl10:=[[1,7],[4,10]];;
bl12:=[[1,9],[2,10]];;
bl18:=[[1,10]];;

degs:=List(SchurElements(H),i->(x^8-1)*(x^12-1)*(x^20-1)*(x^24-1)*(x^36-1)/(x^10-1)/i);;
unp:=List(uc.degrees,i->Value(i,x^2));;
BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl6);
BlockIntersection(bl9);
BlockIntersection(bl10);
BlockIntersection(bl12);
BlockIntersection(bl18);


###############
###   d=6b
H:=Hecke(ComplexReflectionGroup(26),[[1,z^2*x],[1,-z*x,z^2*x^2]]);
bl1:=[[1,2,3,4,5,6,7,8,9,10,13,14,16,18,20,21,23,25,27,29,34,38,39,42,46,47],
  [11,31,40],[12,36,41],[15,17,19,28,30,45],[22,24,26,33,37,48]];;
bl2:=[[1,5,6,7,9,11,13,21,23,25,27,29,31,39,41,44,47],
  [2,3,4,8,10,12,14,16,18,20,34,36,38,40,42,43,46]];;
bl3a:=[[1,2,3,4,5,6,7,8,9,10,13,14],[11,12],[15,16,17,18,19,20,27,28,29,30,47,48],
  [21,22,23,24,25,26,33,34,37,38,45,46],[31,32],[35,36]];;
bl3b:=[[1,2,3,5,7,8,9,10,13,14,39,42,45,48],[15,17,19,21,23,25,28,30,34,38],
  [16,18,20,22,24,26,27,29,33,37],[31,35],[32,36],[40,41]];;
bl4:=[[1,5,7,12,23,27,36,40,47],[2,3,10,11,20,31,38,41,46],[19,32,45],[24,35,48]];
bl5:=[[1,3,18,21]];;
bl6a:=[[1,5,6,7,9,11,39,41,43,45],[2,3,4,8,10,12,40,42,44,48],[15,17,19,21,23,25],
  [16,18,20,22,24,26],[28,30,32,34,36,38],[27,29,31,33,35,37]];;
bl9a:=[[1,19,37,42],[2,5,17,22],[3,24,28,39]];;
bl9b:=[[1,4,15,24],[3,6,19,26],[7,10,30,33]];;
bl10:=[[1,25,31,44],[3,16,36,43]];;
bl12a:=[[1,5,12],[2,3,11],[19,32,47],[20,31,48],[23,36,45],[24,35,46]];;
bl12b:=[[1,7,40,45],[3,10,41,48],[19,23,32,36],[20,24,31,35]];;
bl18a:=[[1,11,17],[3,12,22],[7,33,44],[10,30,43],[13,19,35],[14,24,32]];;
bl18b:=[[1,19,37,41],[2,26,32,43],[3,24,28,40],[5,15,35,44]];;

degs:=List(SchurElements(H),i->(x^4-1)*(x^6-1)*(x^10-1)*(x^12-1)*(x^18-1)/(x+z)^3/(x+1)^2/i);;
BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3a);
BlockIntersection(bl3b);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6a);
BlockIntersection(bl9a);
BlockIntersection(bl9b);
BlockIntersection(bl10);
BlockIntersection(bl12a);
BlockIntersection(bl12b);
BlockIntersection(bl18a);
BlockIntersection(bl18b);

###
H:=Hecke(ComplexReflectionGroup(6,1,1),[[1,x,z^2*x,x^4,z*x^4,x^5]]);
bl1:=[[1,2,4,6]];;
bl2:=[[1,4],[2,6]];;
bl3a:=[[1,3],[2,4],[5,6]];;
bl3b:=[[1,5],[3,6],[2,4]];;
bl4:=[[1,4],[2,6]];;
bl5:=[[1,6]];;
bl6a:=[[1,5],[3,6]];;
bl9a:=[[3,5]];;#E(9)
bl9b:=[[2,5],[3,4]];;#E(9)^2
bl12b:=[[1,5],[3,6]];;

degs:=1/2*x^3*List(SchurElements(H),i->(x^4-1)*(x^6-1)*(x^10-1)*(x^12-1)*(x^18-1)/(x^3-1)^2/(x^2+1)/(x^2+z^2)/(x+z)/i);;
BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3a);
BlockIntersection(bl3b);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6a);
BlockIntersection(bl9a);
BlockIntersection(bl9b);
BlockIntersection(bl12b);


###############
###   d=9a
H:=Hecke(ComplexReflectionGroup(18,1,1),[[1,-x^2,-z*x^2,x^4,-x^4,z*x^4,z^2*x^4,-z^2*x^4,x^5,-x^5,x^6,-x^6,z*x^6,-z*x^6,-z^2*x^6,x^8,z^2*x^8,-x^10]]);
bl1:=[[1,4,9,11,16],[8,15],[6,13],[2,5,10,12,18],[7,17],[3,14]];;
bl2:=[[1,2,4,12,16,18],[3,6,14],[5,11],[7,15,17]];;
bl3a:=[[1,6,11,17],[3,5,15,18],[7,10,13,16],[2,8,9,14]];;
bl3b:=[[1,7,11],[2,9,15],[4,13,17],[3,8,12],[6,10,16],[5,14,18]];;
bl4:=[[1,5,16],[2,11,18],[3,13],[8,17]];;
bl5:=[[1,9],[10,18]];;
bl6a:=[[1,3,7,12],[4,14,17,18],[8,11],[2,6,15,16],[5,13]];;
bl6b:=[[1,6,12,17],[2,7,14,16],[3,4,15,18],[8,13]];;
bl9b:=[[1,13],[3,10],[8,18],[9,17]];;
bl10:=[[1,18]];;
bl12a:=[[1,17],[8,16],[2,13],[3,18]];;
bl12b:=[[1,8],[3,11],[5,17],[13,18]];;
bl18a:=[[1,14],[3,17],[7,18]];;
bl18b:=[[1,15],[2,17],[3,16],[6,18]];;

degs:=List(SchurElements(H),i->(x^8-1)*(x^12-1)*(x^20-1)*(x^24-1)*(x^36-1)/(x^6-z)/(x^2-z^2)/(x^2-1)/i);;
BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3a);
BlockIntersection(bl3b);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6a);
BlockIntersection(bl6b);
BlockIntersection(bl9b);
BlockIntersection(bl10);
BlockIntersection(bl12a);
BlockIntersection(bl12b);
BlockIntersection(bl18a);
BlockIntersection(bl18b);


###############
###   d=10
H:=Hecke(ComplexReflectionGroup(10,1,1),[[1,x^6,-x^6,x^8,E(4)*x^9,-E(4)*x^9,x^10,x^12,-x^12,x^18]]);
bl1:=[[1,2,4,7,8,10],[3,9]];;
bl2:=[[1,3,4,5,8],[2,6,7,9,10]];;
bl3:=[[1,2,8,10],[3,9]];;
bl4:=[[1,4,9],[3,7,10]];;
bl5:=[[1,7],[4,10]];;
bl6:=[[1,3,5,8],[2,6,9,10]];;
bl9:=[[1,10]];;
bl12:=[[1,9],[3,10]];;
bl18:=[[1,5],[6,10]];;

degs:=List(SchurElements(H),i->(x^8-1)*(x^12-1)*(x^20-1)*(x^24-1)*(x^36-1)/(x^10+1)/i);;
BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6);
BlockIntersection(bl9);
BlockIntersection(bl12);
BlockIntersection(bl18);


###############
###   d=12a
H:=Hecke(ComplexReflectionGroup(12,1,1),[[1,z^2,x,-x,x^2,z^2*x^2,x^3,-x^3,z^2*x^3,-z^2*x^3,x^4,x^6]]);
bl1:=[[1,3,5,7,11,12],[4,8],[2,6,9]];;
bl2:=[[1,4,5,8,11,12],[3,7],[2,6,10]];;
bl3a:=[[1,7,12],[3,6,11],[2,5,9]];;
bl3b:=[[1,6,7,12],[4,10],[2,3,9,11]];;
bl4:=[[1,11],[3,8],[4,7],[5,12]];;
bl5:=[[3,12]];;
bl6a:=[[1,6,8,12],[3,9],[2,4,10,11]];;
bl6b:=[[1,8,12],[4,6,11],[2,5,10]];;
bl9a:=[[1,9],[2,12]];;  # E(9), E(9)^4, E(9)^7
bl9b:=[[2,7],[9,12]];;  # E(9)^2, E(9)^5, E(9)^8
bl10:=[[4,12]];;
bl12b:=[[2,11],[3,10],[4,9],[6,12]];;
bl18a:=[[2,8],[10,12]];;  # E(18)
bl18b:=[[1,10],[2,12]];;  # E(18)^5

degs:=z*List(SchurElements(H),i->(x^4-1)*(x^6-1)*(x^10-1)*(x^12-1)*(x^18-1)/(x^2+z^2)/(x^2+1)/(x^2-z^2)/i);;
BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3a);
BlockIntersection(bl3b);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6a);
BlockIntersection(bl6b);
BlockIntersection(bl9a);
BlockIntersection(bl9b);
BlockIntersection(bl10);
BlockIntersection(bl12b);
BlockIntersection(bl18a);
BlockIntersection(bl18b);

###
H:=Hecke(ComplexReflectionGroup(12,1,1),[[1,x^2,x^3,-x^3,z*x^3,-z*x^3,x^4,z*x^4,x^5,-x^5,x^6,z*x^6]]);
bl1:=[[1,2,3,7,9,11],[5,8,12],[4,10]];;
bl2:=[[1,2,4,7,10,11],[6,8,12],[3,9]];;
bl3a:=[[1,3,11],[5,7,12],[2,8,9]];;
bl3b:=[[1,3,8,11],[2,5,9,12],[6,10]];;
bl4:=[[1,7],[2,11],[3,10],[4,9]];;
bl5:=[[1,9]];;
bl6a:=[[1,4,8,11],[2,6,10,12],[5,9]];;
bl6b:=[[1,4,11],[6,7,12],[2,8,10]];;
bl9a:=[[1,12],[5,11]];;  # E(9)
bl9b:=[[1,5],[3,12]];;  # E(9)^2
bl10:=[[1,10]];;
bl12b:=[[1,8],[2,12],[5,10],[6,9]];;
bl18a:=[[1,6],[4,12]];;  # E(18)
bl18b:=[[1,12],[6,11]];;

degs:=x*List(SchurElements(H),i->(x^4-1)*(x^6-1)*(x^10-1)*(x^12-1)*(x^18-1)/(x^2+z^2)/(x^2+1)/(x^2-z^2)/i);;
BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3a);
BlockIntersection(bl3b);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6a);
BlockIntersection(bl6b);
BlockIntersection(bl9a);
BlockIntersection(bl9b);
BlockIntersection(bl10);
BlockIntersection(bl12b);
BlockIntersection(bl18a);
BlockIntersection(bl18b);


###############
###   d=18a
H:=Hecke(ComplexReflectionGroup(18,1,1),[[1,x^2,z^2*x^2,x^4,-x^4,z^2*x^4,z*x^4,-z*x^4,E(4)*x^5,-E(4)*x^5,x^6,-x^6,z^2*x^6,z*x^6,-z^2*x^6,x^8,z*x^8,x^10]]);
bl1:=[[1,2,4,11,16,18],[7,14,17],[5,12],[3,6,13]];;
bl2:=[[1,4,10,12,16],[3,13],[7,17],[2,5,9,11,18],[6,15],[8,14]];;
bl3a:=[[1,3,7,11],[5,15],[2,6,14,16],[8,12],[4,13,17,18]];;
bl3b:=[[1,6,11,17],[8,15],[3,4,14,18],[2,7,13,16]];;
bl4:=[[1,5,16],[2,12,18],[8,17],[3,15]];;
bl5:=[[1,18]];;
bl6a:=[[1,6,12,17],[2,8,10,13],[7,9,15,16],[3,5,14,18]];;
bl6b:=[[1,7,12],[5,13,18],[6,9,16],[3,8,11],[4,15,17],[2,10,14]];;
bl9a:=[[1,13],[3,17],[7,18]];;
bl9b:=[[1,14],[2,17],[3,16],[6,18]];;
bl10:=[[1,9],[10,18]];;
bl12a:=[[1,8],[3,12],[5,17],[15,18]];;
bl12b:=[[1,17],[2,15],[3,18],[8,16]];;
bl18b:=[[1,15],[3,9],[8,18],[10,17]];;

degs:=List(SchurElements(H),i->(x^8-1)*(x^12-1)*(x^20-1)*(x^24-1)*(x^36-1)/(x^6+z^2)/(x^2+z)/(x^2+1)/i);;
BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3a);
BlockIntersection(bl3b);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6a);
BlockIntersection(bl6b);
BlockIntersection(bl9a);
BlockIntersection(bl9b);
BlockIntersection(bl10);
BlockIntersection(bl12a);
BlockIntersection(bl12b);
BlockIntersection(bl18b);


###############
###   d=18b
H:=Hecke(ComplexReflectionGroup(18,1,1),[[1,x^2,z*x^2,x^4,-x^4,z*x^4,z^2*x^4,-z^2*x^4,E(4)*x^5,-E(4)*x^5,x^6,-x^6,z*x^6,z^2*x^6,-z*x^6,x^8,z^2*x^8,x^10]]);
bl1:=[[1,2,4,11,16,18],[3,6,13],[5,12],[7,14,17]];;
bl2:=[[1,4,9,12,16],[8,14],[6,15],[2,5,10,11,18],[7,17],[3,13]];;
bl3a:=[[1,6,11,17],[2,7,13,16],[3,4,14,18],[8,15]];;
bl3b:=[[1,3,7,11],[4,13,17,18],[8,12],[2,6,14,16],[5,15]];;
bl4:=[[1,5,16],[2,12,18],[3,15],[8,17]];;
bl5:=[[1,18]];;
bl6a:=[[1,7,12],[2,9,14],[4,15,17],[3,8,11],[6,10,16],[5,13,18]];;
bl6b:=[[1,6,12,17],[3,5,14,18],[7,9,15,16],[2,8,10,13]];;
bl9a:=[[1,15],[3,9],[8,18],[10,17]];;  # E(9)
bl9b:=[[1,13],[7,18],[3,17]];; # E(9)^2, E(9)^5
bl9c:=[[1,14],[2,17],[3,16],[6,18]];;  # E(9)^4, E(9)^7
bl10:=[[1,9],[10,18]];;
bl12a:=[[1,17],[2,15],[8,16],[3,18]];;  # E(12), E(12)^7
bl12b:=[[1,8],[3,12],[5,17],[15,18]];;  # E(12)^5, E(12)^11

bl-E(9)^5:=[[1,15],[8,18],[3,9],[10,17]]
bl-E(9)^2:=[[1,15],[3,9],[10,17],[8,18]]
bl-E(9)^4-E(9)^7:=[[1,14],[2,17],[3,16],[6,18]]
bl-E(9)^4-E(9)^7:=[[1,14],[2,17],[3,16],[6,18]]
bl-E(9)^2-E(9)^5:=[[1,13],[3,17],[7,18]]
bl-E(9)^2-E(9)^5:=[[1,13],[3,17],[7,18]]

degs:=List(SchurElements(H),i->(x^8-1)*(x^12-1)*(x^20-1)*(x^24-1)*(x^36-1)/(x^6+z)/(x^2+z^2)/(x^2+1)/i);;
BlockIntersection(bl1);
BlockIntersection(bl2);
BlockIntersection(bl3a);
BlockIntersection(bl3b);
BlockIntersection(bl4);
BlockIntersection(bl5);
BlockIntersection(bl6a);
BlockIntersection(bl6b);
BlockIntersection(bl9a);
BlockIntersection(bl9b);
BlockIntersection(bl10);
BlockIntersection(bl12a);
BlockIntersection(bl12b);



ordspez:=360; sizecyc:=18;
for i in [0..ordspez-1] do
 ls:=List(l,j->Value(j,E(ordspez)^i));
 m:=List([0..6*ordspez-1],j->Filtered([1..sizecyc],k->ls[k]=E(6*ordspez)^j));
 if Filtered(m,j->Length(j)>1)<>[] then
   Print("bl",E(ordspez)^(2*i),":= ",Filtered(m,j->Length(j)>1),"\n");
fi; od;


for i in [0..23] do
 ls:=List(l,j->Value(j,E(24)^i));
 m:=List([0..23],j->Filtered([1..12],k->ls[k]=E(24)^j));
   Print(E(12)^i,":= ",Filtered(m,j->j<>[]),"\n");
od;


##################################################
##################    2B2    #####################
##################################################21.1.25
x:=X(Cyclotomics);; x.name:="x";;
W:= CoxeterGroup("A",1);

## complete HC-parametrisation

###############
###   d=1
H:=Hecke(W,[[1,-x^2]]);
bl4:=[[1,2]];

###############
###   d=4
H:=Hecke(ComplexReflectionGroup(4,1,1),[[1,E(8)*x,E(8)^7*x,x^2]]);
bl1:= [ [ 1, 4 ] ];
bl4b:= [ [ 1, 2 ], [ 3, 4 ] ];

degs:=-List(SchurElements(H),i->(x^2-1)*(x^4+1)/(x-E(8)^3)/(x-E(8)^5)/i);;

###############
###   d=4b
H:=Hecke(ComplexReflectionGroup(4,1,1),[[1,E(8)^3*x,E(8)^5*x,x^2]]);
bl1:= [ [ 1, 4 ] ];
bl4:= [ [ 1, 2 ], [ 3, 4 ] ];

degs:=-List(SchurElements(H),i->(x^2-1)*(x^4+1)/(x-E(8))/(x-E(8)^7)/i);;


##################################################
##################    2G2    #####################
##################################################21.1.25
x:=X(Cyclotomics);; x.name:="x";;
W:= CoxeterGroup("A",1);

## complete HC-parametrisation

###############
###   d=1
H:=Hecke(W,[[1,-x^2]]);
bl4:=[[1,2]];


###############
###   d=4
H:=Hecke(ComplexReflectionGroup(6,1,1),[[1,E(12)*x,E(12)^5*x,E(12)^7*x,E(12)^11*x,x^2]]);
bl1:= [ [ 1, 6 ] ];
-E(12)^7:= [ [ 1, 5 ], [ 2, 6 ] ];
E(12)^7:= [ [ 1, 3 ], [ 4, 6 ] ];

degs:=-List(SchurElements(H),i->(x^2-1)*(x^6+1)/(x^2+1)/i);;


###############
###   d=12
H:=Hecke(ComplexReflectionGroup(6,1,1),[[1,E(4)*x,-E(4)*x,E(12)^7*x,E(12)^5*x,x^2]]);
bl1:= [ [ 1, 6 ] ];
bl4:= [ [ 1, 2 ], [ 3, 6 ] ];
-E(12)^11:= [ [ 1, 4 ], [ 5, 6 ] ];

degs:=-List(SchurElements(H),i->(x^2-1)*(x^6+1)/(x-E(12)^11)/(x+E(12)^7)/i);;



##################################################
##################    2F4    #####################
##################################################21.1.25
x:=X(Cyclotomics);; x.name:="x";;
W:=CoxeterGroup("F",4);
r2:=E(8)+E(8)^7;
m:=[[0,0,0,r2],[0,0,r2,0],[0,1/r2,0,0,],[1/r2,0,0,0]];
p1:=x-1; p2:=x+1; p4:=x^2+1; p8:=x^4+1; p12:=x^4-x^2+1; p24:=x^8-x^4+1;
p8a:=x^2+r2*x+1; p8b:=x^2-r2*x+1; p24a:=x^4+r2*x^3+x^2+r2*x+1;
p24b:=x^4-r2*x^3+x^2-r2*x+1;
unp:=[x^0,
1/r2*x*p1*p2*p4^2*p12,
1/r2*x*p1*p2*p4^2*p12,
x^2*p12*p24,
1/4*x^4*p4^2*p12*p8b^2*p24a,
1/4*x^4*p4^2*p12*p8a^2*p24b,
1/2*x^4*p8^2*p24,
1/12*x^4*p1^2*p2^2*p12*p8a^2*p24a, 
1/12*x^4*p1^2*p2^2*p12*p8b^2*p24b, 
1/6*x^4*p1^2*p2^2*p4^2*p24, 
1/4*x^4*p1^2*p2^2*p4^2*p12*p24b,
1/4*x^4*p1^2*p2^2*p4^2*p12*p24b, 
1/4*x^4*p1^2*p2^2*p4^2*p12*p24a,
1/4*x^4*p1^2*p2^2*p4^2*p12*p24a, 
1/3*x^4*p1^2*p2^2*p4^2*p8^2,
1/3*x^4*p1^2*p2^2*p4^2*p8^2,
1/3*x^4*p1^2*p2^2*p12*p24,
x^10*p12*p24,
1/r2*x^13*p1*p2*p4^2*p12,
1/r2*x^13*p1*p2*p4^2*p12,
x^24];
uc:=rec(charParams:=[
 [["",[1,0]]],
 [["2B2[a]","1"]],
 [["2B2[b]","1"]],
 [["",[1,4,1]]],
 [["",[2,1]]],
 [["",[2,3]]],
 [["",[2,2]]],
 [["2F4","c1"]],
 [["2F4","c2"]],
 [["2F4","c3"]],
 [["2F4","c4"]],
 [["2F4","c5"]],
 [["2F4","c6"]],
 [["2F4","c7"]],
 [["2F4","c8"]],
 [["2F4","c9"]],
 [["2F4","c10"]],
 [["",[1,4,2]]],
 [["2B2[a]","eps"]],
 [["2B2[b]","eps"]],
 [["",[1,8]]]
]);

###############
###   d=1
H:=Hecke(CoxeterGroup("I",2,8),[[1,-x^2],[1,-x^4]]);
bl4:=[[1,2,3,4,6]];
bl8:=[[1,2,3,4,7]]; #For x=E(8),E(8)^7
bl8b:=[[1,2,3,4,5]]; #For x=E(8)^3,E(8)^5
bl12:=[[1,4,6]];
bl24:=[[1,4,5]];   #For x=E(24),E(24)^7,E(24)^17,E(24)^23
bl24b:=[[1,4,7]];  #For x=E(24)^5,E(24)^11,E(24)^13,E(24)^19

degs:=List(SchurElements(H),i->(x^2-1)*(x^6+1)*(x^8-1)*(x^12+1)/(x^2-1)^2/i);

BlockIntersection(bl4);
BlockIntersection(bl8);
BlockIntersection(bl8b);
BlockIntersection(bl12);
BlockIntersection(bl24);
BlockIntersection(bl24b);


###############
###   d=4
H:=Hecke(ComplexReflectionGroup(12),[[1,x^2]]);
bl1:= [[ 1, 2, 4, 6, 7 ] ];
bl8:= [[ 1, 2, 3, 6, 7, 8 ] ]; #For x=E(8), E(8)^7
bl8b:=[[ 1, 2, 5, 6, 7, 8 ] ]; #For x=E(8)^3, E(8)^5
bl12:=[[ 1, 2, 4 ] ];
bl24:=[[ 1, 2, 3 ] ]; #For x=E(24),E(24)^7,E(24)^17,E(24)^23
bl24b:=[[ 1, 2, 5 ] ]; #For x=E(24)^5,E(24)^11,E(24)^13,E(24)^19

degs:=List(SchurElements(H),i->(x^2-1)*(x^6+1)*(x^8-1)*(x^12+1)/(x^2+1)^2/i);

BlockIntersection(bl1);
BlockIntersection(bl8);
BlockIntersection(bl8b);
BlockIntersection(bl12);
BlockIntersection(bl24);
BlockIntersection(bl24b);


###############
###   d=8
H:=Hecke(ComplexReflectionGroup(8),[[1,E(8)^3*x,E(8)^5*x,x^2]]);
bl1:= [[ 1, 4, 11, 14, 15 ] ,[ 5, 9 ],[ 6, 10 ] ];
bl4:=[ [ 1, 4, 8, 11, 14, 16 ] ];
bl8b:=[[ 1, 3, 9, 11, 13 ] ,[ 2, 4, 6, 12, 14 ] ,[ 5, 7, 8, 10, ] ]; #For E(8)^3
bl8b:=[[ 1, 2, 10, 11, 12 ] ,[ 3, 4, 5, 13, 14 ] , [ 6, 7, 8, 9 ] ]; #For E(8)^5
bl12:=[ [ 1, 4, 7 ] ];
bl24:=[ [ 1, 9, 13 ] , [ 4, 6, 12 ], [ 5, 10, 16 ] ]; #For x=E(24), E(24)^17
bl24b:=[ [ 1, 10, 12 ], [ 4, 5, 13 ], [ 6, 9, 16 ] ]; #For x=E(24)^7, E(24)^23
bl24c:= [[ 1, 3, 6 ] , [ 2, 4, 9 ] , [ 5, 10, 15 ] ]; #For x=E(24)^5, E(24)^13
bl24d:=[[ 1, 2, 5 ], [ 3, 4, 10 ] , [ 6, 9, 15 ] ]; #For x=E(24)^11, E(24)^19

degs:=List(SchurElements(H),i->(x^2-1)*(x^6+1)*(x^8-1)*(x^12+1)/(x-E(8)^7)^2/(x-E(8))^2/i);;

BlockIntersection(bl1);
BlockIntersection(bl4);
BlockIntersection(bl8b);
BlockIntersection(bl12);
BlockIntersection(bl24);



###############
###   d=12
H:=Hecke(ComplexReflectionGroup(6,1,1),[[1,-E(3)*x^4,-E(3)^2*x^4,x^4,-x^4,x^8]]);
bl1:=[[1,4,6]];;
bl4:=[[1,4,6]];;
bl8:=[[1,5,6]];;
bl24:=[[1,2],[3,6]];;
bl24b:=[[1,3],[2,6]];;

degs:=List(SchurElements(H),i->(x^2-1)*(x^6+1)*(x^8-1)*(x^12+1)/(x^4-x^2+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl4);
BlockIntersection(bl8);
BlockIntersection(bl24);
BlockIntersection(bl24b);



###############
###   d=24
H:=Hecke(ComplexReflectionGroup(12,1,1),[[1,E(8)^3*x,E(8)^5*x,x^2,-x^2,E(4)*x^2,-E(4)*x^2,-E(3)*x^2,-E(3)^2*x^2,E(8)^3*x^3,E(8)^5*x^3,x^4]]);
bl1:=[[1,4,12],[2,10],[3,11]];;
bl4:=[[1,5,12]];;
bl8:=[[1,7,11],[2,6,12],[3,5,10]];;
bl8c:=[[1,3,6],[7,10,12],[2,4,11]];;  # E(8)^3
bl12:=[[1,8],[9,12]];;  # -E(12)^7
bl12b:=[[1,9],[8,12]];;  # -E(12)^11
bl24:=[[1,10],[8,11],[2,9],[3,12]];;  # -E(24)^17
bl24b:=[[1,10],[3,12],[9,11],[2,8]];;  # -E(24)
bl24c:=[[1,11],[3,9],[8,10],[2,12]];;  # E(24)^11
bl24d:=[[1,11],[2,12],[3,8],[9,10]];;  # E(24)^19

degs:=List(SchurElements(H),i->(x^2-1)*(x^6+1)*(x^8-1)*(x^12+1)/(x^4+(-E(8)+E(8)^3)*x^3+x^2+(-E(8)+E(8)^3)*x+1)/i);;

BlockIntersection(bl1);
BlockIntersection(bl4);
BlockIntersection(bl8);
BlockIntersection(bl8c);
BlockIntersection(bl12);
BlockIntersection(bl12b);
BlockIntersection(bl24);
BlockIntersection(bl24b);
BlockIntersection(bl24c);
BlockIntersection(bl24d);




ordspez:=24; sizecyc:=4;
for i in [0..ordspez-1] do
 ls:=List(l,j->Value(j,E(ordspez)^i));
 m:=List([0..ordspez-1],j->Filtered([1..sizecyc],k->ls[k]=E(ordspez)^j));
   Print(E(ordspez)^i,":= ",Filtered(m,j->j<>[]),"\n");
od;
